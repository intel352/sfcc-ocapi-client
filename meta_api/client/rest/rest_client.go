// Code generated by go-swagger; DO NOT EDIT.

package rest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new rest API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for rest API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetRest Lists all existing APIs and the links to their meta data.
*/
func (a *Client) GetRest(params *GetRestParams, authInfo runtime.ClientAuthInfoWriter) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRestParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRest",
		Method:             "GET",
		PathPattern:        "/rest",
		ProducesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRestReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil

}

/*
GetRestByID Retrieves all existing versions and their status for a given API. Also
 this will retrieve the link to the swagger document for the API and the
 version.
*/
func (a *Client) GetRestByID(params *GetRestByIDParams, authInfo runtime.ClientAuthInfoWriter) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRestByIDParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRestByID",
		Method:             "GET",
		PathPattern:        "/rest/{api_name}",
		ProducesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRestByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil

}

/*
GetRestByIDByID Retrieves the swagger documentation object for an API and a version. Included
 are all resource descriptions and all documents which are referenced by them.
 Note that you have to access Shop API meta data always in a site context, to
 access resources, valid for your client.
*/
func (a *Client) GetRestByIDByID(params *GetRestByIDByIDParams, authInfo runtime.ClientAuthInfoWriter) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRestByIDByIDParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRestByIDByID",
		Method:             "GET",
		PathPattern:        "/rest/{api_name}/{version}",
		ProducesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRestByIDByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil

}

/*
GetRestByIDByIDDocuments Retrieves a list of all documents, available for an API and version, and
 the links to their detailed meta data.
*/
func (a *Client) GetRestByIDByIDDocuments(params *GetRestByIDByIDDocumentsParams, authInfo runtime.ClientAuthInfoWriter) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRestByIDByIDDocumentsParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRestByIDByIDDocuments",
		Method:             "GET",
		PathPattern:        "/rest/{api_name}/{version}/documents",
		ProducesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRestByIDByIDDocumentsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil

}

/*
GetRestByIDByIDDocumentsByID Retrieves the meta data for a single document in a version and API. The
 children query parameter will include all child documents
 recursively, if it is set to embedded. Otherwise the meta data
 will contain http links to the child document description.
*/
func (a *Client) GetRestByIDByIDDocumentsByID(params *GetRestByIDByIDDocumentsByIDParams, authInfo runtime.ClientAuthInfoWriter) error {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetRestByIDByIDDocumentsByIDParams()
	}

	_, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getRestByIDByIDDocumentsByID",
		Method:             "GET",
		PathPattern:        "/rest/{api_name}/{version}/documents/{document_id}",
		ProducesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		ConsumesMediaTypes: []string{"application/json", "application/xml", "text/xml"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetRestByIDByIDDocumentsByIDReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return err
	}
	return nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
