// Code generated by go-swagger; DO NOT EDIT.

package rest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetRestByIDParams creates a new GetRestByIDParams object
// with the default values initialized.
func NewGetRestByIDParams() *GetRestByIDParams {
	var ()
	return &GetRestByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRestByIDParamsWithTimeout creates a new GetRestByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRestByIDParamsWithTimeout(timeout time.Duration) *GetRestByIDParams {
	var ()
	return &GetRestByIDParams{

		timeout: timeout,
	}
}

// NewGetRestByIDParamsWithContext creates a new GetRestByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRestByIDParamsWithContext(ctx context.Context) *GetRestByIDParams {
	var ()
	return &GetRestByIDParams{

		Context: ctx,
	}
}

// NewGetRestByIDParamsWithHTTPClient creates a new GetRestByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRestByIDParamsWithHTTPClient(client *http.Client) *GetRestByIDParams {
	var ()
	return &GetRestByIDParams{
		HTTPClient: client,
	}
}

/*GetRestByIDParams contains all the parameters to send to the API endpoint
for the get rest by ID operation typically these are written to a http.Request
*/
type GetRestByIDParams struct {

	/*APIName
	  the name of the API

	*/
	APIName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get rest by ID params
func (o *GetRestByIDParams) WithTimeout(timeout time.Duration) *GetRestByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get rest by ID params
func (o *GetRestByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get rest by ID params
func (o *GetRestByIDParams) WithContext(ctx context.Context) *GetRestByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get rest by ID params
func (o *GetRestByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get rest by ID params
func (o *GetRestByIDParams) WithHTTPClient(client *http.Client) *GetRestByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get rest by ID params
func (o *GetRestByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAPIName adds the aPIName to the get rest by ID params
func (o *GetRestByIDParams) WithAPIName(aPIName string) *GetRestByIDParams {
	o.SetAPIName(aPIName)
	return o
}

// SetAPIName adds the apiName to the get rest by ID params
func (o *GetRestByIDParams) SetAPIName(aPIName string) {
	o.APIName = aPIName
}

// WriteToRequest writes these params to a swagger request
func (o *GetRestByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param api_name
	if err := r.SetPathParam("api_name", o.APIName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
