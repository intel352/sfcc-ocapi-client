// Code generated by go-swagger; DO NOT EDIT.

package code_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteCodeVersionsByIDReader is a Reader for the DeleteCodeVersionsByID structure.
type DeleteCodeVersionsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCodeVersionsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteCodeVersionsByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteCodeVersionsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteCodeVersionsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteCodeVersionsByIDNoContent creates a DeleteCodeVersionsByIDNoContent with default headers values
func NewDeleteCodeVersionsByIDNoContent() *DeleteCodeVersionsByIDNoContent {
	return &DeleteCodeVersionsByIDNoContent{}
}

/*DeleteCodeVersionsByIDNoContent handles this case with default header values.

DeleteCodeVersionsByIDNoContent delete code versions by Id no content
*/
type DeleteCodeVersionsByIDNoContent struct {
}

func (o *DeleteCodeVersionsByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /code_versions/{code_version_id}][%d] deleteCodeVersionsByIdNoContent ", 204)
}

func (o *DeleteCodeVersionsByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCodeVersionsByIDBadRequest creates a DeleteCodeVersionsByIDBadRequest with default headers values
func NewDeleteCodeVersionsByIDBadRequest() *DeleteCodeVersionsByIDBadRequest {
	return &DeleteCodeVersionsByIDBadRequest{}
}

/*DeleteCodeVersionsByIDBadRequest handles this case with default header values.

Indicates that a code version with the given id can't be
         deleted (because it is active).
*/
type DeleteCodeVersionsByIDBadRequest struct {
}

func (o *DeleteCodeVersionsByIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /code_versions/{code_version_id}][%d] deleteCodeVersionsByIdBadRequest ", 400)
}

func (o *DeleteCodeVersionsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCodeVersionsByIDNotFound creates a DeleteCodeVersionsByIDNotFound with default headers values
func NewDeleteCodeVersionsByIDNotFound() *DeleteCodeVersionsByIDNotFound {
	return &DeleteCodeVersionsByIDNotFound{}
}

/*DeleteCodeVersionsByIDNotFound handles this case with default header values.

Indicates that a code version with the given id was not found.
*/
type DeleteCodeVersionsByIDNotFound struct {
}

func (o *DeleteCodeVersionsByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /code_versions/{code_version_id}][%d] deleteCodeVersionsByIdNotFound ", 404)
}

func (o *DeleteCodeVersionsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
