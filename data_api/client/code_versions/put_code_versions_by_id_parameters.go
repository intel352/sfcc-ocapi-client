// Code generated by go-swagger; DO NOT EDIT.

package code_versions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutCodeVersionsByIDParams creates a new PutCodeVersionsByIDParams object
// with the default values initialized.
func NewPutCodeVersionsByIDParams() *PutCodeVersionsByIDParams {
	var ()
	return &PutCodeVersionsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutCodeVersionsByIDParamsWithTimeout creates a new PutCodeVersionsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutCodeVersionsByIDParamsWithTimeout(timeout time.Duration) *PutCodeVersionsByIDParams {
	var ()
	return &PutCodeVersionsByIDParams{

		timeout: timeout,
	}
}

// NewPutCodeVersionsByIDParamsWithContext creates a new PutCodeVersionsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutCodeVersionsByIDParamsWithContext(ctx context.Context) *PutCodeVersionsByIDParams {
	var ()
	return &PutCodeVersionsByIDParams{

		Context: ctx,
	}
}

// NewPutCodeVersionsByIDParamsWithHTTPClient creates a new PutCodeVersionsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutCodeVersionsByIDParamsWithHTTPClient(client *http.Client) *PutCodeVersionsByIDParams {
	var ()
	return &PutCodeVersionsByIDParams{
		HTTPClient: client,
	}
}

/*PutCodeVersionsByIDParams contains all the parameters to send to the API endpoint
for the put code versions by ID operation typically these are written to a http.Request
*/
type PutCodeVersionsByIDParams struct {

	/*CodeVersionID
	  The id of the code version.

	*/
	CodeVersionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put code versions by ID params
func (o *PutCodeVersionsByIDParams) WithTimeout(timeout time.Duration) *PutCodeVersionsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put code versions by ID params
func (o *PutCodeVersionsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put code versions by ID params
func (o *PutCodeVersionsByIDParams) WithContext(ctx context.Context) *PutCodeVersionsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put code versions by ID params
func (o *PutCodeVersionsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put code versions by ID params
func (o *PutCodeVersionsByIDParams) WithHTTPClient(client *http.Client) *PutCodeVersionsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put code versions by ID params
func (o *PutCodeVersionsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCodeVersionID adds the codeVersionID to the put code versions by ID params
func (o *PutCodeVersionsByIDParams) WithCodeVersionID(codeVersionID string) *PutCodeVersionsByIDParams {
	o.SetCodeVersionID(codeVersionID)
	return o
}

// SetCodeVersionID adds the codeVersionId to the put code versions by ID params
func (o *PutCodeVersionsByIDParams) SetCodeVersionID(codeVersionID string) {
	o.CodeVersionID = codeVersionID
}

// WriteToRequest writes these params to a swagger request
func (o *PutCodeVersionsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param code_version_id
	if err := r.SetPathParam("code_version_id", o.CodeVersionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
