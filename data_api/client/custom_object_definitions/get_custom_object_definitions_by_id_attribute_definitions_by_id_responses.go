// Code generated by go-swagger; DO NOT EDIT.

package custom_object_definitions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDReader is a Reader for the GetCustomObjectDefinitionsByIDAttributeDefinitionsByID structure.
type GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound creates a GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound with default headers values
func NewGetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound() *GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound {
	return &GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound{}
}

/*GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound handles this case with default header values.

Thrown in case the object type cannot be found or Thrown in case the attribute definition does not exist matching the given id
*/
type GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound struct {
}

func (o *GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /custom_object_definitions/{object_type}/attribute_definitions/{id}][%d] getCustomObjectDefinitionsByIdAttributeDefinitionsByIdNotFound ", 404)
}

func (o *GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault creates a GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault with default headers values
func NewGetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault(code int) *GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault {
	return &GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault{
		_statusCode: code,
	}
}

/*GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault handles this case with default header values.

GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault get custom object definitions by ID attribute definitions by ID default
*/
type GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault struct {
	_statusCode int

	Payload *models.ObjectAttributeDefinition
}

// Code gets the status code for the get custom object definitions by ID attribute definitions by ID default response
func (o *GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault) Error() string {
	return fmt.Sprintf("[GET /custom_object_definitions/{object_type}/attribute_definitions/{id}][%d] getCustomObjectDefinitionsByIDAttributeDefinitionsByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetCustomObjectDefinitionsByIDAttributeDefinitionsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ObjectAttributeDefinition)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
