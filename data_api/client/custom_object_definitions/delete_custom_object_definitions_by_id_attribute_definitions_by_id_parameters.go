// Code generated by go-swagger; DO NOT EDIT.

package custom_object_definitions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams creates a new DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams object
// with the default values initialized.
func NewDeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams() *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams {
	var ()
	return &DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParamsWithTimeout creates a new DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParamsWithTimeout(timeout time.Duration) *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams {
	var ()
	return &DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams{

		timeout: timeout,
	}
}

// NewDeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParamsWithContext creates a new DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParamsWithContext(ctx context.Context) *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams {
	var ()
	return &DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams{

		Context: ctx,
	}
}

// NewDeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParamsWithHTTPClient creates a new DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParamsWithHTTPClient(client *http.Client) *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams {
	var ()
	return &DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams{
		HTTPClient: client,
	}
}

/*DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams contains all the parameters to send to the API endpoint
for the delete custom object definitions by ID attribute definitions by ID operation typically these are written to a http.Request
*/
type DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams struct {

	/*ID
	  Attribute definition id to remove

	*/
	ID string
	/*ObjectType
	  The metadata object that contains these definitions

	*/
	ObjectType string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) WithTimeout(timeout time.Duration) *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) WithContext(ctx context.Context) *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) WithHTTPClient(client *http.Client) *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) WithID(id string) *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) SetID(id string) {
	o.ID = id
}

// WithObjectType adds the objectType to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) WithObjectType(objectType string) *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams {
	o.SetObjectType(objectType)
	return o
}

// SetObjectType adds the objectType to the delete custom object definitions by ID attribute definitions by ID params
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) SetObjectType(objectType string) {
	o.ObjectType = objectType
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteCustomObjectDefinitionsByIDAttributeDefinitionsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param object_type
	if err := r.SetPathParam("object_type", o.ObjectType); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
