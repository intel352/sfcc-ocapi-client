// Code generated by go-swagger; DO NOT EDIT.

package inventory_list_search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PostInventoryListSearchReader is a Reader for the PostInventoryListSearch structure.
type PostInventoryListSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostInventoryListSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPostInventoryListSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostInventoryListSearchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostInventoryListSearchBadRequest creates a PostInventoryListSearchBadRequest with default headers values
func NewPostInventoryListSearchBadRequest() *PostInventoryListSearchBadRequest {
	return &PostInventoryListSearchBadRequest{}
}

/*PostInventoryListSearchBadRequest handles this case with default header values.

Thrown if the query is ill-formed. or Thrown if the given selector is invalid.
*/
type PostInventoryListSearchBadRequest struct {
}

func (o *PostInventoryListSearchBadRequest) Error() string {
	return fmt.Sprintf("[POST /inventory_list_search][%d] postInventoryListSearchBadRequest ", 400)
}

func (o *PostInventoryListSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostInventoryListSearchDefault creates a PostInventoryListSearchDefault with default headers values
func NewPostInventoryListSearchDefault(code int) *PostInventoryListSearchDefault {
	return &PostInventoryListSearchDefault{
		_statusCode: code,
	}
}

/*PostInventoryListSearchDefault handles this case with default header values.

PostInventoryListSearchDefault post inventory list search default
*/
type PostInventoryListSearchDefault struct {
	_statusCode int

	Payload *models.InventoryListSearchResult
}

// Code gets the status code for the post inventory list search default response
func (o *PostInventoryListSearchDefault) Code() int {
	return o._statusCode
}

func (o *PostInventoryListSearchDefault) Error() string {
	return fmt.Sprintf("[POST /inventory_list_search][%d] postInventoryListSearch default  %+v", o._statusCode, o.Payload)
}

func (o *PostInventoryListSearchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InventoryListSearchResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
