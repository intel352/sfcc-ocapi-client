// Code generated by go-swagger; DO NOT EDIT.

package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetCatalogsByIDCategoriesByIDProductsByIDReader is a Reader for the GetCatalogsByIDCategoriesByIDProductsByID structure.
type GetCatalogsByIDCategoriesByIDProductsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCatalogsByIDCategoriesByIDProductsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetCatalogsByIDCategoriesByIDProductsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCatalogsByIDCategoriesByIDProductsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCatalogsByIDCategoriesByIDProductsByIDNotFound creates a GetCatalogsByIDCategoriesByIDProductsByIDNotFound with default headers values
func NewGetCatalogsByIDCategoriesByIDProductsByIDNotFound() *GetCatalogsByIDCategoriesByIDProductsByIDNotFound {
	return &GetCatalogsByIDCategoriesByIDProductsByIDNotFound{}
}

/*GetCatalogsByIDCategoriesByIDProductsByIDNotFound handles this case with default header values.

Thrown if the category does not exist matching the given id. or Thrown if the catalog does not exist matching the given id. or Thrown if the product does not exist matching the given id. or Thrown if the category product assignment does not exist matching the given ids.
*/
type GetCatalogsByIDCategoriesByIDProductsByIDNotFound struct {
}

func (o *GetCatalogsByIDCategoriesByIDProductsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /catalogs/{catalog_id}/categories/{category_id}/products/{product_id}][%d] getCatalogsByIdCategoriesByIdProductsByIdNotFound ", 404)
}

func (o *GetCatalogsByIDCategoriesByIDProductsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCatalogsByIDCategoriesByIDProductsByIDDefault creates a GetCatalogsByIDCategoriesByIDProductsByIDDefault with default headers values
func NewGetCatalogsByIDCategoriesByIDProductsByIDDefault(code int) *GetCatalogsByIDCategoriesByIDProductsByIDDefault {
	return &GetCatalogsByIDCategoriesByIDProductsByIDDefault{
		_statusCode: code,
	}
}

/*GetCatalogsByIDCategoriesByIDProductsByIDDefault handles this case with default header values.

GetCatalogsByIDCategoriesByIDProductsByIDDefault get catalogs by ID categories by ID products by ID default
*/
type GetCatalogsByIDCategoriesByIDProductsByIDDefault struct {
	_statusCode int

	Payload *models.CategoryProductAssignment
}

// Code gets the status code for the get catalogs by ID categories by ID products by ID default response
func (o *GetCatalogsByIDCategoriesByIDProductsByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetCatalogsByIDCategoriesByIDProductsByIDDefault) Error() string {
	return fmt.Sprintf("[GET /catalogs/{catalog_id}/categories/{category_id}/products/{product_id}][%d] getCatalogsByIDCategoriesByIDProductsByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetCatalogsByIDCategoriesByIDProductsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CategoryProductAssignment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
