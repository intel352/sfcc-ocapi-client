// Code generated by go-swagger; DO NOT EDIT.

package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// NewPatchCatalogsByIDCategoriesByIDParams creates a new PatchCatalogsByIDCategoriesByIDParams object
// with the default values initialized.
func NewPatchCatalogsByIDCategoriesByIDParams() *PatchCatalogsByIDCategoriesByIDParams {
	var ()
	return &PatchCatalogsByIDCategoriesByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchCatalogsByIDCategoriesByIDParamsWithTimeout creates a new PatchCatalogsByIDCategoriesByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchCatalogsByIDCategoriesByIDParamsWithTimeout(timeout time.Duration) *PatchCatalogsByIDCategoriesByIDParams {
	var ()
	return &PatchCatalogsByIDCategoriesByIDParams{

		timeout: timeout,
	}
}

// NewPatchCatalogsByIDCategoriesByIDParamsWithContext creates a new PatchCatalogsByIDCategoriesByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchCatalogsByIDCategoriesByIDParamsWithContext(ctx context.Context) *PatchCatalogsByIDCategoriesByIDParams {
	var ()
	return &PatchCatalogsByIDCategoriesByIDParams{

		Context: ctx,
	}
}

// NewPatchCatalogsByIDCategoriesByIDParamsWithHTTPClient creates a new PatchCatalogsByIDCategoriesByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchCatalogsByIDCategoriesByIDParamsWithHTTPClient(client *http.Client) *PatchCatalogsByIDCategoriesByIDParams {
	var ()
	return &PatchCatalogsByIDCategoriesByIDParams{
		HTTPClient: client,
	}
}

/*PatchCatalogsByIDCategoriesByIDParams contains all the parameters to send to the API endpoint
for the patch catalogs by ID categories by ID operation typically these are written to a http.Request
*/
type PatchCatalogsByIDCategoriesByIDParams struct {

	/*Body*/
	Body *models.Category
	/*CatalogID
	  The id of the catalog.

	*/
	CatalogID string
	/*CategoryID
	  The id of the category

	*/
	CategoryID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) WithTimeout(timeout time.Duration) *PatchCatalogsByIDCategoriesByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) WithContext(ctx context.Context) *PatchCatalogsByIDCategoriesByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) WithHTTPClient(client *http.Client) *PatchCatalogsByIDCategoriesByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) WithBody(body *models.Category) *PatchCatalogsByIDCategoriesByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) SetBody(body *models.Category) {
	o.Body = body
}

// WithCatalogID adds the catalogID to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) WithCatalogID(catalogID string) *PatchCatalogsByIDCategoriesByIDParams {
	o.SetCatalogID(catalogID)
	return o
}

// SetCatalogID adds the catalogId to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) SetCatalogID(catalogID string) {
	o.CatalogID = catalogID
}

// WithCategoryID adds the categoryID to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) WithCategoryID(categoryID string) *PatchCatalogsByIDCategoriesByIDParams {
	o.SetCategoryID(categoryID)
	return o
}

// SetCategoryID adds the categoryId to the patch catalogs by ID categories by ID params
func (o *PatchCatalogsByIDCategoriesByIDParams) SetCategoryID(categoryID string) {
	o.CategoryID = categoryID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchCatalogsByIDCategoriesByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param catalog_id
	if err := r.SetPathParam("catalog_id", o.CatalogID); err != nil {
		return err
	}

	// path param category_id
	if err := r.SetPathParam("category_id", o.CategoryID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
