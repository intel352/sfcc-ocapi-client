// Code generated by go-swagger; DO NOT EDIT.

package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetCatalogsByIDSharedVariationAttributesByIDValuesByIDReader is a Reader for the GetCatalogsByIDSharedVariationAttributesByIDValuesByID structure.
type GetCatalogsByIDSharedVariationAttributesByIDValuesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCatalogsByIDSharedVariationAttributesByIDValuesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound creates a GetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound with default headers values
func NewGetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound() *GetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound {
	return &GetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound{}
}

/*GetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound handles this case with default header values.

Indicates the catalog is not found. or Indicate the variation attribute is not found or Indicate the variation attribute value is not found
*/
type GetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound struct {
}

func (o *GetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /catalogs/{catalog_id}/shared_variation_attributes/{attribute_id}/values/{id}][%d] getCatalogsByIdSharedVariationAttributesByIdValuesByIdNotFound ", 404)
}

func (o *GetCatalogsByIDSharedVariationAttributesByIDValuesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault creates a GetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault with default headers values
func NewGetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault(code int) *GetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault {
	return &GetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault{
		_statusCode: code,
	}
}

/*GetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault handles this case with default header values.

GetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault get catalogs by ID shared variation attributes by ID values by ID default
*/
type GetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault struct {
	_statusCode int

	Payload *models.VariationAttributeValue
}

// Code gets the status code for the get catalogs by ID shared variation attributes by ID values by ID default response
func (o *GetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault) Error() string {
	return fmt.Sprintf("[GET /catalogs/{catalog_id}/shared_variation_attributes/{attribute_id}/values/{id}][%d] getCatalogsByIDSharedVariationAttributesByIDValuesByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetCatalogsByIDSharedVariationAttributesByIDValuesByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VariationAttributeValue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
