// Code generated by go-swagger; DO NOT EDIT.

package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// NewPutCatalogsByIDCategoriesByIDProductsByIDParams creates a new PutCatalogsByIDCategoriesByIDProductsByIDParams object
// with the default values initialized.
func NewPutCatalogsByIDCategoriesByIDProductsByIDParams() *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	var ()
	return &PutCatalogsByIDCategoriesByIDProductsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutCatalogsByIDCategoriesByIDProductsByIDParamsWithTimeout creates a new PutCatalogsByIDCategoriesByIDProductsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutCatalogsByIDCategoriesByIDProductsByIDParamsWithTimeout(timeout time.Duration) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	var ()
	return &PutCatalogsByIDCategoriesByIDProductsByIDParams{

		timeout: timeout,
	}
}

// NewPutCatalogsByIDCategoriesByIDProductsByIDParamsWithContext creates a new PutCatalogsByIDCategoriesByIDProductsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutCatalogsByIDCategoriesByIDProductsByIDParamsWithContext(ctx context.Context) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	var ()
	return &PutCatalogsByIDCategoriesByIDProductsByIDParams{

		Context: ctx,
	}
}

// NewPutCatalogsByIDCategoriesByIDProductsByIDParamsWithHTTPClient creates a new PutCatalogsByIDCategoriesByIDProductsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutCatalogsByIDCategoriesByIDProductsByIDParamsWithHTTPClient(client *http.Client) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	var ()
	return &PutCatalogsByIDCategoriesByIDProductsByIDParams{
		HTTPClient: client,
	}
}

/*PutCatalogsByIDCategoriesByIDProductsByIDParams contains all the parameters to send to the API endpoint
for the put catalogs by ID categories by ID products by ID operation typically these are written to a http.Request
*/
type PutCatalogsByIDCategoriesByIDProductsByIDParams struct {

	/*Body*/
	Body *models.CategoryProductAssignment
	/*CatalogID
	  The id of the requested catalog to which to assign the product.

	*/
	CatalogID string
	/*CategoryID
	  The id of the requested category to which to assign the product.

	*/
	CategoryID string
	/*ProductID
	  The id (SKU) of the requested product to assign.

	*/
	ProductID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) WithTimeout(timeout time.Duration) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) WithContext(ctx context.Context) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) WithHTTPClient(client *http.Client) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) WithBody(body *models.CategoryProductAssignment) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) SetBody(body *models.CategoryProductAssignment) {
	o.Body = body
}

// WithCatalogID adds the catalogID to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) WithCatalogID(catalogID string) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	o.SetCatalogID(catalogID)
	return o
}

// SetCatalogID adds the catalogId to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) SetCatalogID(catalogID string) {
	o.CatalogID = catalogID
}

// WithCategoryID adds the categoryID to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) WithCategoryID(categoryID string) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	o.SetCategoryID(categoryID)
	return o
}

// SetCategoryID adds the categoryId to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) SetCategoryID(categoryID string) {
	o.CategoryID = categoryID
}

// WithProductID adds the productID to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) WithProductID(productID string) *PutCatalogsByIDCategoriesByIDProductsByIDParams {
	o.SetProductID(productID)
	return o
}

// SetProductID adds the productId to the put catalogs by ID categories by ID products by ID params
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) SetProductID(productID string) {
	o.ProductID = productID
}

// WriteToRequest writes these params to a swagger request
func (o *PutCatalogsByIDCategoriesByIDProductsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param catalog_id
	if err := r.SetPathParam("catalog_id", o.CatalogID); err != nil {
		return err
	}

	// path param category_id
	if err := r.SetPathParam("category_id", o.CategoryID); err != nil {
		return err
	}

	// path param product_id
	if err := r.SetPathParam("product_id", o.ProductID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
