// Code generated by go-swagger; DO NOT EDIT.

package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// NewPatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams creates a new PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams object
// with the default values initialized.
func NewPatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams() *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	var ()
	return &PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchCatalogsByIDSharedProductOptionsByIDValuesByIDParamsWithTimeout creates a new PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchCatalogsByIDSharedProductOptionsByIDValuesByIDParamsWithTimeout(timeout time.Duration) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	var ()
	return &PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams{

		timeout: timeout,
	}
}

// NewPatchCatalogsByIDSharedProductOptionsByIDValuesByIDParamsWithContext creates a new PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchCatalogsByIDSharedProductOptionsByIDValuesByIDParamsWithContext(ctx context.Context) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	var ()
	return &PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams{

		Context: ctx,
	}
}

// NewPatchCatalogsByIDSharedProductOptionsByIDValuesByIDParamsWithHTTPClient creates a new PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchCatalogsByIDSharedProductOptionsByIDValuesByIDParamsWithHTTPClient(client *http.Client) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	var ()
	return &PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams{
		HTTPClient: client,
	}
}

/*PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams contains all the parameters to send to the API endpoint
for the patch catalogs by ID shared product options by ID values by ID operation typically these are written to a http.Request
*/
type PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams struct {

	/*Body*/
	Body *models.ProductOptionValue
	/*CatalogID
	  The id of the catalog.

	*/
	CatalogID string
	/*ID
	  The id of the shared product option value.

	*/
	ID string
	/*OptionID
	  The id of the shared product option.

	*/
	OptionID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) WithTimeout(timeout time.Duration) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) WithContext(ctx context.Context) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) WithHTTPClient(client *http.Client) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) WithBody(body *models.ProductOptionValue) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) SetBody(body *models.ProductOptionValue) {
	o.Body = body
}

// WithCatalogID adds the catalogID to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) WithCatalogID(catalogID string) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	o.SetCatalogID(catalogID)
	return o
}

// SetCatalogID adds the catalogId to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) SetCatalogID(catalogID string) {
	o.CatalogID = catalogID
}

// WithID adds the id to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) WithID(id string) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) SetID(id string) {
	o.ID = id
}

// WithOptionID adds the optionID to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) WithOptionID(optionID string) *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams {
	o.SetOptionID(optionID)
	return o
}

// SetOptionID adds the optionId to the patch catalogs by ID shared product options by ID values by ID params
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) SetOptionID(optionID string) {
	o.OptionID = optionID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchCatalogsByIDSharedProductOptionsByIDValuesByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param catalog_id
	if err := r.SetPathParam("catalog_id", o.CatalogID); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param option_id
	if err := r.SetPathParam("option_id", o.OptionID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
