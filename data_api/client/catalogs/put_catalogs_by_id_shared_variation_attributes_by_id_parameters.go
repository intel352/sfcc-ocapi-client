// Code generated by go-swagger; DO NOT EDIT.

package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// NewPutCatalogsByIDSharedVariationAttributesByIDParams creates a new PutCatalogsByIDSharedVariationAttributesByIDParams object
// with the default values initialized.
func NewPutCatalogsByIDSharedVariationAttributesByIDParams() *PutCatalogsByIDSharedVariationAttributesByIDParams {
	var ()
	return &PutCatalogsByIDSharedVariationAttributesByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutCatalogsByIDSharedVariationAttributesByIDParamsWithTimeout creates a new PutCatalogsByIDSharedVariationAttributesByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutCatalogsByIDSharedVariationAttributesByIDParamsWithTimeout(timeout time.Duration) *PutCatalogsByIDSharedVariationAttributesByIDParams {
	var ()
	return &PutCatalogsByIDSharedVariationAttributesByIDParams{

		timeout: timeout,
	}
}

// NewPutCatalogsByIDSharedVariationAttributesByIDParamsWithContext creates a new PutCatalogsByIDSharedVariationAttributesByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutCatalogsByIDSharedVariationAttributesByIDParamsWithContext(ctx context.Context) *PutCatalogsByIDSharedVariationAttributesByIDParams {
	var ()
	return &PutCatalogsByIDSharedVariationAttributesByIDParams{

		Context: ctx,
	}
}

// NewPutCatalogsByIDSharedVariationAttributesByIDParamsWithHTTPClient creates a new PutCatalogsByIDSharedVariationAttributesByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutCatalogsByIDSharedVariationAttributesByIDParamsWithHTTPClient(client *http.Client) *PutCatalogsByIDSharedVariationAttributesByIDParams {
	var ()
	return &PutCatalogsByIDSharedVariationAttributesByIDParams{
		HTTPClient: client,
	}
}

/*PutCatalogsByIDSharedVariationAttributesByIDParams contains all the parameters to send to the API endpoint
for the put catalogs by ID shared variation attributes by ID operation typically these are written to a http.Request
*/
type PutCatalogsByIDSharedVariationAttributesByIDParams struct {

	/*Body*/
	Body *models.VariationAttribute
	/*CatalogID
	  The id of the catalog.

	*/
	CatalogID string
	/*ID
	  The id of the variation attribute to create.

	*/
	ID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) WithTimeout(timeout time.Duration) *PutCatalogsByIDSharedVariationAttributesByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) WithContext(ctx context.Context) *PutCatalogsByIDSharedVariationAttributesByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) WithHTTPClient(client *http.Client) *PutCatalogsByIDSharedVariationAttributesByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) WithBody(body *models.VariationAttribute) *PutCatalogsByIDSharedVariationAttributesByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) SetBody(body *models.VariationAttribute) {
	o.Body = body
}

// WithCatalogID adds the catalogID to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) WithCatalogID(catalogID string) *PutCatalogsByIDSharedVariationAttributesByIDParams {
	o.SetCatalogID(catalogID)
	return o
}

// SetCatalogID adds the catalogId to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) SetCatalogID(catalogID string) {
	o.CatalogID = catalogID
}

// WithID adds the id to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) WithID(id string) *PutCatalogsByIDSharedVariationAttributesByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put catalogs by ID shared variation attributes by ID params
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) SetID(id string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PutCatalogsByIDSharedVariationAttributesByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param catalog_id
	if err := r.SetPathParam("catalog_id", o.CatalogID); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
