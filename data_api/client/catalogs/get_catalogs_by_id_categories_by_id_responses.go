// Code generated by go-swagger; DO NOT EDIT.

package catalogs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetCatalogsByIDCategoriesByIDReader is a Reader for the GetCatalogsByIDCategoriesByID structure.
type GetCatalogsByIDCategoriesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCatalogsByIDCategoriesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetCatalogsByIDCategoriesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCatalogsByIDCategoriesByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCatalogsByIDCategoriesByIDNotFound creates a GetCatalogsByIDCategoriesByIDNotFound with default headers values
func NewGetCatalogsByIDCategoriesByIDNotFound() *GetCatalogsByIDCategoriesByIDNotFound {
	return &GetCatalogsByIDCategoriesByIDNotFound{}
}

/*GetCatalogsByIDCategoriesByIDNotFound handles this case with default header values.

Indicates that the catalog is not provided in the request. or Indicates that the category does not exist for the catalog provided in
              the request.
*/
type GetCatalogsByIDCategoriesByIDNotFound struct {
}

func (o *GetCatalogsByIDCategoriesByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /catalogs/{catalog_id}/categories/{category_id}][%d] getCatalogsByIdCategoriesByIdNotFound ", 404)
}

func (o *GetCatalogsByIDCategoriesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCatalogsByIDCategoriesByIDDefault creates a GetCatalogsByIDCategoriesByIDDefault with default headers values
func NewGetCatalogsByIDCategoriesByIDDefault(code int) *GetCatalogsByIDCategoriesByIDDefault {
	return &GetCatalogsByIDCategoriesByIDDefault{
		_statusCode: code,
	}
}

/*GetCatalogsByIDCategoriesByIDDefault handles this case with default header values.

GetCatalogsByIDCategoriesByIDDefault get catalogs by ID categories by ID default
*/
type GetCatalogsByIDCategoriesByIDDefault struct {
	_statusCode int

	Payload *models.Category
}

// Code gets the status code for the get catalogs by ID categories by ID default response
func (o *GetCatalogsByIDCategoriesByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetCatalogsByIDCategoriesByIDDefault) Error() string {
	return fmt.Sprintf("[GET /catalogs/{catalog_id}/categories/{category_id}][%d] getCatalogsByIDCategoriesByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetCatalogsByIDCategoriesByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Category)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
