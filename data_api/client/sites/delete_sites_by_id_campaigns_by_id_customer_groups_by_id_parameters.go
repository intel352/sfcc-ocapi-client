// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams creates a new DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams object
// with the default values initialized.
func NewDeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams() *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	var ()
	return &DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteSitesByIDCampaignsByIDCustomerGroupsByIDParamsWithTimeout creates a new DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteSitesByIDCampaignsByIDCustomerGroupsByIDParamsWithTimeout(timeout time.Duration) *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	var ()
	return &DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams{

		timeout: timeout,
	}
}

// NewDeleteSitesByIDCampaignsByIDCustomerGroupsByIDParamsWithContext creates a new DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteSitesByIDCampaignsByIDCustomerGroupsByIDParamsWithContext(ctx context.Context) *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	var ()
	return &DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams{

		Context: ctx,
	}
}

// NewDeleteSitesByIDCampaignsByIDCustomerGroupsByIDParamsWithHTTPClient creates a new DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteSitesByIDCampaignsByIDCustomerGroupsByIDParamsWithHTTPClient(client *http.Client) *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	var ()
	return &DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams{
		HTTPClient: client,
	}
}

/*DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams contains all the parameters to send to the API endpoint
for the delete sites by ID campaigns by ID customer groups by ID operation typically these are written to a http.Request
*/
type DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams struct {

	/*CampaignID
	  The campaign ID that coupons are to be unbound from

	*/
	CampaignID string
	/*CustomerGroupID
	  The customer group ID to unbind from a campaign

	*/
	CustomerGroupID string
	/*SiteID*/
	SiteID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) WithTimeout(timeout time.Duration) *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) WithContext(ctx context.Context) *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) WithHTTPClient(client *http.Client) *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaignID adds the campaignID to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) WithCampaignID(campaignID string) *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) SetCampaignID(campaignID string) {
	o.CampaignID = campaignID
}

// WithCustomerGroupID adds the customerGroupID to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) WithCustomerGroupID(customerGroupID string) *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	o.SetCustomerGroupID(customerGroupID)
	return o
}

// SetCustomerGroupID adds the customerGroupId to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) SetCustomerGroupID(customerGroupID string) {
	o.CustomerGroupID = customerGroupID
}

// WithSiteID adds the siteID to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) WithSiteID(siteID string) *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the delete sites by ID campaigns by ID customer groups by ID params
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteSitesByIDCampaignsByIDCustomerGroupsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param campaign_id
	if err := r.SetPathParam("campaign_id", o.CampaignID); err != nil {
		return err
	}

	// path param customer_group_id
	if err := r.SetPathParam("customer_group_id", o.CustomerGroupID); err != nil {
		return err
	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
