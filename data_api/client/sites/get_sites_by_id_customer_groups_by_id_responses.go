// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetSitesByIDCustomerGroupsByIDReader is a Reader for the GetSitesByIDCustomerGroupsByID structure.
type GetSitesByIDCustomerGroupsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSitesByIDCustomerGroupsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetSitesByIDCustomerGroupsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetSitesByIDCustomerGroupsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSitesByIDCustomerGroupsByIDNotFound creates a GetSitesByIDCustomerGroupsByIDNotFound with default headers values
func NewGetSitesByIDCustomerGroupsByIDNotFound() *GetSitesByIDCustomerGroupsByIDNotFound {
	return &GetSitesByIDCustomerGroupsByIDNotFound{}
}

/*GetSitesByIDCustomerGroupsByIDNotFound handles this case with default header values.

Thrown in case the customer group does not exist matching the given id
*/
type GetSitesByIDCustomerGroupsByIDNotFound struct {
}

func (o *GetSitesByIDCustomerGroupsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /sites/{site_id}/customer_groups/{id}][%d] getSitesByIdCustomerGroupsByIdNotFound ", 404)
}

func (o *GetSitesByIDCustomerGroupsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSitesByIDCustomerGroupsByIDDefault creates a GetSitesByIDCustomerGroupsByIDDefault with default headers values
func NewGetSitesByIDCustomerGroupsByIDDefault(code int) *GetSitesByIDCustomerGroupsByIDDefault {
	return &GetSitesByIDCustomerGroupsByIDDefault{
		_statusCode: code,
	}
}

/*GetSitesByIDCustomerGroupsByIDDefault handles this case with default header values.

GetSitesByIDCustomerGroupsByIDDefault get sites by ID customer groups by ID default
*/
type GetSitesByIDCustomerGroupsByIDDefault struct {
	_statusCode int

	Payload *models.CustomerGroup
}

// Code gets the status code for the get sites by ID customer groups by ID default response
func (o *GetSitesByIDCustomerGroupsByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetSitesByIDCustomerGroupsByIDDefault) Error() string {
	return fmt.Sprintf("[GET /sites/{site_id}/customer_groups/{id}][%d] getSitesByIDCustomerGroupsByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetSitesByIDCustomerGroupsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
