// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteSitesByIDCustomerGroupsByIDParams creates a new DeleteSitesByIDCustomerGroupsByIDParams object
// with the default values initialized.
func NewDeleteSitesByIDCustomerGroupsByIDParams() *DeleteSitesByIDCustomerGroupsByIDParams {
	var ()
	return &DeleteSitesByIDCustomerGroupsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteSitesByIDCustomerGroupsByIDParamsWithTimeout creates a new DeleteSitesByIDCustomerGroupsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteSitesByIDCustomerGroupsByIDParamsWithTimeout(timeout time.Duration) *DeleteSitesByIDCustomerGroupsByIDParams {
	var ()
	return &DeleteSitesByIDCustomerGroupsByIDParams{

		timeout: timeout,
	}
}

// NewDeleteSitesByIDCustomerGroupsByIDParamsWithContext creates a new DeleteSitesByIDCustomerGroupsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteSitesByIDCustomerGroupsByIDParamsWithContext(ctx context.Context) *DeleteSitesByIDCustomerGroupsByIDParams {
	var ()
	return &DeleteSitesByIDCustomerGroupsByIDParams{

		Context: ctx,
	}
}

// NewDeleteSitesByIDCustomerGroupsByIDParamsWithHTTPClient creates a new DeleteSitesByIDCustomerGroupsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteSitesByIDCustomerGroupsByIDParamsWithHTTPClient(client *http.Client) *DeleteSitesByIDCustomerGroupsByIDParams {
	var ()
	return &DeleteSitesByIDCustomerGroupsByIDParams{
		HTTPClient: client,
	}
}

/*DeleteSitesByIDCustomerGroupsByIDParams contains all the parameters to send to the API endpoint
for the delete sites by ID customer groups by ID operation typically these are written to a http.Request
*/
type DeleteSitesByIDCustomerGroupsByIDParams struct {

	/*ID
	  One customer group id to remove

	*/
	ID string
	/*Select*/
	Select *string
	/*SiteID
	  The id of the site.

	*/
	SiteID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) WithTimeout(timeout time.Duration) *DeleteSitesByIDCustomerGroupsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) WithContext(ctx context.Context) *DeleteSitesByIDCustomerGroupsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) WithHTTPClient(client *http.Client) *DeleteSitesByIDCustomerGroupsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) WithID(id string) *DeleteSitesByIDCustomerGroupsByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) SetID(id string) {
	o.ID = id
}

// WithSelect adds the selectVar to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) WithSelect(selectVar *string) *DeleteSitesByIDCustomerGroupsByIDParams {
	o.SetSelect(selectVar)
	return o
}

// SetSelect adds the select to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) SetSelect(selectVar *string) {
	o.Select = selectVar
}

// WithSiteID adds the siteID to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) WithSiteID(siteID string) *DeleteSitesByIDCustomerGroupsByIDParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the delete sites by ID customer groups by ID params
func (o *DeleteSitesByIDCustomerGroupsByIDParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteSitesByIDCustomerGroupsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Select != nil {

		// query param select
		var qrSelect string
		if o.Select != nil {
			qrSelect = *o.Select
		}
		qSelect := qrSelect
		if qSelect != "" {
			if err := r.SetQueryParam("select", qSelect); err != nil {
				return err
			}
		}

	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
