// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams creates a new DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams object
// with the default values initialized.
func NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams() *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	var ()
	return &DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParamsWithTimeout creates a new DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParamsWithTimeout(timeout time.Duration) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	var ()
	return &DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams{

		timeout: timeout,
	}
}

// NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParamsWithContext creates a new DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParamsWithContext(ctx context.Context) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	var ()
	return &DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams{

		Context: ctx,
	}
}

// NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParamsWithHTTPClient creates a new DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParamsWithHTTPClient(client *http.Client) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	var ()
	return &DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams{
		HTTPClient: client,
	}
}

/*DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams contains all the parameters to send to the API endpoint
for the delete sites by ID campaigns by ID sorting rules by ID by ID operation typically these are written to a http.Request
*/
type DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams struct {

	/*CampaignID
	  The ID of the campaign to which the sorting rule is to be assigned.

	*/
	CampaignID string
	/*CategoryID
	  The ID of the category that is associated with the sorting rule.

	*/
	CategoryID string
	/*RuleContext*/
	RuleContext *string
	/*SiteID
	  The ID of the site that contains the campaign, sorting rule and category.

	*/
	SiteID string
	/*SortingRuleID
	  The ID of sorting rule that is to be assigned to the campaign.

	*/
	SortingRuleID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) WithTimeout(timeout time.Duration) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) WithContext(ctx context.Context) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) WithHTTPClient(client *http.Client) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaignID adds the campaignID to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) WithCampaignID(campaignID string) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) SetCampaignID(campaignID string) {
	o.CampaignID = campaignID
}

// WithCategoryID adds the categoryID to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) WithCategoryID(categoryID string) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	o.SetCategoryID(categoryID)
	return o
}

// SetCategoryID adds the categoryId to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) SetCategoryID(categoryID string) {
	o.CategoryID = categoryID
}

// WithRuleContext adds the ruleContext to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) WithRuleContext(ruleContext *string) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	o.SetRuleContext(ruleContext)
	return o
}

// SetRuleContext adds the ruleContext to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) SetRuleContext(ruleContext *string) {
	o.RuleContext = ruleContext
}

// WithSiteID adds the siteID to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) WithSiteID(siteID string) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WithSortingRuleID adds the sortingRuleID to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) WithSortingRuleID(sortingRuleID string) *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams {
	o.SetSortingRuleID(sortingRuleID)
	return o
}

// SetSortingRuleID adds the sortingRuleId to the delete sites by ID campaigns by ID sorting rules by ID by ID params
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) SetSortingRuleID(sortingRuleID string) {
	o.SortingRuleID = sortingRuleID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param campaign_id
	if err := r.SetPathParam("campaign_id", o.CampaignID); err != nil {
		return err
	}

	// path param category_id
	if err := r.SetPathParam("category_id", o.CategoryID); err != nil {
		return err
	}

	if o.RuleContext != nil {

		// query param rule_context
		var qrRuleContext string
		if o.RuleContext != nil {
			qrRuleContext = *o.RuleContext
		}
		qRuleContext := qrRuleContext
		if qRuleContext != "" {
			if err := r.SetQueryParam("rule_context", qRuleContext); err != nil {
				return err
			}
		}

	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	// path param sorting_rule_id
	if err := r.SetPathParam("sorting_rule_id", o.SortingRuleID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
