// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// NewPatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams creates a new PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams object
// with the default values initialized.
func NewPatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams() *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	var ()
	return &PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParamsWithTimeout creates a new PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParamsWithTimeout(timeout time.Duration) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	var ()
	return &PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams{

		timeout: timeout,
	}
}

// NewPatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParamsWithContext creates a new PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParamsWithContext(ctx context.Context) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	var ()
	return &PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams{

		Context: ctx,
	}
}

// NewPatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParamsWithHTTPClient creates a new PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParamsWithHTTPClient(client *http.Client) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	var ()
	return &PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams{
		HTTPClient: client,
	}
}

/*PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams contains all the parameters to send to the API endpoint
for the patch sites by ID campaigns by ID slot configurations by ID by ID operation typically these are written to a http.Request
*/
type PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams struct {

	/*Body*/
	Body *models.SlotConfigurationCampaignAssignment
	/*CampaignID
	  The ID of the campaign.

	*/
	CampaignID string
	/*Context*/
	Context *string
	/*SiteID
	  The ID of the site.

	*/
	SiteID string
	/*SlotConfigID
	  The ID of the slot configuration.

	*/
	SlotConfigID string
	/*SlotID
	  The ID of the slot.

	*/
	SlotID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WithTimeout(timeout time.Duration) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WithContext(ctx context.Context) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WithHTTPClient(client *http.Client) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WithBody(body *models.SlotConfigurationCampaignAssignment) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) SetBody(body *models.SlotConfigurationCampaignAssignment) {
	o.Body = body
}

// WithCampaignID adds the campaignID to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WithCampaignID(campaignID string) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) SetCampaignID(campaignID string) {
	o.CampaignID = campaignID
}

// WithContext adds the context to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WithContext(context *string) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	o.SetContext(context)
	return o
}

// SetContext adds the context to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) SetContext(context *string) {
	o.Context = context
}

// WithSiteID adds the siteID to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WithSiteID(siteID string) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WithSlotConfigID adds the slotConfigID to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WithSlotConfigID(slotConfigID string) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	o.SetSlotConfigID(slotConfigID)
	return o
}

// SetSlotConfigID adds the slotConfigId to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) SetSlotConfigID(slotConfigID string) {
	o.SlotConfigID = slotConfigID
}

// WithSlotID adds the slotID to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WithSlotID(slotID string) *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams {
	o.SetSlotID(slotID)
	return o
}

// SetSlotID adds the slotId to the patch sites by ID campaigns by ID slot configurations by ID by ID params
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) SetSlotID(slotID string) {
	o.SlotID = slotID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchSitesByIDCampaignsByIDSlotConfigurationsByIDByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param campaign_id
	if err := r.SetPathParam("campaign_id", o.CampaignID); err != nil {
		return err
	}

	if o.Context != nil {

		// query param context
		var qrContext string
		if o.Context != nil {
			qrContext = *o.Context
		}
		qContext := qrContext
		if qContext != "" {
			if err := r.SetQueryParam("context", qContext); err != nil {
				return err
			}
		}

	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	// path param slot_config_id
	if err := r.SetPathParam("slot_config_id", o.SlotConfigID); err != nil {
		return err
	}

	// path param slot_id
	if err := r.SetPathParam("slot_id", o.SlotID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
