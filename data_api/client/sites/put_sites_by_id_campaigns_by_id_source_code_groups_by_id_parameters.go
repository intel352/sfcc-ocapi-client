// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams creates a new PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams object
// with the default values initialized.
func NewPutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams() *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	var ()
	return &PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutSitesByIDCampaignsByIDSourceCodeGroupsByIDParamsWithTimeout creates a new PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutSitesByIDCampaignsByIDSourceCodeGroupsByIDParamsWithTimeout(timeout time.Duration) *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	var ()
	return &PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams{

		timeout: timeout,
	}
}

// NewPutSitesByIDCampaignsByIDSourceCodeGroupsByIDParamsWithContext creates a new PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutSitesByIDCampaignsByIDSourceCodeGroupsByIDParamsWithContext(ctx context.Context) *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	var ()
	return &PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams{

		Context: ctx,
	}
}

// NewPutSitesByIDCampaignsByIDSourceCodeGroupsByIDParamsWithHTTPClient creates a new PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutSitesByIDCampaignsByIDSourceCodeGroupsByIDParamsWithHTTPClient(client *http.Client) *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	var ()
	return &PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams{
		HTTPClient: client,
	}
}

/*PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams contains all the parameters to send to the API endpoint
for the put sites by ID campaigns by ID source code groups by ID operation typically these are written to a http.Request
*/
type PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams struct {

	/*CampaignID
	  The campaign ID that source code group are to be bound to

	*/
	CampaignID string
	/*SiteID*/
	SiteID string
	/*SourceCodeGroupID
	  The source code group ID to bind to a campaign

	*/
	SourceCodeGroupID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) WithTimeout(timeout time.Duration) *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) WithContext(ctx context.Context) *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) WithHTTPClient(client *http.Client) *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaignID adds the campaignID to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) WithCampaignID(campaignID string) *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) SetCampaignID(campaignID string) {
	o.CampaignID = campaignID
}

// WithSiteID adds the siteID to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) WithSiteID(siteID string) *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WithSourceCodeGroupID adds the sourceCodeGroupID to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) WithSourceCodeGroupID(sourceCodeGroupID string) *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams {
	o.SetSourceCodeGroupID(sourceCodeGroupID)
	return o
}

// SetSourceCodeGroupID adds the sourceCodeGroupId to the put sites by ID campaigns by ID source code groups by ID params
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) SetSourceCodeGroupID(sourceCodeGroupID string) {
	o.SourceCodeGroupID = sourceCodeGroupID
}

// WriteToRequest writes these params to a swagger request
func (o *PutSitesByIDCampaignsByIDSourceCodeGroupsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param campaign_id
	if err := r.SetPathParam("campaign_id", o.CampaignID); err != nil {
		return err
	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	// path param source_code_group_id
	if err := r.SetPathParam("source_code_group_id", o.SourceCodeGroupID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
