// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// NewPostSitesByIDCouponsByIDMultipleCodesParams creates a new PostSitesByIDCouponsByIDMultipleCodesParams object
// with the default values initialized.
func NewPostSitesByIDCouponsByIDMultipleCodesParams() *PostSitesByIDCouponsByIDMultipleCodesParams {
	var ()
	return &PostSitesByIDCouponsByIDMultipleCodesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostSitesByIDCouponsByIDMultipleCodesParamsWithTimeout creates a new PostSitesByIDCouponsByIDMultipleCodesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostSitesByIDCouponsByIDMultipleCodesParamsWithTimeout(timeout time.Duration) *PostSitesByIDCouponsByIDMultipleCodesParams {
	var ()
	return &PostSitesByIDCouponsByIDMultipleCodesParams{

		timeout: timeout,
	}
}

// NewPostSitesByIDCouponsByIDMultipleCodesParamsWithContext creates a new PostSitesByIDCouponsByIDMultipleCodesParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostSitesByIDCouponsByIDMultipleCodesParamsWithContext(ctx context.Context) *PostSitesByIDCouponsByIDMultipleCodesParams {
	var ()
	return &PostSitesByIDCouponsByIDMultipleCodesParams{

		Context: ctx,
	}
}

// NewPostSitesByIDCouponsByIDMultipleCodesParamsWithHTTPClient creates a new PostSitesByIDCouponsByIDMultipleCodesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostSitesByIDCouponsByIDMultipleCodesParamsWithHTTPClient(client *http.Client) *PostSitesByIDCouponsByIDMultipleCodesParams {
	var ()
	return &PostSitesByIDCouponsByIDMultipleCodesParams{
		HTTPClient: client,
	}
}

/*PostSitesByIDCouponsByIDMultipleCodesParams contains all the parameters to send to the API endpoint
for the post sites by ID coupons by ID multiple codes operation typically these are written to a http.Request
*/
type PostSitesByIDCouponsByIDMultipleCodesParams struct {

	/*Body*/
	Body *models.CouponMultiCodesRequest
	/*CouponID
	  The id of the coupon to modify codes (must be multiple code coupon).

	*/
	CouponID string
	/*Delete*/
	Delete *bool
	/*SiteID
	  The site context.

	*/
	SiteID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) WithTimeout(timeout time.Duration) *PostSitesByIDCouponsByIDMultipleCodesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) WithContext(ctx context.Context) *PostSitesByIDCouponsByIDMultipleCodesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) WithHTTPClient(client *http.Client) *PostSitesByIDCouponsByIDMultipleCodesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) WithBody(body *models.CouponMultiCodesRequest) *PostSitesByIDCouponsByIDMultipleCodesParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) SetBody(body *models.CouponMultiCodesRequest) {
	o.Body = body
}

// WithCouponID adds the couponID to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) WithCouponID(couponID string) *PostSitesByIDCouponsByIDMultipleCodesParams {
	o.SetCouponID(couponID)
	return o
}

// SetCouponID adds the couponId to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) SetCouponID(couponID string) {
	o.CouponID = couponID
}

// WithDelete adds the delete to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) WithDelete(delete *bool) *PostSitesByIDCouponsByIDMultipleCodesParams {
	o.SetDelete(delete)
	return o
}

// SetDelete adds the delete to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) SetDelete(delete *bool) {
	o.Delete = delete
}

// WithSiteID adds the siteID to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) WithSiteID(siteID string) *PostSitesByIDCouponsByIDMultipleCodesParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the post sites by ID coupons by ID multiple codes params
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WriteToRequest writes these params to a swagger request
func (o *PostSitesByIDCouponsByIDMultipleCodesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param coupon_id
	if err := r.SetPathParam("coupon_id", o.CouponID); err != nil {
		return err
	}

	if o.Delete != nil {

		// query param delete
		var qrDelete bool
		if o.Delete != nil {
			qrDelete = *o.Delete
		}
		qDelete := swag.FormatBool(qrDelete)
		if qDelete != "" {
			if err := r.SetQueryParam("delete", qDelete); err != nil {
				return err
			}
		}

	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
