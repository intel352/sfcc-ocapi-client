// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSitesByIDSlotsByIDByIDParams creates a new GetSitesByIDSlotsByIDByIDParams object
// with the default values initialized.
func NewGetSitesByIDSlotsByIDByIDParams() *GetSitesByIDSlotsByIDByIDParams {
	var ()
	return &GetSitesByIDSlotsByIDByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSitesByIDSlotsByIDByIDParamsWithTimeout creates a new GetSitesByIDSlotsByIDByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSitesByIDSlotsByIDByIDParamsWithTimeout(timeout time.Duration) *GetSitesByIDSlotsByIDByIDParams {
	var ()
	return &GetSitesByIDSlotsByIDByIDParams{

		timeout: timeout,
	}
}

// NewGetSitesByIDSlotsByIDByIDParamsWithContext creates a new GetSitesByIDSlotsByIDByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSitesByIDSlotsByIDByIDParamsWithContext(ctx context.Context) *GetSitesByIDSlotsByIDByIDParams {
	var ()
	return &GetSitesByIDSlotsByIDByIDParams{

		Context: ctx,
	}
}

// NewGetSitesByIDSlotsByIDByIDParamsWithHTTPClient creates a new GetSitesByIDSlotsByIDByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSitesByIDSlotsByIDByIDParamsWithHTTPClient(client *http.Client) *GetSitesByIDSlotsByIDByIDParams {
	var ()
	return &GetSitesByIDSlotsByIDByIDParams{
		HTTPClient: client,
	}
}

/*GetSitesByIDSlotsByIDByIDParams contains all the parameters to send to the API endpoint
for the get sites by ID slots by ID by ID operation typically these are written to a http.Request
*/
type GetSitesByIDSlotsByIDByIDParams struct {

	/*ContextType
	  The context type (folder, global, category).

	*/
	ContextType string
	/*Select*/
	Select *string
	/*SiteID
	  The site context.

	*/
	SiteID string
	/*SlotID
	  The id of the requested slot.

	*/
	SlotID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) WithTimeout(timeout time.Duration) *GetSitesByIDSlotsByIDByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) WithContext(ctx context.Context) *GetSitesByIDSlotsByIDByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) WithHTTPClient(client *http.Client) *GetSitesByIDSlotsByIDByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContextType adds the contextType to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) WithContextType(contextType string) *GetSitesByIDSlotsByIDByIDParams {
	o.SetContextType(contextType)
	return o
}

// SetContextType adds the contextType to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) SetContextType(contextType string) {
	o.ContextType = contextType
}

// WithSelect adds the selectVar to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) WithSelect(selectVar *string) *GetSitesByIDSlotsByIDByIDParams {
	o.SetSelect(selectVar)
	return o
}

// SetSelect adds the select to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) SetSelect(selectVar *string) {
	o.Select = selectVar
}

// WithSiteID adds the siteID to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) WithSiteID(siteID string) *GetSitesByIDSlotsByIDByIDParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WithSlotID adds the slotID to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) WithSlotID(slotID string) *GetSitesByIDSlotsByIDByIDParams {
	o.SetSlotID(slotID)
	return o
}

// SetSlotID adds the slotId to the get sites by ID slots by ID by ID params
func (o *GetSitesByIDSlotsByIDByIDParams) SetSlotID(slotID string) {
	o.SlotID = slotID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSitesByIDSlotsByIDByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param context_type
	if err := r.SetPathParam("context_type", o.ContextType); err != nil {
		return err
	}

	if o.Select != nil {

		// query param select
		var qrSelect string
		if o.Select != nil {
			qrSelect = *o.Select
		}
		qSelect := qrSelect
		if qSelect != "" {
			if err := r.SetQueryParam("select", qSelect); err != nil {
				return err
			}
		}

	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	// path param slot_id
	if err := r.SetPathParam("slot_id", o.SlotID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
