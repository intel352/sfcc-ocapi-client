// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutSitesByIDCampaignsByIDPromotionsByIDParams creates a new PutSitesByIDCampaignsByIDPromotionsByIDParams object
// with the default values initialized.
func NewPutSitesByIDCampaignsByIDPromotionsByIDParams() *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	var ()
	return &PutSitesByIDCampaignsByIDPromotionsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutSitesByIDCampaignsByIDPromotionsByIDParamsWithTimeout creates a new PutSitesByIDCampaignsByIDPromotionsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutSitesByIDCampaignsByIDPromotionsByIDParamsWithTimeout(timeout time.Duration) *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	var ()
	return &PutSitesByIDCampaignsByIDPromotionsByIDParams{

		timeout: timeout,
	}
}

// NewPutSitesByIDCampaignsByIDPromotionsByIDParamsWithContext creates a new PutSitesByIDCampaignsByIDPromotionsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutSitesByIDCampaignsByIDPromotionsByIDParamsWithContext(ctx context.Context) *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	var ()
	return &PutSitesByIDCampaignsByIDPromotionsByIDParams{

		Context: ctx,
	}
}

// NewPutSitesByIDCampaignsByIDPromotionsByIDParamsWithHTTPClient creates a new PutSitesByIDCampaignsByIDPromotionsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutSitesByIDCampaignsByIDPromotionsByIDParamsWithHTTPClient(client *http.Client) *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	var ()
	return &PutSitesByIDCampaignsByIDPromotionsByIDParams{
		HTTPClient: client,
	}
}

/*PutSitesByIDCampaignsByIDPromotionsByIDParams contains all the parameters to send to the API endpoint
for the put sites by ID campaigns by ID promotions by ID operation typically these are written to a http.Request
*/
type PutSitesByIDCampaignsByIDPromotionsByIDParams struct {

	/*CampaignID
	  The ID of the campaign to which the promotion is to be assigned.

	*/
	CampaignID string
	/*PromotionID
	  The ID of the promotion that is to be assigned to the campaign.

	*/
	PromotionID string
	/*SiteID
	  The ID of the site that contains the campaign and promotion.

	*/
	SiteID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) WithTimeout(timeout time.Duration) *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) WithContext(ctx context.Context) *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) WithHTTPClient(client *http.Client) *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaignID adds the campaignID to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) WithCampaignID(campaignID string) *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) SetCampaignID(campaignID string) {
	o.CampaignID = campaignID
}

// WithPromotionID adds the promotionID to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) WithPromotionID(promotionID string) *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	o.SetPromotionID(promotionID)
	return o
}

// SetPromotionID adds the promotionId to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) SetPromotionID(promotionID string) {
	o.PromotionID = promotionID
}

// WithSiteID adds the siteID to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) WithSiteID(siteID string) *PutSitesByIDCampaignsByIDPromotionsByIDParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the put sites by ID campaigns by ID promotions by ID params
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WriteToRequest writes these params to a swagger request
func (o *PutSitesByIDCampaignsByIDPromotionsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param campaign_id
	if err := r.SetPathParam("campaign_id", o.CampaignID); err != nil {
		return err
	}

	// path param promotion_id
	if err := r.SetPathParam("promotion_id", o.PromotionID); err != nil {
		return err
	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
