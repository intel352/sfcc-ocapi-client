// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PutSitesByIDStoresByIDReader is a Reader for the PutSitesByIDStoresByID structure.
type PutSitesByIDStoresByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSitesByIDStoresByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutSitesByIDStoresByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutSitesByIDStoresByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutSitesByIDStoresByIDBadRequest creates a PutSitesByIDStoresByIDBadRequest with default headers values
func NewPutSitesByIDStoresByIDBadRequest() *PutSitesByIDStoresByIDBadRequest {
	return &PutSitesByIDStoresByIDBadRequest{}
}

/*PutSitesByIDStoresByIDBadRequest handles this case with default header values.

if the Id in request is not the same as the ID in document.
*/
type PutSitesByIDStoresByIDBadRequest struct {
}

func (o *PutSitesByIDStoresByIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/stores/{id}][%d] putSitesByIdStoresByIdBadRequest ", 400)
}

func (o *PutSitesByIDStoresByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSitesByIDStoresByIDDefault creates a PutSitesByIDStoresByIDDefault with default headers values
func NewPutSitesByIDStoresByIDDefault(code int) *PutSitesByIDStoresByIDDefault {
	return &PutSitesByIDStoresByIDDefault{
		_statusCode: code,
	}
}

/*PutSitesByIDStoresByIDDefault handles this case with default header values.

PutSitesByIDStoresByIDDefault put sites by ID stores by ID default
*/
type PutSitesByIDStoresByIDDefault struct {
	_statusCode int

	Payload *models.Store
}

// Code gets the status code for the put sites by ID stores by ID default response
func (o *PutSitesByIDStoresByIDDefault) Code() int {
	return o._statusCode
}

func (o *PutSitesByIDStoresByIDDefault) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/stores/{id}][%d] putSitesByIDStoresByID default  %+v", o._statusCode, o.Payload)
}

func (o *PutSitesByIDStoresByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Store)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
