// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSitesByIDCustomerGroupsByIDMembersByIDReader is a Reader for the DeleteSitesByIDCustomerGroupsByIDMembersByID structure.
type DeleteSitesByIDCustomerGroupsByIDMembersByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSitesByIDCustomerGroupsByIDMembersByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewDeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent creates a DeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent with default headers values
func NewDeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent() *DeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent {
	return &DeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent{}
}

/*DeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent handles this case with default header values.

DeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent delete sites by Id customer groups by Id members by Id no content
*/
type DeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent struct {
}

func (o *DeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /sites/{site_id}/customer_groups/{id}/members/{customer_no}][%d] deleteSitesByIdCustomerGroupsByIdMembersByIdNoContent ", 204)
}

func (o *DeleteSitesByIDCustomerGroupsByIDMembersByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden creates a DeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden with default headers values
func NewDeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden() *DeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden {
	return &DeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden{}
}

/*DeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden handles this case with default header values.

Thrown when the customer group is not a static group.
*/
type DeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden struct {
}

func (o *DeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /sites/{site_id}/customer_groups/{id}/members/{customer_no}][%d] deleteSitesByIdCustomerGroupsByIdMembersByIdForbidden ", 403)
}

func (o *DeleteSitesByIDCustomerGroupsByIDMembersByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound creates a DeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound with default headers values
func NewDeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound() *DeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound {
	return &DeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound{}
}

/*DeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound handles this case with default header values.

Thrown in case the customer group does not exist matching the given id. or Thrown in case the customer list did not exist, or the customer does not exist in the list.
*/
type DeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound struct {
}

func (o *DeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /sites/{site_id}/customer_groups/{id}/members/{customer_no}][%d] deleteSitesByIdCustomerGroupsByIdMembersByIdNotFound ", 404)
}

func (o *DeleteSitesByIDCustomerGroupsByIDMembersByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
