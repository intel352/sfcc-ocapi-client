// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDReader is a Reader for the DeleteSitesByIDCampaignsByIDSortingRulesByIDByID structure.
type DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent creates a DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent with default headers values
func NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent() *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent {
	return &DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent{}
}

/*DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent handles this case with default header values.

DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent delete sites by Id campaigns by Id sorting rules by Id by Id no content
*/
type DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent struct {
}

func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /sites/{site_id}/campaigns/{campaign_id}/sorting_rules/{sorting_rule_id}/{category_id}][%d] deleteSitesByIdCampaignsByIdSortingRulesByIdByIdNoContent ", 204)
}

func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest creates a DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest with default headers values
func NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest() *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest {
	return &DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest{}
}

/*DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest handles this case with default header values.

Indicates that the category with the given category ID is not found.
*/
type DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest struct {
}

func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /sites/{site_id}/campaigns/{campaign_id}/sorting_rules/{sorting_rule_id}/{category_id}][%d] deleteSitesByIdCampaignsByIdSortingRulesByIdByIdBadRequest ", 400)
}

func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound creates a DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound with default headers values
func NewDeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound() *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound {
	return &DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound{}
}

/*DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound handles this case with default header values.

thrown when site with the given site id is not found. or Indicates that the campaign with the given campaign ID is not found. or Indicates that the sorting rule with the given sorting rule ID is not found.
*/
type DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound struct {
}

func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /sites/{site_id}/campaigns/{campaign_id}/sorting_rules/{sorting_rule_id}/{category_id}][%d] deleteSitesByIdCampaignsByIdSortingRulesByIdByIdNotFound ", 404)
}

func (o *DeleteSitesByIDCampaignsByIDSortingRulesByIDByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
