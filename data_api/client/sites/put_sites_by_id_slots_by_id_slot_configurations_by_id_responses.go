// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PutSitesByIDSlotsByIDSlotConfigurationsByIDReader is a Reader for the PutSitesByIDSlotsByIDSlotConfigurationsByID structure.
type PutSitesByIDSlotsByIDSlotConfigurationsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSitesByIDSlotsByIDSlotConfigurationsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutSitesByIDSlotsByIDSlotConfigurationsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest creates a PutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest with default headers values
func NewPutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest() *PutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest {
	return &PutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest{}
}

/*PutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest handles this case with default header values.

Thrown if the specified context type is invalid. or Thrown if the specified context id for given context 'category' or 'folder' is missing. or if the Id in request is not the same as the ID in document.
*/
type PutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest struct {
}

func (o *PutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/slots/{slot_id}/slot_configurations/{configuration_id}][%d] putSitesByIdSlotsByIdSlotConfigurationsByIdBadRequest ", 400)
}

func (o *PutSitesByIDSlotsByIDSlotConfigurationsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound creates a PutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound with default headers values
func NewPutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound() *PutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound {
	return &PutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound{}
}

/*PutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound handles this case with default header values.

Thrown if there was no slot with the given id found for the
              requested site. or Thrown if content asset does not exist in the library of the current domain
              but is assigned during creation of the configuration.
*/
type PutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound struct {
}

func (o *PutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/slots/{slot_id}/slot_configurations/{configuration_id}][%d] putSitesByIdSlotsByIdSlotConfigurationsByIdNotFound ", 404)
}

func (o *PutSitesByIDSlotsByIDSlotConfigurationsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSitesByIDSlotsByIDSlotConfigurationsByIDDefault creates a PutSitesByIDSlotsByIDSlotConfigurationsByIDDefault with default headers values
func NewPutSitesByIDSlotsByIDSlotConfigurationsByIDDefault(code int) *PutSitesByIDSlotsByIDSlotConfigurationsByIDDefault {
	return &PutSitesByIDSlotsByIDSlotConfigurationsByIDDefault{
		_statusCode: code,
	}
}

/*PutSitesByIDSlotsByIDSlotConfigurationsByIDDefault handles this case with default header values.

PutSitesByIDSlotsByIDSlotConfigurationsByIDDefault put sites by ID slots by ID slot configurations by ID default
*/
type PutSitesByIDSlotsByIDSlotConfigurationsByIDDefault struct {
	_statusCode int

	Payload *models.SlotConfiguration
}

// Code gets the status code for the put sites by ID slots by ID slot configurations by ID default response
func (o *PutSitesByIDSlotsByIDSlotConfigurationsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PutSitesByIDSlotsByIDSlotConfigurationsByIDDefault) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/slots/{slot_id}/slot_configurations/{configuration_id}][%d] putSitesByIDSlotsByIDSlotConfigurationsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PutSitesByIDSlotsByIDSlotConfigurationsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SlotConfiguration)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
