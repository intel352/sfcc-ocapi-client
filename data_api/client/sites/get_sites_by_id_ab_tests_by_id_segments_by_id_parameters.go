// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSitesByIDAbTestsByIDSegmentsByIDParams creates a new GetSitesByIDAbTestsByIDSegmentsByIDParams object
// with the default values initialized.
func NewGetSitesByIDAbTestsByIDSegmentsByIDParams() *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	var ()
	return &GetSitesByIDAbTestsByIDSegmentsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSitesByIDAbTestsByIDSegmentsByIDParamsWithTimeout creates a new GetSitesByIDAbTestsByIDSegmentsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSitesByIDAbTestsByIDSegmentsByIDParamsWithTimeout(timeout time.Duration) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	var ()
	return &GetSitesByIDAbTestsByIDSegmentsByIDParams{

		timeout: timeout,
	}
}

// NewGetSitesByIDAbTestsByIDSegmentsByIDParamsWithContext creates a new GetSitesByIDAbTestsByIDSegmentsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSitesByIDAbTestsByIDSegmentsByIDParamsWithContext(ctx context.Context) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	var ()
	return &GetSitesByIDAbTestsByIDSegmentsByIDParams{

		Context: ctx,
	}
}

// NewGetSitesByIDAbTestsByIDSegmentsByIDParamsWithHTTPClient creates a new GetSitesByIDAbTestsByIDSegmentsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSitesByIDAbTestsByIDSegmentsByIDParamsWithHTTPClient(client *http.Client) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	var ()
	return &GetSitesByIDAbTestsByIDSegmentsByIDParams{
		HTTPClient: client,
	}
}

/*GetSitesByIDAbTestsByIDSegmentsByIDParams contains all the parameters to send to the API endpoint
for the get sites by ID ab tests by ID segments by ID operation typically these are written to a http.Request
*/
type GetSitesByIDAbTestsByIDSegmentsByIDParams struct {

	/*Expand*/
	Expand []string
	/*ID
	  The id of the requested A/B Test.

	*/
	ID string
	/*SegmentID
	  The id of the segment in the test.

	*/
	SegmentID string
	/*SiteID
	  ID of the site that the A/B tests are contained within.

	*/
	SiteID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) WithTimeout(timeout time.Duration) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) WithContext(ctx context.Context) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) WithHTTPClient(client *http.Client) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExpand adds the expand to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) WithExpand(expand []string) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WithID adds the id to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) WithID(id string) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) SetID(id string) {
	o.ID = id
}

// WithSegmentID adds the segmentID to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) WithSegmentID(segmentID string) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	o.SetSegmentID(segmentID)
	return o
}

// SetSegmentID adds the segmentId to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) SetSegmentID(segmentID string) {
	o.SegmentID = segmentID
}

// WithSiteID adds the siteID to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) WithSiteID(siteID string) *GetSitesByIDAbTestsByIDSegmentsByIDParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the get sites by ID ab tests by ID segments by ID params
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSitesByIDAbTestsByIDSegmentsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesExpand := o.Expand

	joinedExpand := swag.JoinByFormat(valuesExpand, "")
	// query array param expand
	if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param segment_id
	if err := r.SetPathParam("segment_id", o.SegmentID); err != nil {
		return err
	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
