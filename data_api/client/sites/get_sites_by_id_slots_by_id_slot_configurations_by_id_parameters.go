// Code generated by go-swagger; DO NOT EDIT.

package sites

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSitesByIDSlotsByIDSlotConfigurationsByIDParams creates a new GetSitesByIDSlotsByIDSlotConfigurationsByIDParams object
// with the default values initialized.
func NewGetSitesByIDSlotsByIDSlotConfigurationsByIDParams() *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	var ()
	return &GetSitesByIDSlotsByIDSlotConfigurationsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSitesByIDSlotsByIDSlotConfigurationsByIDParamsWithTimeout creates a new GetSitesByIDSlotsByIDSlotConfigurationsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSitesByIDSlotsByIDSlotConfigurationsByIDParamsWithTimeout(timeout time.Duration) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	var ()
	return &GetSitesByIDSlotsByIDSlotConfigurationsByIDParams{

		timeout: timeout,
	}
}

// NewGetSitesByIDSlotsByIDSlotConfigurationsByIDParamsWithContext creates a new GetSitesByIDSlotsByIDSlotConfigurationsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSitesByIDSlotsByIDSlotConfigurationsByIDParamsWithContext(ctx context.Context) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	var ()
	return &GetSitesByIDSlotsByIDSlotConfigurationsByIDParams{

		Context: ctx,
	}
}

// NewGetSitesByIDSlotsByIDSlotConfigurationsByIDParamsWithHTTPClient creates a new GetSitesByIDSlotsByIDSlotConfigurationsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSitesByIDSlotsByIDSlotConfigurationsByIDParamsWithHTTPClient(client *http.Client) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	var ()
	return &GetSitesByIDSlotsByIDSlotConfigurationsByIDParams{
		HTTPClient: client,
	}
}

/*GetSitesByIDSlotsByIDSlotConfigurationsByIDParams contains all the parameters to send to the API endpoint
for the get sites by ID slots by ID slot configurations by ID operation typically these are written to a http.Request
*/
type GetSitesByIDSlotsByIDSlotConfigurationsByIDParams struct {

	/*ConfigurationID
	  The id of the slot configuration.

	*/
	ConfigurationID string
	/*Context*/
	Context *string
	/*SiteID
	  The id of the site for which you want to create the slot configuration.

	*/
	SiteID string
	/*SlotID
	  The id of the slot.

	*/
	SlotID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) WithTimeout(timeout time.Duration) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) WithContext(ctx context.Context) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) WithHTTPClient(client *http.Client) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithConfigurationID adds the configurationID to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) WithConfigurationID(configurationID string) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	o.SetConfigurationID(configurationID)
	return o
}

// SetConfigurationID adds the configurationId to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) SetConfigurationID(configurationID string) {
	o.ConfigurationID = configurationID
}

// WithContext adds the context to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) WithContext(context *string) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	o.SetContext(context)
	return o
}

// SetContext adds the context to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) SetContext(context *string) {
	o.Context = context
}

// WithSiteID adds the siteID to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) WithSiteID(siteID string) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	o.SetSiteID(siteID)
	return o
}

// SetSiteID adds the siteId to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) SetSiteID(siteID string) {
	o.SiteID = siteID
}

// WithSlotID adds the slotID to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) WithSlotID(slotID string) *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams {
	o.SetSlotID(slotID)
	return o
}

// SetSlotID adds the slotId to the get sites by ID slots by ID slot configurations by ID params
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) SetSlotID(slotID string) {
	o.SlotID = slotID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSitesByIDSlotsByIDSlotConfigurationsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param configuration_id
	if err := r.SetPathParam("configuration_id", o.ConfigurationID); err != nil {
		return err
	}

	if o.Context != nil {

		// query param context
		var qrContext string
		if o.Context != nil {
			qrContext = *o.Context
		}
		qContext := qrContext
		if qContext != "" {
			if err := r.SetQueryParam("context", qContext); err != nil {
				return err
			}
		}

	}

	// path param site_id
	if err := r.SetPathParam("site_id", o.SiteID); err != nil {
		return err
	}

	// path param slot_id
	if err := r.SetPathParam("slot_id", o.SlotID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
