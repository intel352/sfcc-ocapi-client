// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetUsersThisReader is a Reader for the GetUsersThis structure.
type GetUsersThisReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUsersThisReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 401:
		result := NewGetUsersThisUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetUsersThisDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetUsersThisUnauthorized creates a GetUsersThisUnauthorized with default headers values
func NewGetUsersThisUnauthorized() *GetUsersThisUnauthorized {
	return &GetUsersThisUnauthorized{}
}

/*GetUsersThisUnauthorized handles this case with default header values.

If the user provided by the OAuth token cannot be found. or If the user profile is currently locked.
*/
type GetUsersThisUnauthorized struct {
}

func (o *GetUsersThisUnauthorized) Error() string {
	return fmt.Sprintf("[GET /users/this][%d] getUsersThisUnauthorized ", 401)
}

func (o *GetUsersThisUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetUsersThisDefault creates a GetUsersThisDefault with default headers values
func NewGetUsersThisDefault(code int) *GetUsersThisDefault {
	return &GetUsersThisDefault{
		_statusCode: code,
	}
}

/*GetUsersThisDefault handles this case with default header values.

GetUsersThisDefault get users this default
*/
type GetUsersThisDefault struct {
	_statusCode int

	Payload *models.User
}

// Code gets the status code for the get users this default response
func (o *GetUsersThisDefault) Code() int {
	return o._statusCode
}

func (o *GetUsersThisDefault) Error() string {
	return fmt.Sprintf("[GET /users/this][%d] getUsersThis default  %+v", o._statusCode, o.Payload)
}

func (o *GetUsersThisDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
