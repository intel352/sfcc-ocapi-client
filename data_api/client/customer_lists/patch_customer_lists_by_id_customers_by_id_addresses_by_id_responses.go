// Code generated by go-swagger; DO NOT EDIT.

package customer_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PatchCustomerListsByIDCustomersByIDAddressesByIDReader is a Reader for the PatchCustomerListsByIDCustomersByIDAddressesByID structure.
type PatchCustomerListsByIDCustomersByIDAddressesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchCustomerListsByIDCustomersByIDAddressesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchCustomerListsByIDCustomersByIDAddressesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchCustomerListsByIDCustomersByIDAddressesByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest creates a PatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest with default headers values
func NewPatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest() *PatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest {
	return &PatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest{}
}

/*PatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest handles this case with default header values.

If the new address id is empty. or If the new address id is already in use.
*/
type PatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest struct {
}

func (o *PatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /customer_lists/{list_id}/customers/{customer_no}/addresses/{address_id}][%d] patchCustomerListsByIdCustomersByIdAddressesByIdBadRequest ", 400)
}

func (o *PatchCustomerListsByIDCustomersByIDAddressesByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchCustomerListsByIDCustomersByIDAddressesByIDNotFound creates a PatchCustomerListsByIDCustomersByIDAddressesByIDNotFound with default headers values
func NewPatchCustomerListsByIDCustomersByIDAddressesByIDNotFound() *PatchCustomerListsByIDCustomersByIDAddressesByIDNotFound {
	return &PatchCustomerListsByIDCustomersByIDAddressesByIDNotFound{}
}

/*PatchCustomerListsByIDCustomersByIDAddressesByIDNotFound handles this case with default header values.

Indicates that the customer with the given customer number is unknown. or Indicates that the customer list with the given customer list id is unknown. or Indicates that the customer address id is unknown.
*/
type PatchCustomerListsByIDCustomersByIDAddressesByIDNotFound struct {
}

func (o *PatchCustomerListsByIDCustomersByIDAddressesByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /customer_lists/{list_id}/customers/{customer_no}/addresses/{address_id}][%d] patchCustomerListsByIdCustomersByIdAddressesByIdNotFound ", 404)
}

func (o *PatchCustomerListsByIDCustomersByIDAddressesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchCustomerListsByIDCustomersByIDAddressesByIDDefault creates a PatchCustomerListsByIDCustomersByIDAddressesByIDDefault with default headers values
func NewPatchCustomerListsByIDCustomersByIDAddressesByIDDefault(code int) *PatchCustomerListsByIDCustomersByIDAddressesByIDDefault {
	return &PatchCustomerListsByIDCustomersByIDAddressesByIDDefault{
		_statusCode: code,
	}
}

/*PatchCustomerListsByIDCustomersByIDAddressesByIDDefault handles this case with default header values.

PatchCustomerListsByIDCustomersByIDAddressesByIDDefault patch customer lists by ID customers by ID addresses by ID default
*/
type PatchCustomerListsByIDCustomersByIDAddressesByIDDefault struct {
	_statusCode int

	Payload *models.CustomerAddress
}

// Code gets the status code for the patch customer lists by ID customers by ID addresses by ID default response
func (o *PatchCustomerListsByIDCustomersByIDAddressesByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchCustomerListsByIDCustomersByIDAddressesByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /customer_lists/{list_id}/customers/{customer_no}/addresses/{address_id}][%d] patchCustomerListsByIDCustomersByIDAddressesByID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchCustomerListsByIDCustomersByIDAddressesByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerAddress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
