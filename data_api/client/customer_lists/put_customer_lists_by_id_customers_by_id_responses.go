// Code generated by go-swagger; DO NOT EDIT.

package customer_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PutCustomerListsByIDCustomersByIDReader is a Reader for the PutCustomerListsByIDCustomersByID structure.
type PutCustomerListsByIDCustomersByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutCustomerListsByIDCustomersByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutCustomerListsByIDCustomersByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutCustomerListsByIDCustomersByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutCustomerListsByIDCustomersByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutCustomerListsByIDCustomersByIDBadRequest creates a PutCustomerListsByIDCustomersByIDBadRequest with default headers values
func NewPutCustomerListsByIDCustomersByIDBadRequest() *PutCustomerListsByIDCustomersByIDBadRequest {
	return &PutCustomerListsByIDCustomersByIDBadRequest{}
}

/*PutCustomerListsByIDCustomersByIDBadRequest handles this case with default header values.

Indicates the login does not match the login acceptance criteria. or Indicates that the mandatory credentials are missing in the input document. or Indicates that the mandatory login property is missing in the input document. or Indicates that the given login is already in use.
*/
type PutCustomerListsByIDCustomersByIDBadRequest struct {
}

func (o *PutCustomerListsByIDCustomersByIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /customer_lists/{list_id}/customers/{customer_no}][%d] putCustomerListsByIdCustomersByIdBadRequest ", 400)
}

func (o *PutCustomerListsByIDCustomersByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutCustomerListsByIDCustomersByIDNotFound creates a PutCustomerListsByIDCustomersByIDNotFound with default headers values
func NewPutCustomerListsByIDCustomersByIDNotFound() *PutCustomerListsByIDCustomersByIDNotFound {
	return &PutCustomerListsByIDCustomersByIDNotFound{}
}

/*PutCustomerListsByIDCustomersByIDNotFound handles this case with default header values.

Indicates that the customer list with the given customer list id is unknown.
*/
type PutCustomerListsByIDCustomersByIDNotFound struct {
}

func (o *PutCustomerListsByIDCustomersByIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /customer_lists/{list_id}/customers/{customer_no}][%d] putCustomerListsByIdCustomersByIdNotFound ", 404)
}

func (o *PutCustomerListsByIDCustomersByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutCustomerListsByIDCustomersByIDDefault creates a PutCustomerListsByIDCustomersByIDDefault with default headers values
func NewPutCustomerListsByIDCustomersByIDDefault(code int) *PutCustomerListsByIDCustomersByIDDefault {
	return &PutCustomerListsByIDCustomersByIDDefault{
		_statusCode: code,
	}
}

/*PutCustomerListsByIDCustomersByIDDefault handles this case with default header values.

PutCustomerListsByIDCustomersByIDDefault put customer lists by ID customers by ID default
*/
type PutCustomerListsByIDCustomersByIDDefault struct {
	_statusCode int

	Payload *models.Customer
}

// Code gets the status code for the put customer lists by ID customers by ID default response
func (o *PutCustomerListsByIDCustomersByIDDefault) Code() int {
	return o._statusCode
}

func (o *PutCustomerListsByIDCustomersByIDDefault) Error() string {
	return fmt.Sprintf("[PUT /customer_lists/{list_id}/customers/{customer_no}][%d] putCustomerListsByIDCustomersByID default  %+v", o._statusCode, o.Payload)
}

func (o *PutCustomerListsByIDCustomersByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Customer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
