// Code generated by go-swagger; DO NOT EDIT.

package libraries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteLibrariesByIDFoldersByIDParams creates a new DeleteLibrariesByIDFoldersByIDParams object
// with the default values initialized.
func NewDeleteLibrariesByIDFoldersByIDParams() *DeleteLibrariesByIDFoldersByIDParams {
	var ()
	return &DeleteLibrariesByIDFoldersByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteLibrariesByIDFoldersByIDParamsWithTimeout creates a new DeleteLibrariesByIDFoldersByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteLibrariesByIDFoldersByIDParamsWithTimeout(timeout time.Duration) *DeleteLibrariesByIDFoldersByIDParams {
	var ()
	return &DeleteLibrariesByIDFoldersByIDParams{

		timeout: timeout,
	}
}

// NewDeleteLibrariesByIDFoldersByIDParamsWithContext creates a new DeleteLibrariesByIDFoldersByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteLibrariesByIDFoldersByIDParamsWithContext(ctx context.Context) *DeleteLibrariesByIDFoldersByIDParams {
	var ()
	return &DeleteLibrariesByIDFoldersByIDParams{

		Context: ctx,
	}
}

// NewDeleteLibrariesByIDFoldersByIDParamsWithHTTPClient creates a new DeleteLibrariesByIDFoldersByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteLibrariesByIDFoldersByIDParamsWithHTTPClient(client *http.Client) *DeleteLibrariesByIDFoldersByIDParams {
	var ()
	return &DeleteLibrariesByIDFoldersByIDParams{
		HTTPClient: client,
	}
}

/*DeleteLibrariesByIDFoldersByIDParams contains all the parameters to send to the API endpoint
for the delete libraries by ID folders by ID operation typically these are written to a http.Request
*/
type DeleteLibrariesByIDFoldersByIDParams struct {

	/*FolderID
	  ID of a target folder.

	*/
	FolderID string
	/*LibraryID
	  ID of the shared library or the site-id in case of a private library.

	*/
	LibraryID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) WithTimeout(timeout time.Duration) *DeleteLibrariesByIDFoldersByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) WithContext(ctx context.Context) *DeleteLibrariesByIDFoldersByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) WithHTTPClient(client *http.Client) *DeleteLibrariesByIDFoldersByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFolderID adds the folderID to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) WithFolderID(folderID string) *DeleteLibrariesByIDFoldersByIDParams {
	o.SetFolderID(folderID)
	return o
}

// SetFolderID adds the folderId to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) SetFolderID(folderID string) {
	o.FolderID = folderID
}

// WithLibraryID adds the libraryID to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) WithLibraryID(libraryID string) *DeleteLibrariesByIDFoldersByIDParams {
	o.SetLibraryID(libraryID)
	return o
}

// SetLibraryID adds the libraryId to the delete libraries by ID folders by ID params
func (o *DeleteLibrariesByIDFoldersByIDParams) SetLibraryID(libraryID string) {
	o.LibraryID = libraryID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteLibrariesByIDFoldersByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param folder_id
	if err := r.SetPathParam("folder_id", o.FolderID); err != nil {
		return err
	}

	// path param library_id
	if err := r.SetPathParam("library_id", o.LibraryID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
