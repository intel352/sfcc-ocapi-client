// Code generated by go-swagger; DO NOT EDIT.

package libraries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetLibrariesByIDFoldersByIDContentReader is a Reader for the GetLibrariesByIDFoldersByIDContent structure.
type GetLibrariesByIDFoldersByIDContentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLibrariesByIDFoldersByIDContentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetLibrariesByIDFoldersByIDContentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetLibrariesByIDFoldersByIDContentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetLibrariesByIDFoldersByIDContentNotFound creates a GetLibrariesByIDFoldersByIDContentNotFound with default headers values
func NewGetLibrariesByIDFoldersByIDContentNotFound() *GetLibrariesByIDFoldersByIDContentNotFound {
	return &GetLibrariesByIDFoldersByIDContentNotFound{}
}

/*GetLibrariesByIDFoldersByIDContentNotFound handles this case with default header values.

Indicates that library with the given id is unknown. or Indicates that the folder with the given id is unknown.
*/
type GetLibrariesByIDFoldersByIDContentNotFound struct {
}

func (o *GetLibrariesByIDFoldersByIDContentNotFound) Error() string {
	return fmt.Sprintf("[GET /libraries/{library_id}/folders/{folder_id}/content][%d] getLibrariesByIdFoldersByIdContentNotFound ", 404)
}

func (o *GetLibrariesByIDFoldersByIDContentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLibrariesByIDFoldersByIDContentDefault creates a GetLibrariesByIDFoldersByIDContentDefault with default headers values
func NewGetLibrariesByIDFoldersByIDContentDefault(code int) *GetLibrariesByIDFoldersByIDContentDefault {
	return &GetLibrariesByIDFoldersByIDContentDefault{
		_statusCode: code,
	}
}

/*GetLibrariesByIDFoldersByIDContentDefault handles this case with default header values.

GetLibrariesByIDFoldersByIDContentDefault get libraries by ID folders by ID content default
*/
type GetLibrariesByIDFoldersByIDContentDefault struct {
	_statusCode int

	Payload *models.ContentAssetResult
}

// Code gets the status code for the get libraries by ID folders by ID content default response
func (o *GetLibrariesByIDFoldersByIDContentDefault) Code() int {
	return o._statusCode
}

func (o *GetLibrariesByIDFoldersByIDContentDefault) Error() string {
	return fmt.Sprintf("[GET /libraries/{library_id}/folders/{folder_id}/content][%d] getLibrariesByIDFoldersByIDContent default  %+v", o._statusCode, o.Payload)
}

func (o *GetLibrariesByIDFoldersByIDContentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentAssetResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
