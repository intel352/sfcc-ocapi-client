// Code generated by go-swagger; DO NOT EDIT.

package libraries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetLibrariesByIDContentByIDParams creates a new GetLibrariesByIDContentByIDParams object
// with the default values initialized.
func NewGetLibrariesByIDContentByIDParams() *GetLibrariesByIDContentByIDParams {
	var ()
	return &GetLibrariesByIDContentByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLibrariesByIDContentByIDParamsWithTimeout creates a new GetLibrariesByIDContentByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLibrariesByIDContentByIDParamsWithTimeout(timeout time.Duration) *GetLibrariesByIDContentByIDParams {
	var ()
	return &GetLibrariesByIDContentByIDParams{

		timeout: timeout,
	}
}

// NewGetLibrariesByIDContentByIDParamsWithContext creates a new GetLibrariesByIDContentByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLibrariesByIDContentByIDParamsWithContext(ctx context.Context) *GetLibrariesByIDContentByIDParams {
	var ()
	return &GetLibrariesByIDContentByIDParams{

		Context: ctx,
	}
}

// NewGetLibrariesByIDContentByIDParamsWithHTTPClient creates a new GetLibrariesByIDContentByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLibrariesByIDContentByIDParamsWithHTTPClient(client *http.Client) *GetLibrariesByIDContentByIDParams {
	var ()
	return &GetLibrariesByIDContentByIDParams{
		HTTPClient: client,
	}
}

/*GetLibrariesByIDContentByIDParams contains all the parameters to send to the API endpoint
for the get libraries by ID content by ID operation typically these are written to a http.Request
*/
type GetLibrariesByIDContentByIDParams struct {

	/*ContentID
	  the ID of the content asset to retrieve.

	*/
	ContentID string
	/*LibraryID
	  ID of the shared library or the site-id in case of a private library.

	*/
	LibraryID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) WithTimeout(timeout time.Duration) *GetLibrariesByIDContentByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) WithContext(ctx context.Context) *GetLibrariesByIDContentByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) WithHTTPClient(client *http.Client) *GetLibrariesByIDContentByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithContentID adds the contentID to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) WithContentID(contentID string) *GetLibrariesByIDContentByIDParams {
	o.SetContentID(contentID)
	return o
}

// SetContentID adds the contentId to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) SetContentID(contentID string) {
	o.ContentID = contentID
}

// WithLibraryID adds the libraryID to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) WithLibraryID(libraryID string) *GetLibrariesByIDContentByIDParams {
	o.SetLibraryID(libraryID)
	return o
}

// SetLibraryID adds the libraryId to the get libraries by ID content by ID params
func (o *GetLibrariesByIDContentByIDParams) SetLibraryID(libraryID string) {
	o.LibraryID = libraryID
}

// WriteToRequest writes these params to a swagger request
func (o *GetLibrariesByIDContentByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param content_id
	if err := r.SetPathParam("content_id", o.ContentID); err != nil {
		return err
	}

	// path param library_id
	if err := r.SetPathParam("library_id", o.LibraryID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
