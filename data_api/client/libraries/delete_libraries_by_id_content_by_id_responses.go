// Code generated by go-swagger; DO NOT EDIT.

package libraries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteLibrariesByIDContentByIDReader is a Reader for the DeleteLibrariesByIDContentByID structure.
type DeleteLibrariesByIDContentByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLibrariesByIDContentByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteLibrariesByIDContentByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteLibrariesByIDContentByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteLibrariesByIDContentByIDPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteLibrariesByIDContentByIDNoContent creates a DeleteLibrariesByIDContentByIDNoContent with default headers values
func NewDeleteLibrariesByIDContentByIDNoContent() *DeleteLibrariesByIDContentByIDNoContent {
	return &DeleteLibrariesByIDContentByIDNoContent{}
}

/*DeleteLibrariesByIDContentByIDNoContent handles this case with default header values.

DeleteLibrariesByIDContentByIDNoContent delete libraries by Id content by Id no content
*/
type DeleteLibrariesByIDContentByIDNoContent struct {
}

func (o *DeleteLibrariesByIDContentByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /libraries/{library_id}/content/{content_id}][%d] deleteLibrariesByIdContentByIdNoContent ", 204)
}

func (o *DeleteLibrariesByIDContentByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLibrariesByIDContentByIDNotFound creates a DeleteLibrariesByIDContentByIDNotFound with default headers values
func NewDeleteLibrariesByIDContentByIDNotFound() *DeleteLibrariesByIDContentByIDNotFound {
	return &DeleteLibrariesByIDContentByIDNotFound{}
}

/*DeleteLibrariesByIDContentByIDNotFound handles this case with default header values.

Indicates that library with the given id is unknown. or Indicates that the content asset with the given id is unknown.
*/
type DeleteLibrariesByIDContentByIDNotFound struct {
}

func (o *DeleteLibrariesByIDContentByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /libraries/{library_id}/content/{content_id}][%d] deleteLibrariesByIdContentByIdNotFound ", 404)
}

func (o *DeleteLibrariesByIDContentByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLibrariesByIDContentByIDPreconditionFailed creates a DeleteLibrariesByIDContentByIDPreconditionFailed with default headers values
func NewDeleteLibrariesByIDContentByIDPreconditionFailed() *DeleteLibrariesByIDContentByIDPreconditionFailed {
	return &DeleteLibrariesByIDContentByIDPreconditionFailed{}
}

/*DeleteLibrariesByIDContentByIDPreconditionFailed handles this case with default header values.

Indicates that the ID from the request body doesn't match the URL-Id.
*/
type DeleteLibrariesByIDContentByIDPreconditionFailed struct {
}

func (o *DeleteLibrariesByIDContentByIDPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /libraries/{library_id}/content/{content_id}][%d] deleteLibrariesByIdContentByIdPreconditionFailed ", 412)
}

func (o *DeleteLibrariesByIDContentByIDPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
