// Code generated by go-swagger; DO NOT EDIT.

package libraries

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PutLibrariesByIDContentByIDReader is a Reader for the PutLibrariesByIDContentByID structure.
type PutLibrariesByIDContentByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutLibrariesByIDContentByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutLibrariesByIDContentByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutLibrariesByIDContentByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewPutLibrariesByIDContentByIDPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutLibrariesByIDContentByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutLibrariesByIDContentByIDBadRequest creates a PutLibrariesByIDContentByIDBadRequest with default headers values
func NewPutLibrariesByIDContentByIDBadRequest() *PutLibrariesByIDContentByIDBadRequest {
	return &PutLibrariesByIDContentByIDBadRequest{}
}

/*PutLibrariesByIDContentByIDBadRequest handles this case with default header values.

Indicates that the ID from the request body doesn't match the URL-Id.
*/
type PutLibrariesByIDContentByIDBadRequest struct {
}

func (o *PutLibrariesByIDContentByIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /libraries/{library_id}/content/{content_id}][%d] putLibrariesByIdContentByIdBadRequest ", 400)
}

func (o *PutLibrariesByIDContentByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutLibrariesByIDContentByIDNotFound creates a PutLibrariesByIDContentByIDNotFound with default headers values
func NewPutLibrariesByIDContentByIDNotFound() *PutLibrariesByIDContentByIDNotFound {
	return &PutLibrariesByIDContentByIDNotFound{}
}

/*PutLibrariesByIDContentByIDNotFound handles this case with default header values.

Indicates that library with the given id is unknown. or Indicates that the content asset with the given id is unknown.
*/
type PutLibrariesByIDContentByIDNotFound struct {
}

func (o *PutLibrariesByIDContentByIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /libraries/{library_id}/content/{content_id}][%d] putLibrariesByIdContentByIdNotFound ", 404)
}

func (o *PutLibrariesByIDContentByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutLibrariesByIDContentByIDPreconditionFailed creates a PutLibrariesByIDContentByIDPreconditionFailed with default headers values
func NewPutLibrariesByIDContentByIDPreconditionFailed() *PutLibrariesByIDContentByIDPreconditionFailed {
	return &PutLibrariesByIDContentByIDPreconditionFailed{}
}

/*PutLibrariesByIDContentByIDPreconditionFailed handles this case with default header values.

Indicates that the ID from the request body doesn't match the URL-Id.
*/
type PutLibrariesByIDContentByIDPreconditionFailed struct {
}

func (o *PutLibrariesByIDContentByIDPreconditionFailed) Error() string {
	return fmt.Sprintf("[PUT /libraries/{library_id}/content/{content_id}][%d] putLibrariesByIdContentByIdPreconditionFailed ", 412)
}

func (o *PutLibrariesByIDContentByIDPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutLibrariesByIDContentByIDDefault creates a PutLibrariesByIDContentByIDDefault with default headers values
func NewPutLibrariesByIDContentByIDDefault(code int) *PutLibrariesByIDContentByIDDefault {
	return &PutLibrariesByIDContentByIDDefault{
		_statusCode: code,
	}
}

/*PutLibrariesByIDContentByIDDefault handles this case with default header values.

PutLibrariesByIDContentByIDDefault put libraries by ID content by ID default
*/
type PutLibrariesByIDContentByIDDefault struct {
	_statusCode int

	Payload *models.ContentAsset
}

// Code gets the status code for the put libraries by ID content by ID default response
func (o *PutLibrariesByIDContentByIDDefault) Code() int {
	return o._statusCode
}

func (o *PutLibrariesByIDContentByIDDefault) Error() string {
	return fmt.Sprintf("[PUT /libraries/{library_id}/content/{content_id}][%d] putLibrariesByIDContentByID default  %+v", o._statusCode, o.Payload)
}

func (o *PutLibrariesByIDContentByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentAsset)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
