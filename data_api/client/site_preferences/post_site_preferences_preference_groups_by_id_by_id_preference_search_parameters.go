// Code generated by go-swagger; DO NOT EDIT.

package site_preferences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// NewPostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams creates a new PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams object
// with the default values initialized.
func NewPostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams() *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	var ()
	return &PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParamsWithTimeout creates a new PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParamsWithTimeout(timeout time.Duration) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	var ()
	return &PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams{

		timeout: timeout,
	}
}

// NewPostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParamsWithContext creates a new PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParamsWithContext(ctx context.Context) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	var ()
	return &PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams{

		Context: ctx,
	}
}

// NewPostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParamsWithHTTPClient creates a new PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParamsWithHTTPClient(client *http.Client) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	var ()
	return &PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams{
		HTTPClient: client,
	}
}

/*PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams contains all the parameters to send to the API endpoint
for the post site preferences preference groups by ID by ID preference search operation typically these are written to a http.Request
*/
type PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams struct {

	/*Body*/
	Body *models.SearchRequest
	/*Expand*/
	Expand []string
	/*GroupID
	  The ID of the preference group.

	*/
	GroupID string
	/*InstanceType
	  An instance type, one of {staging,development,sandbox,production}.

	*/
	InstanceType string
	/*MaskPasswords*/
	MaskPasswords *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) WithTimeout(timeout time.Duration) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) WithContext(ctx context.Context) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) WithHTTPClient(client *http.Client) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) WithBody(body *models.SearchRequest) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) SetBody(body *models.SearchRequest) {
	o.Body = body
}

// WithExpand adds the expand to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) WithExpand(expand []string) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WithGroupID adds the groupID to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) WithGroupID(groupID string) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	o.SetGroupID(groupID)
	return o
}

// SetGroupID adds the groupId to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) SetGroupID(groupID string) {
	o.GroupID = groupID
}

// WithInstanceType adds the instanceType to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) WithInstanceType(instanceType string) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	o.SetInstanceType(instanceType)
	return o
}

// SetInstanceType adds the instanceType to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) SetInstanceType(instanceType string) {
	o.InstanceType = instanceType
}

// WithMaskPasswords adds the maskPasswords to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) WithMaskPasswords(maskPasswords *bool) *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams {
	o.SetMaskPasswords(maskPasswords)
	return o
}

// SetMaskPasswords adds the maskPasswords to the post site preferences preference groups by ID by ID preference search params
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) SetMaskPasswords(maskPasswords *bool) {
	o.MaskPasswords = maskPasswords
}

// WriteToRequest writes these params to a swagger request
func (o *PostSitePreferencesPreferenceGroupsByIDByIDPreferenceSearchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	valuesExpand := o.Expand

	joinedExpand := swag.JoinByFormat(valuesExpand, "")
	// query array param expand
	if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
		return err
	}

	// path param group_id
	if err := r.SetPathParam("group_id", o.GroupID); err != nil {
		return err
	}

	// path param instance_type
	if err := r.SetPathParam("instance_type", o.InstanceType); err != nil {
		return err
	}

	if o.MaskPasswords != nil {

		// query param mask_passwords
		var qrMaskPasswords bool
		if o.MaskPasswords != nil {
			qrMaskPasswords = *o.MaskPasswords
		}
		qMaskPasswords := swag.FormatBool(qrMaskPasswords)
		if qMaskPasswords != "" {
			if err := r.SetQueryParam("mask_passwords", qMaskPasswords); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
