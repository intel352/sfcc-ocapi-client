// Code generated by go-swagger; DO NOT EDIT.

package site_preferences

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDReader is a Reader for the GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByID structure.
type GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound creates a GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound with default headers values
func NewGetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound() *GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound {
	return &GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound{}
}

/*GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound handles this case with default header values.

Indicates the preference group is not found. or Indicates the preference is not found.
*/
type GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound struct {
}

func (o *GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /site_preferences/preference_groups/{group_id}/{instance_type}/preferences/{preference_id}][%d] getSitePreferencesPreferenceGroupsByIdByIdPreferencesByIdNotFound ", 404)
}

func (o *GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault creates a GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault with default headers values
func NewGetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault(code int) *GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault {
	return &GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault{
		_statusCode: code,
	}
}

/*GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault handles this case with default header values.

GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault get site preferences preference groups by ID by ID preferences by ID default
*/
type GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault struct {
	_statusCode int

	Payload *models.PreferenceValue
}

// Code gets the status code for the get site preferences preference groups by ID by ID preferences by ID default response
func (o *GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault) Error() string {
	return fmt.Sprintf("[GET /site_preferences/preference_groups/{group_id}/{instance_type}/preferences/{preference_id}][%d] getSitePreferencesPreferenceGroupsByIDByIDPreferencesByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetSitePreferencesPreferenceGroupsByIDByIDPreferencesByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PreferenceValue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
