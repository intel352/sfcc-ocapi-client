// Code generated by go-swagger; DO NOT EDIT.

package ocapi_configs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PutOcapiConfigsByIDReader is a Reader for the PutOcapiConfigsByID structure.
type PutOcapiConfigsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutOcapiConfigsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutOcapiConfigsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutOcapiConfigsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutOcapiConfigsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutOcapiConfigsByIDBadRequest creates a PutOcapiConfigsByIDBadRequest with default headers values
func NewPutOcapiConfigsByIDBadRequest() *PutOcapiConfigsByIDBadRequest {
	return &PutOcapiConfigsByIDBadRequest{}
}

/*PutOcapiConfigsByIDBadRequest handles this case with default header values.

Indicates that the resulting config is not valid or Write operation on self is not allowed. (The clientId being used for calling this API should be different from target clientId)
*/
type PutOcapiConfigsByIDBadRequest struct {
}

func (o *PutOcapiConfigsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /ocapi_configs/{clientId}][%d] putOcapiConfigsByIdBadRequest ", 400)
}

func (o *PutOcapiConfigsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutOcapiConfigsByIDNotFound creates a PutOcapiConfigsByIDNotFound with default headers values
func NewPutOcapiConfigsByIDNotFound() *PutOcapiConfigsByIDNotFound {
	return &PutOcapiConfigsByIDNotFound{}
}

/*PutOcapiConfigsByIDNotFound handles this case with default header values.

Indicates that at least one of the target sites is unknown
*/
type PutOcapiConfigsByIDNotFound struct {
}

func (o *PutOcapiConfigsByIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /ocapi_configs/{clientId}][%d] putOcapiConfigsByIdNotFound ", 404)
}

func (o *PutOcapiConfigsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutOcapiConfigsByIDDefault creates a PutOcapiConfigsByIDDefault with default headers values
func NewPutOcapiConfigsByIDDefault(code int) *PutOcapiConfigsByIDDefault {
	return &PutOcapiConfigsByIDDefault{
		_statusCode: code,
	}
}

/*PutOcapiConfigsByIDDefault handles this case with default header values.

PutOcapiConfigsByIDDefault put ocapi configs by ID default
*/
type PutOcapiConfigsByIDDefault struct {
	_statusCode int

	Payload *models.OcapiConfigsAPIResponse
}

// Code gets the status code for the put ocapi configs by ID default response
func (o *PutOcapiConfigsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PutOcapiConfigsByIDDefault) Error() string {
	return fmt.Sprintf("[PUT /ocapi_configs/{clientId}][%d] putOcapiConfigsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PutOcapiConfigsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OcapiConfigsAPIResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
