// Code generated by go-swagger; DO NOT EDIT.

package system_object_definitions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PutSystemObjectDefinitionsByIDAttributeGroupsByIDReader is a Reader for the PutSystemObjectDefinitionsByIDAttributeGroupsByID structure.
type PutSystemObjectDefinitionsByIDAttributeGroupsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSystemObjectDefinitionsByIDAttributeGroupsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest creates a PutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest with default headers values
func NewPutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest() *PutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest {
	return &PutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest{}
}

/*PutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest handles this case with default header values.

Thrown when trying to create an internal attribute group or if a attribute group exists already in the site with the given identifier and the header x-dw-validate-existing=true is passed in with the request.
*/
type PutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest struct {
}

func (o *PutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /system_object_definitions/{object_type}/attribute_groups/{id}][%d] putSystemObjectDefinitionsByIdAttributeGroupsByIdBadRequest ", 400)
}

func (o *PutSystemObjectDefinitionsByIDAttributeGroupsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault creates a PutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault with default headers values
func NewPutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault(code int) *PutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault {
	return &PutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault{
		_statusCode: code,
	}
}

/*PutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault handles this case with default header values.

PutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault put system object definitions by ID attribute groups by ID default
*/
type PutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault struct {
	_statusCode int

	Payload *models.ObjectAttributeGroup
}

// Code gets the status code for the put system object definitions by ID attribute groups by ID default response
func (o *PutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault) Error() string {
	return fmt.Sprintf("[PUT /system_object_definitions/{object_type}/attribute_groups/{id}][%d] putSystemObjectDefinitionsByIDAttributeGroupsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PutSystemObjectDefinitionsByIDAttributeGroupsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ObjectAttributeGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
