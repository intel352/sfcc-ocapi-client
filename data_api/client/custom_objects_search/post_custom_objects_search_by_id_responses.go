// Code generated by go-swagger; DO NOT EDIT.

package custom_objects_search

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PostCustomObjectsSearchByIDReader is a Reader for the PostCustomObjectsSearchByID structure.
type PostCustomObjectsSearchByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCustomObjectsSearchByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPostCustomObjectsSearchByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostCustomObjectsSearchByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostCustomObjectsSearchByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostCustomObjectsSearchByIDBadRequest creates a PostCustomObjectsSearchByIDBadRequest with default headers values
func NewPostCustomObjectsSearchByIDBadRequest() *PostCustomObjectsSearchByIDBadRequest {
	return &PostCustomObjectsSearchByIDBadRequest{}
}

/*PostCustomObjectsSearchByIDBadRequest handles this case with default header values.

Indicates that the value to search with does not match the
              type of the search field.
*/
type PostCustomObjectsSearchByIDBadRequest struct {
}

func (o *PostCustomObjectsSearchByIDBadRequest) Error() string {
	return fmt.Sprintf("[POST /custom_objects_search/{object_type}][%d] postCustomObjectsSearchByIdBadRequest ", 400)
}

func (o *PostCustomObjectsSearchByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostCustomObjectsSearchByIDNotFound creates a PostCustomObjectsSearchByIDNotFound with default headers values
func NewPostCustomObjectsSearchByIDNotFound() *PostCustomObjectsSearchByIDNotFound {
	return &PostCustomObjectsSearchByIDNotFound{}
}

/*PostCustomObjectsSearchByIDNotFound handles this case with default header values.

In case of an unknown object type.
*/
type PostCustomObjectsSearchByIDNotFound struct {
}

func (o *PostCustomObjectsSearchByIDNotFound) Error() string {
	return fmt.Sprintf("[POST /custom_objects_search/{object_type}][%d] postCustomObjectsSearchByIdNotFound ", 404)
}

func (o *PostCustomObjectsSearchByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostCustomObjectsSearchByIDDefault creates a PostCustomObjectsSearchByIDDefault with default headers values
func NewPostCustomObjectsSearchByIDDefault(code int) *PostCustomObjectsSearchByIDDefault {
	return &PostCustomObjectsSearchByIDDefault{
		_statusCode: code,
	}
}

/*PostCustomObjectsSearchByIDDefault handles this case with default header values.

PostCustomObjectsSearchByIDDefault post custom objects search by ID default
*/
type PostCustomObjectsSearchByIDDefault struct {
	_statusCode int

	Payload *models.CustomObjectSearchResult
}

// Code gets the status code for the post custom objects search by ID default response
func (o *PostCustomObjectsSearchByIDDefault) Code() int {
	return o._statusCode
}

func (o *PostCustomObjectsSearchByIDDefault) Error() string {
	return fmt.Sprintf("[POST /custom_objects_search/{object_type}][%d] postCustomObjectsSearchByID default  %+v", o._statusCode, o.Payload)
}

func (o *PostCustomObjectsSearchByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomObjectSearchResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
