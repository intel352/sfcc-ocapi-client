// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// NewPutProductsByIDVariationsByIDParams creates a new PutProductsByIDVariationsByIDParams object
// with the default values initialized.
func NewPutProductsByIDVariationsByIDParams() *PutProductsByIDVariationsByIDParams {
	var ()
	return &PutProductsByIDVariationsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutProductsByIDVariationsByIDParamsWithTimeout creates a new PutProductsByIDVariationsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutProductsByIDVariationsByIDParamsWithTimeout(timeout time.Duration) *PutProductsByIDVariationsByIDParams {
	var ()
	return &PutProductsByIDVariationsByIDParams{

		timeout: timeout,
	}
}

// NewPutProductsByIDVariationsByIDParamsWithContext creates a new PutProductsByIDVariationsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutProductsByIDVariationsByIDParamsWithContext(ctx context.Context) *PutProductsByIDVariationsByIDParams {
	var ()
	return &PutProductsByIDVariationsByIDParams{

		Context: ctx,
	}
}

// NewPutProductsByIDVariationsByIDParamsWithHTTPClient creates a new PutProductsByIDVariationsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutProductsByIDVariationsByIDParamsWithHTTPClient(client *http.Client) *PutProductsByIDVariationsByIDParams {
	var ()
	return &PutProductsByIDVariationsByIDParams{
		HTTPClient: client,
	}
}

/*PutProductsByIDVariationsByIDParams contains all the parameters to send to the API endpoint
for the put products by ID variations by ID operation typically these are written to a http.Request
*/
type PutProductsByIDVariationsByIDParams struct {

	/*Body*/
	Body *models.Variant
	/*ID
	  The id of the variation product.

	*/
	ID string
	/*MasterProductID
	  The id of the master product that contains the variation.

	*/
	MasterProductID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) WithTimeout(timeout time.Duration) *PutProductsByIDVariationsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) WithContext(ctx context.Context) *PutProductsByIDVariationsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) WithHTTPClient(client *http.Client) *PutProductsByIDVariationsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) WithBody(body *models.Variant) *PutProductsByIDVariationsByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) SetBody(body *models.Variant) {
	o.Body = body
}

// WithID adds the id to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) WithID(id string) *PutProductsByIDVariationsByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) SetID(id string) {
	o.ID = id
}

// WithMasterProductID adds the masterProductID to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) WithMasterProductID(masterProductID string) *PutProductsByIDVariationsByIDParams {
	o.SetMasterProductID(masterProductID)
	return o
}

// SetMasterProductID adds the masterProductId to the put products by ID variations by ID params
func (o *PutProductsByIDVariationsByIDParams) SetMasterProductID(masterProductID string) {
	o.MasterProductID = masterProductID
}

// WriteToRequest writes these params to a swagger request
func (o *PutProductsByIDVariationsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param master_product_id
	if err := r.SetPathParam("master_product_id", o.MasterProductID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
