// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetProductsByIDProductOptionsByIDValuesByIDReader is a Reader for the GetProductsByIDProductOptionsByIDValuesByID structure.
type GetProductsByIDProductOptionsByIDValuesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProductsByIDProductOptionsByIDValuesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetProductsByIDProductOptionsByIDValuesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetProductsByIDProductOptionsByIDValuesByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetProductsByIDProductOptionsByIDValuesByIDNotFound creates a GetProductsByIDProductOptionsByIDValuesByIDNotFound with default headers values
func NewGetProductsByIDProductOptionsByIDValuesByIDNotFound() *GetProductsByIDProductOptionsByIDValuesByIDNotFound {
	return &GetProductsByIDProductOptionsByIDValuesByIDNotFound{}
}

/*GetProductsByIDProductOptionsByIDValuesByIDNotFound handles this case with default header values.

Indicates the product is not found. or Indicates the local product option is not found. or Indicates the local product option value is not found.
*/
type GetProductsByIDProductOptionsByIDValuesByIDNotFound struct {
}

func (o *GetProductsByIDProductOptionsByIDValuesByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /products/{product_id}/product_options/{option_id}/values/{id}][%d] getProductsByIdProductOptionsByIdValuesByIdNotFound ", 404)
}

func (o *GetProductsByIDProductOptionsByIDValuesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProductsByIDProductOptionsByIDValuesByIDDefault creates a GetProductsByIDProductOptionsByIDValuesByIDDefault with default headers values
func NewGetProductsByIDProductOptionsByIDValuesByIDDefault(code int) *GetProductsByIDProductOptionsByIDValuesByIDDefault {
	return &GetProductsByIDProductOptionsByIDValuesByIDDefault{
		_statusCode: code,
	}
}

/*GetProductsByIDProductOptionsByIDValuesByIDDefault handles this case with default header values.

GetProductsByIDProductOptionsByIDValuesByIDDefault get products by ID product options by ID values by ID default
*/
type GetProductsByIDProductOptionsByIDValuesByIDDefault struct {
	_statusCode int

	Payload *models.ProductOptionValue
}

// Code gets the status code for the get products by ID product options by ID values by ID default response
func (o *GetProductsByIDProductOptionsByIDValuesByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetProductsByIDProductOptionsByIDValuesByIDDefault) Error() string {
	return fmt.Sprintf("[GET /products/{product_id}/product_options/{option_id}/values/{id}][%d] getProductsByIDProductOptionsByIDValuesByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetProductsByIDProductOptionsByIDValuesByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProductOptionValue)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
