// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// GetProductsByIDVariationGroupsReader is a Reader for the GetProductsByIDVariationGroups structure.
type GetProductsByIDVariationGroupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProductsByIDVariationGroupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewGetProductsByIDVariationGroupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetProductsByIDVariationGroupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetProductsByIDVariationGroupsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetProductsByIDVariationGroupsBadRequest creates a GetProductsByIDVariationGroupsBadRequest with default headers values
func NewGetProductsByIDVariationGroupsBadRequest() *GetProductsByIDVariationGroupsBadRequest {
	return &GetProductsByIDVariationGroupsBadRequest{}
}

/*GetProductsByIDVariationGroupsBadRequest handles this case with default header values.

Indicates that the given product is not a variation master.
*/
type GetProductsByIDVariationGroupsBadRequest struct {
}

func (o *GetProductsByIDVariationGroupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /products/{master_product_id}/variation_groups][%d] getProductsByIdVariationGroupsBadRequest ", 400)
}

func (o *GetProductsByIDVariationGroupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProductsByIDVariationGroupsNotFound creates a GetProductsByIDVariationGroupsNotFound with default headers values
func NewGetProductsByIDVariationGroupsNotFound() *GetProductsByIDVariationGroupsNotFound {
	return &GetProductsByIDVariationGroupsNotFound{}
}

/*GetProductsByIDVariationGroupsNotFound handles this case with default header values.

Indicates the master product is not found.
*/
type GetProductsByIDVariationGroupsNotFound struct {
}

func (o *GetProductsByIDVariationGroupsNotFound) Error() string {
	return fmt.Sprintf("[GET /products/{master_product_id}/variation_groups][%d] getProductsByIdVariationGroupsNotFound ", 404)
}

func (o *GetProductsByIDVariationGroupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetProductsByIDVariationGroupsDefault creates a GetProductsByIDVariationGroupsDefault with default headers values
func NewGetProductsByIDVariationGroupsDefault(code int) *GetProductsByIDVariationGroupsDefault {
	return &GetProductsByIDVariationGroupsDefault{
		_statusCode: code,
	}
}

/*GetProductsByIDVariationGroupsDefault handles this case with default header values.

GetProductsByIDVariationGroupsDefault get products by ID variation groups default
*/
type GetProductsByIDVariationGroupsDefault struct {
	_statusCode int

	Payload *models.VariationGroups
}

// Code gets the status code for the get products by ID variation groups default response
func (o *GetProductsByIDVariationGroupsDefault) Code() int {
	return o._statusCode
}

func (o *GetProductsByIDVariationGroupsDefault) Error() string {
	return fmt.Sprintf("[GET /products/{master_product_id}/variation_groups][%d] getProductsByIDVariationGroups default  %+v", o._statusCode, o.Payload)
}

func (o *GetProductsByIDVariationGroupsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VariationGroups)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
