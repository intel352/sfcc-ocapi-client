// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// NewPatchProductsByIDVariationGroupsByIDParams creates a new PatchProductsByIDVariationGroupsByIDParams object
// with the default values initialized.
func NewPatchProductsByIDVariationGroupsByIDParams() *PatchProductsByIDVariationGroupsByIDParams {
	var ()
	return &PatchProductsByIDVariationGroupsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchProductsByIDVariationGroupsByIDParamsWithTimeout creates a new PatchProductsByIDVariationGroupsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchProductsByIDVariationGroupsByIDParamsWithTimeout(timeout time.Duration) *PatchProductsByIDVariationGroupsByIDParams {
	var ()
	return &PatchProductsByIDVariationGroupsByIDParams{

		timeout: timeout,
	}
}

// NewPatchProductsByIDVariationGroupsByIDParamsWithContext creates a new PatchProductsByIDVariationGroupsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchProductsByIDVariationGroupsByIDParamsWithContext(ctx context.Context) *PatchProductsByIDVariationGroupsByIDParams {
	var ()
	return &PatchProductsByIDVariationGroupsByIDParams{

		Context: ctx,
	}
}

// NewPatchProductsByIDVariationGroupsByIDParamsWithHTTPClient creates a new PatchProductsByIDVariationGroupsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchProductsByIDVariationGroupsByIDParamsWithHTTPClient(client *http.Client) *PatchProductsByIDVariationGroupsByIDParams {
	var ()
	return &PatchProductsByIDVariationGroupsByIDParams{
		HTTPClient: client,
	}
}

/*PatchProductsByIDVariationGroupsByIDParams contains all the parameters to send to the API endpoint
for the patch products by ID variation groups by ID operation typically these are written to a http.Request
*/
type PatchProductsByIDVariationGroupsByIDParams struct {

	/*Body*/
	Body *models.VariationGroup
	/*ID
	  The id of the variation group product.

	*/
	ID string
	/*MasterProductID
	  The id of the master product that contains the variation group.

	*/
	MasterProductID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) WithTimeout(timeout time.Duration) *PatchProductsByIDVariationGroupsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) WithContext(ctx context.Context) *PatchProductsByIDVariationGroupsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) WithHTTPClient(client *http.Client) *PatchProductsByIDVariationGroupsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) WithBody(body *models.VariationGroup) *PatchProductsByIDVariationGroupsByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) SetBody(body *models.VariationGroup) {
	o.Body = body
}

// WithID adds the id to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) WithID(id string) *PatchProductsByIDVariationGroupsByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) SetID(id string) {
	o.ID = id
}

// WithMasterProductID adds the masterProductID to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) WithMasterProductID(masterProductID string) *PatchProductsByIDVariationGroupsByIDParams {
	o.SetMasterProductID(masterProductID)
	return o
}

// SetMasterProductID adds the masterProductId to the patch products by ID variation groups by ID params
func (o *PatchProductsByIDVariationGroupsByIDParams) SetMasterProductID(masterProductID string) {
	o.MasterProductID = masterProductID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchProductsByIDVariationGroupsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	// path param master_product_id
	if err := r.SetPathParam("master_product_id", o.MasterProductID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
