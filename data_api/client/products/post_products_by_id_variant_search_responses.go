// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PostProductsByIDVariantSearchReader is a Reader for the PostProductsByIDVariantSearch structure.
type PostProductsByIDVariantSearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProductsByIDVariantSearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPostProductsByIDVariantSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostProductsByIDVariantSearchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostProductsByIDVariantSearchDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostProductsByIDVariantSearchBadRequest creates a PostProductsByIDVariantSearchBadRequest with default headers values
func NewPostProductsByIDVariantSearchBadRequest() *PostProductsByIDVariantSearchBadRequest {
	return &PostProductsByIDVariantSearchBadRequest{}
}

/*PostProductsByIDVariantSearchBadRequest handles this case with default header values.

Thrown if the query is ill-formed. or Thrown if the id is not the product id of a Variation Master product or Variation Group product. or Thrown if the Site ID query parameter is missing in the search of Variants by a site-specific product attribute.
*/
type PostProductsByIDVariantSearchBadRequest struct {
}

func (o *PostProductsByIDVariantSearchBadRequest) Error() string {
	return fmt.Sprintf("[POST /products/{id}/variant_search][%d] postProductsByIdVariantSearchBadRequest ", 400)
}

func (o *PostProductsByIDVariantSearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostProductsByIDVariantSearchNotFound creates a PostProductsByIDVariantSearchNotFound with default headers values
func NewPostProductsByIDVariantSearchNotFound() *PostProductsByIDVariantSearchNotFound {
	return &PostProductsByIDVariantSearchNotFound{}
}

/*PostProductsByIDVariantSearchNotFound handles this case with default header values.

Thrown if the product is not found.
*/
type PostProductsByIDVariantSearchNotFound struct {
}

func (o *PostProductsByIDVariantSearchNotFound) Error() string {
	return fmt.Sprintf("[POST /products/{id}/variant_search][%d] postProductsByIdVariantSearchNotFound ", 404)
}

func (o *PostProductsByIDVariantSearchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostProductsByIDVariantSearchDefault creates a PostProductsByIDVariantSearchDefault with default headers values
func NewPostProductsByIDVariantSearchDefault(code int) *PostProductsByIDVariantSearchDefault {
	return &PostProductsByIDVariantSearchDefault{
		_statusCode: code,
	}
}

/*PostProductsByIDVariantSearchDefault handles this case with default header values.

PostProductsByIDVariantSearchDefault post products by ID variant search default
*/
type PostProductsByIDVariantSearchDefault struct {
	_statusCode int

	Payload *models.VariantSearchResult
}

// Code gets the status code for the post products by ID variant search default response
func (o *PostProductsByIDVariantSearchDefault) Code() int {
	return o._statusCode
}

func (o *PostProductsByIDVariantSearchDefault) Error() string {
	return fmt.Sprintf("[POST /products/{id}/variant_search][%d] postProductsByIDVariantSearch default  %+v", o._statusCode, o.Payload)
}

func (o *PostProductsByIDVariantSearchDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VariantSearchResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
