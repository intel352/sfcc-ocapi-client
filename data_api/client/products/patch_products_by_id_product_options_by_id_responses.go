// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PatchProductsByIDProductOptionsByIDReader is a Reader for the PatchProductsByIDProductOptionsByID structure.
type PatchProductsByIDProductOptionsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchProductsByIDProductOptionsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPatchProductsByIDProductOptionsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchProductsByIDProductOptionsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchProductsByIDProductOptionsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchProductsByIDProductOptionsByIDBadRequest creates a PatchProductsByIDProductOptionsByIDBadRequest with default headers values
func NewPatchProductsByIDProductOptionsByIDBadRequest() *PatchProductsByIDProductOptionsByIDBadRequest {
	return &PatchProductsByIDProductOptionsByIDBadRequest{}
}

/*PatchProductsByIDProductOptionsByIDBadRequest handles this case with default header values.

Indicates the shared product option cannot be updated.
*/
type PatchProductsByIDProductOptionsByIDBadRequest struct {
}

func (o *PatchProductsByIDProductOptionsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /products/{product_id}/product_options/{id}][%d] patchProductsByIdProductOptionsByIdBadRequest ", 400)
}

func (o *PatchProductsByIDProductOptionsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchProductsByIDProductOptionsByIDNotFound creates a PatchProductsByIDProductOptionsByIDNotFound with default headers values
func NewPatchProductsByIDProductOptionsByIDNotFound() *PatchProductsByIDProductOptionsByIDNotFound {
	return &PatchProductsByIDProductOptionsByIDNotFound{}
}

/*PatchProductsByIDProductOptionsByIDNotFound handles this case with default header values.

Indicates the product is not found. or Indicates the local product option is not found.
*/
type PatchProductsByIDProductOptionsByIDNotFound struct {
}

func (o *PatchProductsByIDProductOptionsByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /products/{product_id}/product_options/{id}][%d] patchProductsByIdProductOptionsByIdNotFound ", 404)
}

func (o *PatchProductsByIDProductOptionsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchProductsByIDProductOptionsByIDDefault creates a PatchProductsByIDProductOptionsByIDDefault with default headers values
func NewPatchProductsByIDProductOptionsByIDDefault(code int) *PatchProductsByIDProductOptionsByIDDefault {
	return &PatchProductsByIDProductOptionsByIDDefault{
		_statusCode: code,
	}
}

/*PatchProductsByIDProductOptionsByIDDefault handles this case with default header values.

PatchProductsByIDProductOptionsByIDDefault patch products by ID product options by ID default
*/
type PatchProductsByIDProductOptionsByIDDefault struct {
	_statusCode int

	Payload *models.ProductOption
}

// Code gets the status code for the patch products by ID product options by ID default response
func (o *PatchProductsByIDProductOptionsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchProductsByIDProductOptionsByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /products/{product_id}/product_options/{id}][%d] patchProductsByIDProductOptionsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchProductsByIDProductOptionsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProductOption)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
