// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PutProductsByIDProductOptionsByIDReader is a Reader for the PutProductsByIDProductOptionsByID structure.
type PutProductsByIDProductOptionsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutProductsByIDProductOptionsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutProductsByIDProductOptionsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutProductsByIDProductOptionsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutProductsByIDProductOptionsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutProductsByIDProductOptionsByIDBadRequest creates a PutProductsByIDProductOptionsByIDBadRequest with default headers values
func NewPutProductsByIDProductOptionsByIDBadRequest() *PutProductsByIDProductOptionsByIDBadRequest {
	return &PutProductsByIDProductOptionsByIDBadRequest{}
}

/*PutProductsByIDProductOptionsByIDBadRequest handles this case with default header values.

Indicates the local product option cannot be created for a product of type variation group.
*/
type PutProductsByIDProductOptionsByIDBadRequest struct {
}

func (o *PutProductsByIDProductOptionsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /products/{product_id}/product_options/{id}][%d] putProductsByIdProductOptionsByIdBadRequest ", 400)
}

func (o *PutProductsByIDProductOptionsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutProductsByIDProductOptionsByIDNotFound creates a PutProductsByIDProductOptionsByIDNotFound with default headers values
func NewPutProductsByIDProductOptionsByIDNotFound() *PutProductsByIDProductOptionsByIDNotFound {
	return &PutProductsByIDProductOptionsByIDNotFound{}
}

/*PutProductsByIDProductOptionsByIDNotFound handles this case with default header values.

Indicates the product is not found.
*/
type PutProductsByIDProductOptionsByIDNotFound struct {
}

func (o *PutProductsByIDProductOptionsByIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /products/{product_id}/product_options/{id}][%d] putProductsByIdProductOptionsByIdNotFound ", 404)
}

func (o *PutProductsByIDProductOptionsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutProductsByIDProductOptionsByIDDefault creates a PutProductsByIDProductOptionsByIDDefault with default headers values
func NewPutProductsByIDProductOptionsByIDDefault(code int) *PutProductsByIDProductOptionsByIDDefault {
	return &PutProductsByIDProductOptionsByIDDefault{
		_statusCode: code,
	}
}

/*PutProductsByIDProductOptionsByIDDefault handles this case with default header values.

PutProductsByIDProductOptionsByIDDefault put products by ID product options by ID default
*/
type PutProductsByIDProductOptionsByIDDefault struct {
	_statusCode int

	Payload *models.ProductOption
}

// Code gets the status code for the put products by ID product options by ID default response
func (o *PutProductsByIDProductOptionsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PutProductsByIDProductOptionsByIDDefault) Error() string {
	return fmt.Sprintf("[PUT /products/{product_id}/product_options/{id}][%d] putProductsByIDProductOptionsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PutProductsByIDProductOptionsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProductOption)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
