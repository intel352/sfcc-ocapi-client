// Code generated by go-swagger; DO NOT EDIT.

package inventory_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/data_api/models"
)

// PutInventoryListsByIDReader is a Reader for the PutInventoryListsByID structure.
type PutInventoryListsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutInventoryListsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutInventoryListsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutInventoryListsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutInventoryListsByIDBadRequest creates a PutInventoryListsByIDBadRequest with default headers values
func NewPutInventoryListsByIDBadRequest() *PutInventoryListsByIDBadRequest {
	return &PutInventoryListsByIDBadRequest{}
}

/*PutInventoryListsByIDBadRequest handles this case with default header values.

if the Id in request is not the same as the ID in document.
*/
type PutInventoryListsByIDBadRequest struct {
}

func (o *PutInventoryListsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PUT /inventory_lists/{id}][%d] putInventoryListsByIdBadRequest ", 400)
}

func (o *PutInventoryListsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutInventoryListsByIDDefault creates a PutInventoryListsByIDDefault with default headers values
func NewPutInventoryListsByIDDefault(code int) *PutInventoryListsByIDDefault {
	return &PutInventoryListsByIDDefault{
		_statusCode: code,
	}
}

/*PutInventoryListsByIDDefault handles this case with default header values.

PutInventoryListsByIDDefault put inventory lists by ID default
*/
type PutInventoryListsByIDDefault struct {
	_statusCode int

	Payload *models.InventoryList
}

// Code gets the status code for the put inventory lists by ID default response
func (o *PutInventoryListsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PutInventoryListsByIDDefault) Error() string {
	return fmt.Sprintf("[PUT /inventory_lists/{id}][%d] putInventoryListsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PutInventoryListsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InventoryList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
