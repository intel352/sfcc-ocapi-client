// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomerGroupMember Document representing a customer group member
// swagger:model customer_group_member
type CustomerGroupMember struct {

	// A flag indicating whether the customer is enabled and can log in.
	Active bool `json:"active,omitempty"`

	// c family status
	CFamilyStatus string `json:"c_familyStatus,omitempty"`

	// Returns the value of attribute 'creationDate'.
	// Read Only: true
	// Format: date-time
	CreationDate strfmt.DateTime `json:"creation_date,omitempty"`

	// The link to the customer resource.
	// Max Length: 256
	CustomerLink string `json:"customer_link,omitempty"`

	// The customers number (id).
	// Required: true
	// Max Length: 100
	CustomerNo *string `json:"customer_no"`

	// The customer's email address.
	// Max Length: 256
	// Format: email
	Email strfmt.Email `json:"email,omitempty"`

	// The customer's first name.
	// Max Length: 256
	FirstName string `json:"first_name,omitempty"`

	// Returns the value of attribute 'lastModified'.
	// Read Only: true
	// Format: date-time
	LastModified strfmt.DateTime `json:"last_modified,omitempty"`

	// The customer's last name.
	// Required: true
	// Max Length: 256
	LastName *string `json:"last_name"`

	// The link to the customer group member resource.
	// Max Length: 256
	Link string `json:"link,omitempty"`

	// The login of the customer.
	// Max Length: 256
	Login string `json:"login,omitempty"`
}

// Validate validates this customer group member
func (m *CustomerGroupMember) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCustomerLink(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCustomerNo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFirstName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastModified(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLink(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLogin(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomerGroupMember) validateCreationDate(formats strfmt.Registry) error {

	if swag.IsZero(m.CreationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("creation_date", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CustomerGroupMember) validateCustomerLink(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomerLink) { // not required
		return nil
	}

	if err := validate.MaxLength("customer_link", "body", string(m.CustomerLink), 256); err != nil {
		return err
	}

	return nil
}

func (m *CustomerGroupMember) validateCustomerNo(formats strfmt.Registry) error {

	if err := validate.Required("customer_no", "body", m.CustomerNo); err != nil {
		return err
	}

	if err := validate.MaxLength("customer_no", "body", string(*m.CustomerNo), 100); err != nil {
		return err
	}

	return nil
}

func (m *CustomerGroupMember) validateEmail(formats strfmt.Registry) error {

	if swag.IsZero(m.Email) { // not required
		return nil
	}

	if err := validate.MaxLength("email", "body", string(m.Email), 256); err != nil {
		return err
	}

	if err := validate.FormatOf("email", "body", "email", m.Email.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CustomerGroupMember) validateFirstName(formats strfmt.Registry) error {

	if swag.IsZero(m.FirstName) { // not required
		return nil
	}

	if err := validate.MaxLength("first_name", "body", string(m.FirstName), 256); err != nil {
		return err
	}

	return nil
}

func (m *CustomerGroupMember) validateLastModified(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModified) { // not required
		return nil
	}

	if err := validate.FormatOf("last_modified", "body", "date-time", m.LastModified.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *CustomerGroupMember) validateLastName(formats strfmt.Registry) error {

	if err := validate.Required("last_name", "body", m.LastName); err != nil {
		return err
	}

	if err := validate.MaxLength("last_name", "body", string(*m.LastName), 256); err != nil {
		return err
	}

	return nil
}

func (m *CustomerGroupMember) validateLink(formats strfmt.Registry) error {

	if swag.IsZero(m.Link) { // not required
		return nil
	}

	if err := validate.MaxLength("link", "body", string(m.Link), 256); err != nil {
		return err
	}

	return nil
}

func (m *CustomerGroupMember) validateLogin(formats strfmt.Registry) error {

	if swag.IsZero(m.Login) { // not required
		return nil
	}

	if err := validate.MaxLength("login", "body", string(m.Login), 256); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustomerGroupMember) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomerGroupMember) UnmarshalBinary(b []byte) error {
	var res CustomerGroupMember
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
