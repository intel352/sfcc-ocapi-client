// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SortingRule Document representing a product sorting rule
// swagger:model sorting_rule
type SortingRule struct {

	// The creation date, read only
	// Format: date-time
	CreationDate strfmt.DateTime `json:"creation_date,omitempty"`

	// The description of the product sorting rule.
	// Max Length: 4000
	Description string `json:"description,omitempty"`

	// the id of product sorting rule.
	ID string `json:"id,omitempty"`

	// the steps involved in sorting by this rule.
	ProductSortingRuleSteps []*SortingRuleStep `json:"product_sorting_rule_steps"`

	// The context of the rule, either site or global
	RuleContext string `json:"rule_context,omitempty"`

	// site
	Site string `json:"site,omitempty"`
}

// Validate validates this sorting rule
func (m *SortingRule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProductSortingRuleSteps(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SortingRule) validateCreationDate(formats strfmt.Registry) error {

	if swag.IsZero(m.CreationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("creation_date", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *SortingRule) validateDescription(formats strfmt.Registry) error {

	if swag.IsZero(m.Description) { // not required
		return nil
	}

	if err := validate.MaxLength("description", "body", string(m.Description), 4000); err != nil {
		return err
	}

	return nil
}

func (m *SortingRule) validateProductSortingRuleSteps(formats strfmt.Registry) error {

	if swag.IsZero(m.ProductSortingRuleSteps) { // not required
		return nil
	}

	for i := 0; i < len(m.ProductSortingRuleSteps); i++ {
		if swag.IsZero(m.ProductSortingRuleSteps[i]) { // not required
			continue
		}

		if m.ProductSortingRuleSteps[i] != nil {
			if err := m.ProductSortingRuleSteps[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("product_sorting_rule_steps" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *SortingRule) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SortingRule) UnmarshalBinary(b []byte) error {
	var res SortingRule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
