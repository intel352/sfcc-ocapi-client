// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CatalogCategoryID Document representing a catalog category id.
// swagger:model catalog_category_id
type CatalogCategoryID struct {

	// The id of the catalog that owns the category.
	// Max Length: 256
	// Min Length: 1
	CatalogID string `json:"catalog_id,omitempty"`

	// The id of the category.
	// Max Length: 256
	// Min Length: 1
	CategoryID string `json:"category_id,omitempty"`
}

// Validate validates this catalog category id
func (m *CatalogCategoryID) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCatalogID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCategoryID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CatalogCategoryID) validateCatalogID(formats strfmt.Registry) error {

	if swag.IsZero(m.CatalogID) { // not required
		return nil
	}

	if err := validate.MinLength("catalog_id", "body", string(m.CatalogID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("catalog_id", "body", string(m.CatalogID), 256); err != nil {
		return err
	}

	return nil
}

func (m *CatalogCategoryID) validateCategoryID(formats strfmt.Registry) error {

	if swag.IsZero(m.CategoryID) { // not required
		return nil
	}

	if err := validate.MinLength("category_id", "body", string(m.CategoryID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("category_id", "body", string(m.CategoryID), 256); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CatalogCategoryID) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CatalogCategoryID) UnmarshalBinary(b []byte) error {
	var res CatalogCategoryID
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
