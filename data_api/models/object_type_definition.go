// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// ObjectTypeDefinition Document representing a object type definition
// swagger:model object_type_definition
type ObjectTypeDefinition struct {

	// Returns the number of attribute definitions contained by the type.  This is a computed attribute and cannot be changed.
	AttributeDefinitionCount int32 `json:"attribute_definition_count,omitempty"`

	// Returns the number of attribute groups contained by the type.  This is a computed attribute and cannot be changed.
	AttributeGroupCount int32 `json:"attribute_group_count,omitempty"`

	// True if the object type definition is marked as a content object
	ContentObject bool `json:"content_object,omitempty"`

	// The user entered description for the type (localizable)
	Description map[string]string `json:"description,omitempty"`

	// The user entered display name (localizable)
	DisplayName map[string]string `json:"display_name,omitempty"`

	// URL that is used to get this instance.  This is a computed attribute and cannot be changed.
	Link string `json:"link,omitempty"`

	// The object type identifier
	ObjectType string `json:"object_type,omitempty"`

	// True if the system object type is queryable, false otherwise.  Default is true.
	Queryable bool `json:"queryable,omitempty"`

	// True if the system object is read-only, false otherwise.  This is a computed attribute and cannot be changed.
	ReadOnly bool `json:"read_only,omitempty"`
}

// Validate validates this object type definition
func (m *ObjectTypeDefinition) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ObjectTypeDefinition) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ObjectTypeDefinition) UnmarshalBinary(b []byte) error {
	var res ObjectTypeDefinition
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
