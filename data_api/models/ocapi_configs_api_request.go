// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OcapiConfigsAPIRequest OCAPI configuration APIs request
// swagger:model ocapi_configs_api_request
type OcapiConfigsAPIRequest struct {

	// Information of resources to be added
	// Required: true
	ResourceInfo *ResourceInfo `json:"resource_info"`

	// Sites to be updated
	// Required: true
	Sites []string `json:"sites"`
}

// Validate validates this ocapi configs api request
func (m *OcapiConfigsAPIRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResourceInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSites(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OcapiConfigsAPIRequest) validateResourceInfo(formats strfmt.Registry) error {

	if err := validate.Required("resource_info", "body", m.ResourceInfo); err != nil {
		return err
	}

	if m.ResourceInfo != nil {
		if err := m.ResourceInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("resource_info")
			}
			return err
		}
	}

	return nil
}

func (m *OcapiConfigsAPIRequest) validateSites(formats strfmt.Registry) error {

	if err := validate.Required("sites", "body", m.Sites); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OcapiConfigsAPIRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OcapiConfigsAPIRequest) UnmarshalBinary(b []byte) error {
	var res OcapiConfigsAPIRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
