// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AbTestTrigger Document representing an A/B Test trigger.
// swagger:model ab_test_trigger
type AbTestTrigger struct {

	// The list of categories. This is a modifiable attribute when trigger type is 'category_page_view' only
	Categories []string `json:"categories"`

	// The flag indicating if the trigger is based on pipelines. This is a computed attribute and cannot be modified
	IsPipelineBased bool `json:"is_pipeline_based,omitempty"`

	// The list of pipeline name and start node combinations (for example, Account-Show). This is a modifiable attribute when trigger type is 'pipeline_calls' only
	PipelineCalls []string `json:"pipeline_calls"`

	// The type of the trigger. Defaults to 'immediately' if not specified on create
	// Enum: [immediately category_page_view home_page_view pipeline_call]
	TriggerType string `json:"trigger_type,omitempty"`
}

// Validate validates this ab test trigger
func (m *AbTestTrigger) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTriggerType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var abTestTriggerTypeTriggerTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["immediately","category_page_view","home_page_view","pipeline_call"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		abTestTriggerTypeTriggerTypePropEnum = append(abTestTriggerTypeTriggerTypePropEnum, v)
	}
}

const (

	// AbTestTriggerTriggerTypeImmediately captures enum value "immediately"
	AbTestTriggerTriggerTypeImmediately string = "immediately"

	// AbTestTriggerTriggerTypeCategoryPageView captures enum value "category_page_view"
	AbTestTriggerTriggerTypeCategoryPageView string = "category_page_view"

	// AbTestTriggerTriggerTypeHomePageView captures enum value "home_page_view"
	AbTestTriggerTriggerTypeHomePageView string = "home_page_view"

	// AbTestTriggerTriggerTypePipelineCall captures enum value "pipeline_call"
	AbTestTriggerTriggerTypePipelineCall string = "pipeline_call"
)

// prop value enum
func (m *AbTestTrigger) validateTriggerTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, abTestTriggerTypeTriggerTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *AbTestTrigger) validateTriggerType(formats strfmt.Registry) error {

	if swag.IsZero(m.TriggerType) { // not required
		return nil
	}

	// value enum
	if err := m.validateTriggerTypeEnum("trigger_type", "body", m.TriggerType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AbTestTrigger) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AbTestTrigger) UnmarshalBinary(b []byte) error {
	var res AbTestTrigger
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
