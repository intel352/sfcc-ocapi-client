// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AbTestSegment Document representing an A/B Test Segment
// swagger:model ab_test_segment
type AbTestSegment struct {

	// Test Group percentage allocation
	Allocation int32 `json:"allocation,omitempty"`

	// Flag to determine if this Test Group is a customer experience
	CustomExperience bool `json:"custom_experience,omitempty"`

	// Test Group description
	// Max Length: 4000
	Description string `json:"description,omitempty"`

	// Test group id
	// Max Length: 40
	// Min Length: 1
	ID string `json:"id,omitempty"`

	// link
	Link string `json:"link,omitempty"`

	// Promotions which this segment has as experiences
	Promotions []interface{} `json:"promotions"`

	// Slot configurations which this segment has as experiences
	SlotConfigs []interface{} `json:"slot_configs"`

	// Sorting rules which this segment has as experiences
	SortingRules []interface{} `json:"sorting_rules"`

	// Statistics about the segment
	Stats *AbTestSegmentStats `json:"stats,omitempty"`
}

// Validate validates this ab test segment
func (m *AbTestSegment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AbTestSegment) validateDescription(formats strfmt.Registry) error {

	if swag.IsZero(m.Description) { // not required
		return nil
	}

	if err := validate.MaxLength("description", "body", string(m.Description), 4000); err != nil {
		return err
	}

	return nil
}

func (m *AbTestSegment) validateID(formats strfmt.Registry) error {

	if swag.IsZero(m.ID) { // not required
		return nil
	}

	if err := validate.MinLength("id", "body", string(m.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("id", "body", string(m.ID), 40); err != nil {
		return err
	}

	return nil
}

func (m *AbTestSegment) validateStats(formats strfmt.Registry) error {

	if swag.IsZero(m.Stats) { // not required
		return nil
	}

	if m.Stats != nil {
		if err := m.Stats.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("stats")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AbTestSegment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AbTestSegment) UnmarshalBinary(b []byte) error {
	var res AbTestSegment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
