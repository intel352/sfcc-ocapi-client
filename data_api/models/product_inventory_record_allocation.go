// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ProductInventoryRecordAllocation Document representing a product inventory record allocation.
// swagger:model product_inventory_record_allocation
type ProductInventoryRecordAllocation struct {

	// The allocation quantity that is currently set. The quantity unit is the same unit as the product itself.
	Amount float64 `json:"amount,omitempty"`

	// The date the allocation quantity was initialized or reset.
	// Format: date-time
	ResetDate strfmt.DateTime `json:"reset_date,omitempty"`
}

// Validate validates this product inventory record allocation
func (m *ProductInventoryRecordAllocation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateResetDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ProductInventoryRecordAllocation) validateResetDate(formats strfmt.Registry) error {

	if swag.IsZero(m.ResetDate) { // not required
		return nil
	}

	if err := validate.FormatOf("reset_date", "body", "date-time", m.ResetDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ProductInventoryRecordAllocation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProductInventoryRecordAllocation) UnmarshalBinary(b []byte) error {
	var res ProductInventoryRecordAllocation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
