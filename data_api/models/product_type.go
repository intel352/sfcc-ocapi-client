// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// ProductType Document representing a product type.
// swagger:model product_type
type ProductType struct {

	// A flag indicating whether the product is a bundle.
	Bundle bool `json:"bundle,omitempty"`

	// A flag indicating whether the product is bundled.
	Bundled bool `json:"bundled,omitempty"`

	// A flag indicating whether the product is a standard item.
	Item bool `json:"item,omitempty"`

	// A flag indicating whether the product is a master.
	Master bool `json:"master,omitempty"`

	// A flag indicating whether the product is an option.
	Option bool `json:"option,omitempty"`

	// A flag indicating whether the product is part of product set.
	PartOfProductSet bool `json:"part_of_product_set,omitempty"`

	// A flag indicating whether the product is part of retail set.
	PartOfRetailSet bool `json:"part_of_retail_set,omitempty"`

	// A flag indicating whether the product is a retail set.
	RetailSet bool `json:"retail_set,omitempty"`

	// A flag indicating whether the product is a set.
	Set bool `json:"set,omitempty"`

	// A flag indicating whether the product is a variant.
	Variant bool `json:"variant,omitempty"`

	// A flag indicating whether the product is a variation group.
	VariationGroup bool `json:"variation_group,omitempty"`
}

// Validate validates this product type
func (m *ProductType) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ProductType) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ProductType) UnmarshalBinary(b []byte) error {
	var res ProductType
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
