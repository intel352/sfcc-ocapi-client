// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomerProductListItemPurchase Document representing a customer product list item purchase.
// swagger:model customer_product_list_item_purchase
type CustomerProductListItemPurchase struct {

	// The id of this purchase.
	ID string `json:"id,omitempty"`

	// The order number of this purchase.
	OrderNo string `json:"order_no,omitempty"`

	// The id of the product list item this purchase relates to.
	ProductListItemID string `json:"product_list_item_id,omitempty"`

	// The name of the purchaser.
	PurchaserName string `json:"purchaser_name,omitempty"`

	// The quantity of this product list item purchased.
	// Minimum: 0
	Quantity *float64 `json:"quantity,omitempty"`
}

// Validate validates this customer product list item purchase
func (m *CustomerProductListItemPurchase) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateQuantity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomerProductListItemPurchase) validateQuantity(formats strfmt.Registry) error {

	if swag.IsZero(m.Quantity) { // not required
		return nil
	}

	if err := validate.Minimum("quantity", "body", float64(*m.Quantity), 0, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustomerProductListItemPurchase) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomerProductListItemPurchase) UnmarshalBinary(b []byte) error {
	var res CustomerProductListItemPurchase
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
