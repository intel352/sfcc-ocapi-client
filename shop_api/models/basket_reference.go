// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BasketReference Reference to a basket.
// swagger:model basket_reference
type BasketReference struct {

	// The unique identifier for the basket.
	// Required: true
	BasketID *string `json:"basket_id"`

	// The unique identifier for the customer.
	// Required: true
	// Max Length: 100
	CustomerID *string `json:"customer_id"`
}

// Validate validates this basket reference
func (m *BasketReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBasketID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCustomerID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BasketReference) validateBasketID(formats strfmt.Registry) error {

	if err := validate.Required("basket_id", "body", m.BasketID); err != nil {
		return err
	}

	return nil
}

func (m *BasketReference) validateCustomerID(formats strfmt.Registry) error {

	if err := validate.Required("customer_id", "body", m.CustomerID); err != nil {
		return err
	}

	if err := validate.MaxLength("customer_id", "body", string(*m.CustomerID), 100); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *BasketReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BasketReference) UnmarshalBinary(b []byte) error {
	var res BasketReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
