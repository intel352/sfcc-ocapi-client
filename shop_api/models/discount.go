// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Discount Document representing a discount that was
// swagger:model discount
type Discount struct {

	// The amount that is used with the amount and fixed price types.
	Amount float64 `json:"amount,omitempty"`

	// The percentage that is used with percentage types.
	Percentage float64 `json:"percentage,omitempty"`

	// The price book id that is used with some types.
	PriceBookID string `json:"price_book_id,omitempty"`

	// The type of discount.
	// Required: true
	// Enum: [percentage fixed_price amount free price_book_price bonus total_fixed_price bonus_choice percentage_off_options]
	Type *string `json:"type"`
}

// Validate validates this discount
func (m *Discount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var discountTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["percentage","fixed_price","amount","free","price_book_price","bonus","total_fixed_price","bonus_choice","percentage_off_options"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		discountTypeTypePropEnum = append(discountTypeTypePropEnum, v)
	}
}

const (

	// DiscountTypePercentage captures enum value "percentage"
	DiscountTypePercentage string = "percentage"

	// DiscountTypeFixedPrice captures enum value "fixed_price"
	DiscountTypeFixedPrice string = "fixed_price"

	// DiscountTypeAmount captures enum value "amount"
	DiscountTypeAmount string = "amount"

	// DiscountTypeFree captures enum value "free"
	DiscountTypeFree string = "free"

	// DiscountTypePriceBookPrice captures enum value "price_book_price"
	DiscountTypePriceBookPrice string = "price_book_price"

	// DiscountTypeBonus captures enum value "bonus"
	DiscountTypeBonus string = "bonus"

	// DiscountTypeTotalFixedPrice captures enum value "total_fixed_price"
	DiscountTypeTotalFixedPrice string = "total_fixed_price"

	// DiscountTypeBonusChoice captures enum value "bonus_choice"
	DiscountTypeBonusChoice string = "bonus_choice"

	// DiscountTypePercentageOffOptions captures enum value "percentage_off_options"
	DiscountTypePercentageOffOptions string = "percentage_off_options"
)

// prop value enum
func (m *Discount) validateTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, discountTypeTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Discount) validateType(formats strfmt.Registry) error {

	if err := validate.Required("type", "body", m.Type); err != nil {
		return err
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", *m.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Discount) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Discount) UnmarshalBinary(b []byte) error {
	var res Discount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
