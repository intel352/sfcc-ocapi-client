// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PriceAdjustment Document representing a price adjustment within a basket or order. Price adjustments
//  can be assigned at the order, product, or shipping level. They can be created by the
//  promotion engine (if the custom flag is set to false) or can be added by custom logic (if the custom
//  flag is set to true). For custom price adjustments created by a user, the manual flag should be
//  set to true; this is always the case for price adjustments created using OCAPI.
//
// swagger:model price_adjustment
type PriceAdjustment struct {

	// A price adjustment that provides details of the discount that was applied.
	//  This is null for custom price adjustments created
	//  without discount details.
	AppliedDiscount *Discount `json:"applied_discount,omitempty"`

	// The coupon code that triggered the promotion, provided
	//  the price adjustment was created as the result of a promotion
	//  being triggered by a coupon.
	CouponCode string `json:"coupon_code,omitempty"`

	// The user who created the price adjustment.
	CreatedBy string `json:"created_by,omitempty"`

	// Returns the value of attribute 'creationDate'.
	// Read Only: true
	// Format: date-time
	CreationDate strfmt.DateTime `json:"creation_date,omitempty"`

	// A flag indicating whether this price adjustment was created by custom logic. This flag is
	//  set to true unless the price adjustment was created by the promotion engine.
	Custom bool `json:"custom,omitempty"`

	// The text describing the item in more detail.
	ItemText string `json:"item_text,omitempty"`

	// Returns the value of attribute 'lastModified'.
	// Read Only: true
	// Format: date-time
	LastModified strfmt.DateTime `json:"last_modified,omitempty"`

	// A flag indicating whether this price adjustment was created in a manual process.
	//
	//  For custom price adjustments created using the shop API, this always
	//  returns true. Using the scripting API, however, it is possible to set this to true
	//  or false, according to the use case.
	Manual bool `json:"manual,omitempty"`

	// The adjustment price.
	Price float64 `json:"price,omitempty"`

	// The price adjustment id (uuid).
	PriceAdjustmentID string `json:"price_adjustment_id,omitempty"`

	// The id of the related promotion. Custom price adjustments
	//  can be assigned any promotion id so long it is not
	//  used by a price adjustment belonging to the same item
	//  and is not used by promotion defined in the promotion engine.
	//  If not specified, a promotion id is generated.
	PromotionID string `json:"promotion_id,omitempty"`

	// The URL addressing the related promotion.
	PromotionLink string `json:"promotion_link,omitempty"`

	// The reason why this price adjustment was made.
	// Enum: [PRICE_MATCH BACKORDER EVEN_EXCHANGE]
	ReasonCode string `json:"reason_code,omitempty"`
}

// Validate validates this price adjustment
func (m *PriceAdjustment) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAppliedDiscount(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreationDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastModified(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateReasonCode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PriceAdjustment) validateAppliedDiscount(formats strfmt.Registry) error {

	if swag.IsZero(m.AppliedDiscount) { // not required
		return nil
	}

	if m.AppliedDiscount != nil {
		if err := m.AppliedDiscount.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("applied_discount")
			}
			return err
		}
	}

	return nil
}

func (m *PriceAdjustment) validateCreationDate(formats strfmt.Registry) error {

	if swag.IsZero(m.CreationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("creation_date", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *PriceAdjustment) validateLastModified(formats strfmt.Registry) error {

	if swag.IsZero(m.LastModified) { // not required
		return nil
	}

	if err := validate.FormatOf("last_modified", "body", "date-time", m.LastModified.String(), formats); err != nil {
		return err
	}

	return nil
}

var priceAdjustmentTypeReasonCodePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PRICE_MATCH","BACKORDER","EVEN_EXCHANGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		priceAdjustmentTypeReasonCodePropEnum = append(priceAdjustmentTypeReasonCodePropEnum, v)
	}
}

const (

	// PriceAdjustmentReasonCodePRICEMATCH captures enum value "PRICE_MATCH"
	PriceAdjustmentReasonCodePRICEMATCH string = "PRICE_MATCH"

	// PriceAdjustmentReasonCodeBACKORDER captures enum value "BACKORDER"
	PriceAdjustmentReasonCodeBACKORDER string = "BACKORDER"

	// PriceAdjustmentReasonCodeEVENEXCHANGE captures enum value "EVEN_EXCHANGE"
	PriceAdjustmentReasonCodeEVENEXCHANGE string = "EVEN_EXCHANGE"
)

// prop value enum
func (m *PriceAdjustment) validateReasonCodeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, priceAdjustmentTypeReasonCodePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *PriceAdjustment) validateReasonCode(formats strfmt.Registry) error {

	if swag.IsZero(m.ReasonCode) { // not required
		return nil
	}

	// value enum
	if err := m.validateReasonCodeEnum("reason_code", "body", m.ReasonCode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PriceAdjustment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PriceAdjustment) UnmarshalBinary(b []byte) error {
	var res PriceAdjustment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
