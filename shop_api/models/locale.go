// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Locale Document that describes a single locale.
// swagger:model locale
type Locale struct {

	// The country/region code for this Locale, which will
	//  either be the empty string or an upercase ISO 3166 2-letter code.
	Country string `json:"country,omitempty"`

	// Flag that is true if the locale is the default one to use if an explicit locale is not specified.
	Default bool `json:"default,omitempty"`

	// The name for the Locale's country that is appropriate for
	//  display to the user, or an empty string if no country has been specified
	//  for the Locale.
	//  The display country is returned in the language defined for this locale,
	//  and not in the language of the session locale.
	DisplayCountry string `json:"display_country,omitempty"`

	// The name for the Locale's language that is appropriate for
	//  display to the user, or an empty string if no language has been specified
	//  for the Locale.
	//  The display language is returned in the language defined for this locale,
	//  and not in the language of the session locale.
	DisplayLanguage string `json:"display_language,omitempty"`

	// The name for the Locale that is appropriate for
	//  display to the user, or an empty string if no display name has been
	//  specified for the Locale.
	//  The display name is returned in the language defined for this locale,
	//  and not in the language of the session locale.
	DisplayName string `json:"display_name,omitempty"`

	// The identifier of the Locale. Contains a combination of the
	//  language and the country key, concatenated by "-", e.g. "en-US". This
	//  attribute is the primary key of the class.
	ID string `json:"id,omitempty"`

	// The three-letter abbreviation for this Locale's country, or an
	//  empty string if no country has been specified for the Locale.
	Iso3Country string `json:"iso3_country,omitempty"`

	// The three-letter abbreviation for this Locale's language, or an
	//  empty string if no language has been specified for the
	//  Locale.
	Iso3Language string `json:"iso3_language,omitempty"`

	// The language code for this Locale, which will either
	//  be the empty string or a lowercase ISO 639 code.
	Language string `json:"language,omitempty"`

	// The display name of the Locale. This uses the current
	//  request locale to localize the value.
	Name string `json:"name,omitempty"`
}

// Validate validates this locale
func (m *Locale) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Locale) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Locale) UnmarshalBinary(b []byte) error {
	var res Locale
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
