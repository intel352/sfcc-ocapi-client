// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// BonusDiscountLineItem Document representing a bonus discount line item
// swagger:model bonus_discount_line_item
type BonusDiscountLineItem struct {

	// The list of links to the bonus products the customer can choose from.
	BonusProducts []*ProductDetailsLink `json:"bonus_products"`

	// The coupon code that triggered the promotion, if applicable.
	CouponCode string `json:"coupon_code,omitempty"`

	// The ID of the line item.
	ID string `json:"id,omitempty"`

	// The maximum number of bonus items the user can select for this promotion.
	MaxBonusItems int32 `json:"max_bonus_items,omitempty"`

	// The ID of the promotion which triggered the creation of the line item.
	PromotionID string `json:"promotion_id,omitempty"`
}

// Validate validates this bonus discount line item
func (m *BonusDiscountLineItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBonusProducts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BonusDiscountLineItem) validateBonusProducts(formats strfmt.Registry) error {

	if swag.IsZero(m.BonusProducts) { // not required
		return nil
	}

	for i := 0; i < len(m.BonusProducts); i++ {
		if swag.IsZero(m.BonusProducts[i]) { // not required
			continue
		}

		if m.BonusProducts[i] != nil {
			if err := m.BonusProducts[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("bonus_products" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *BonusDiscountLineItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *BonusDiscountLineItem) UnmarshalBinary(b []byte) error {
	var res BonusDiscountLineItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
