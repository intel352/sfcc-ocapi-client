// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Content Document representing a content asset.
// swagger:model content
type Content struct {

	// c year
	CYear string `json:"c_Year,omitempty"`

	// c body
	CBody string `json:"c_body,omitempty"`

	// Use this attribute to apply custom styles for this content asset.
	CCustomCSSFile string `json:"c_customCSSFile,omitempty"`

	// The localized content asset description.
	Description string `json:"description,omitempty"`

	// The id of the content asset.
	// Required: true
	// Max Length: 256
	// Min Length: 1
	ID *string `json:"id"`

	// The localized content asset name.
	Name string `json:"name,omitempty"`

	// The localized content asset page description.
	PageDescription string `json:"page_description,omitempty"`

	// The localized content asset page description.
	PageKeywords string `json:"page_keywords,omitempty"`

	// The localized content asset page title.
	PageTitle string `json:"page_title,omitempty"`
}

// Validate validates this content
func (m *Content) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Content) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	if err := validate.MinLength("id", "body", string(*m.ID), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("id", "body", string(*m.ID), 256); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Content) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Content) UnmarshalBinary(b []byte) error {
	var res Content
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
