// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TermFilter Document representing a term filter.
//
// swagger:model term_filter
type TermFilter struct {

	// The filter field.
	// Required: true
	Field *string `json:"field"`

	// The operator to compare the field's values with the given ones.
	// Required: true
	// Enum: [is one_of is_null is_not_null less greater not_in neq]
	Operator *string `json:"operator"`

	// The filter values.
	Values []interface{} `json:"values"`
}

// Validate validates this term filter
func (m *TermFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateField(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TermFilter) validateField(formats strfmt.Registry) error {

	if err := validate.Required("field", "body", m.Field); err != nil {
		return err
	}

	return nil
}

var termFilterTypeOperatorPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["is","one_of","is_null","is_not_null","less","greater","not_in","neq"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		termFilterTypeOperatorPropEnum = append(termFilterTypeOperatorPropEnum, v)
	}
}

const (

	// TermFilterOperatorIs captures enum value "is"
	TermFilterOperatorIs string = "is"

	// TermFilterOperatorOneOf captures enum value "one_of"
	TermFilterOperatorOneOf string = "one_of"

	// TermFilterOperatorIsNull captures enum value "is_null"
	TermFilterOperatorIsNull string = "is_null"

	// TermFilterOperatorIsNotNull captures enum value "is_not_null"
	TermFilterOperatorIsNotNull string = "is_not_null"

	// TermFilterOperatorLess captures enum value "less"
	TermFilterOperatorLess string = "less"

	// TermFilterOperatorGreater captures enum value "greater"
	TermFilterOperatorGreater string = "greater"

	// TermFilterOperatorNotIn captures enum value "not_in"
	TermFilterOperatorNotIn string = "not_in"

	// TermFilterOperatorNeq captures enum value "neq"
	TermFilterOperatorNeq string = "neq"
)

// prop value enum
func (m *TermFilter) validateOperatorEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, termFilterTypeOperatorPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *TermFilter) validateOperator(formats strfmt.Registry) error {

	if err := validate.Required("operator", "body", m.Operator); err != nil {
		return err
	}

	// value enum
	if err := m.validateOperatorEnum("operator", "body", *m.Operator); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TermFilter) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TermFilter) UnmarshalBinary(b []byte) error {
	var res TermFilter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
