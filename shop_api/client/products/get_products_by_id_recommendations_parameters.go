// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetProductsByIDRecommendationsParams creates a new GetProductsByIDRecommendationsParams object
// with the default values initialized.
func NewGetProductsByIDRecommendationsParams() *GetProductsByIDRecommendationsParams {
	var ()
	return &GetProductsByIDRecommendationsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetProductsByIDRecommendationsParamsWithTimeout creates a new GetProductsByIDRecommendationsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetProductsByIDRecommendationsParamsWithTimeout(timeout time.Duration) *GetProductsByIDRecommendationsParams {
	var ()
	return &GetProductsByIDRecommendationsParams{

		timeout: timeout,
	}
}

// NewGetProductsByIDRecommendationsParamsWithContext creates a new GetProductsByIDRecommendationsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetProductsByIDRecommendationsParamsWithContext(ctx context.Context) *GetProductsByIDRecommendationsParams {
	var ()
	return &GetProductsByIDRecommendationsParams{

		Context: ctx,
	}
}

// NewGetProductsByIDRecommendationsParamsWithHTTPClient creates a new GetProductsByIDRecommendationsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetProductsByIDRecommendationsParamsWithHTTPClient(client *http.Client) *GetProductsByIDRecommendationsParams {
	var ()
	return &GetProductsByIDRecommendationsParams{
		HTTPClient: client,
	}
}

/*GetProductsByIDRecommendationsParams contains all the parameters to send to the API endpoint
for the get products by ID recommendations operation typically these are written to a http.Request
*/
type GetProductsByIDRecommendationsParams struct {

	/*ID
	  The requested product id.

	*/
	ID string
	/*Locale*/
	Locale *string
	/*RecommendationType*/
	RecommendationType *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) WithTimeout(timeout time.Duration) *GetProductsByIDRecommendationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) WithContext(ctx context.Context) *GetProductsByIDRecommendationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) WithHTTPClient(client *http.Client) *GetProductsByIDRecommendationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) WithID(id string) *GetProductsByIDRecommendationsParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) SetID(id string) {
	o.ID = id
}

// WithLocale adds the locale to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) WithLocale(locale *string) *GetProductsByIDRecommendationsParams {
	o.SetLocale(locale)
	return o
}

// SetLocale adds the locale to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) SetLocale(locale *string) {
	o.Locale = locale
}

// WithRecommendationType adds the recommendationType to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) WithRecommendationType(recommendationType *int32) *GetProductsByIDRecommendationsParams {
	o.SetRecommendationType(recommendationType)
	return o
}

// SetRecommendationType adds the recommendationType to the get products by ID recommendations params
func (o *GetProductsByIDRecommendationsParams) SetRecommendationType(recommendationType *int32) {
	o.RecommendationType = recommendationType
}

// WriteToRequest writes these params to a swagger request
func (o *GetProductsByIDRecommendationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Locale != nil {

		// query param locale
		var qrLocale string
		if o.Locale != nil {
			qrLocale = *o.Locale
		}
		qLocale := qrLocale
		if qLocale != "" {
			if err := r.SetQueryParam("locale", qLocale); err != nil {
				return err
			}
		}

	}

	if o.RecommendationType != nil {

		// query param recommendation_type
		var qrRecommendationType int32
		if o.RecommendationType != nil {
			qrRecommendationType = *o.RecommendationType
		}
		qRecommendationType := swag.FormatInt32(qrRecommendationType)
		if qRecommendationType != "" {
			if err := r.SetQueryParam("recommendation_type", qRecommendationType); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
