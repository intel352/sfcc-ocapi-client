// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/intel352/sfcc-ocapi-client/shop_api/client/ai"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/baskets"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/categories"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/content"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/content_search"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/custom_objects"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/customers"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/folders"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/gift_certificate"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/order_search"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/orders"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/price_adjustment_limits"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/product_lists"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/product_search"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/products"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/promotions"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/search_suggestion"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/sessions"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/site"
	"github.com/intel352/sfcc-ocapi-client/shop_api/client/stores"
)

// Default shop HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "demo-ocapi.demandware.net"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/s/SiteGenesis/dw/shop/v19_5"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"http"}

// NewHTTPClient creates a new shop HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Shop {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new shop HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Shop {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new shop client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Shop {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Shop)
	cli.Transport = transport

	cli.Ai = ai.New(transport, formats)

	cli.Baskets = baskets.New(transport, formats)

	cli.Categories = categories.New(transport, formats)

	cli.Content = content.New(transport, formats)

	cli.ContentSearch = content_search.New(transport, formats)

	cli.CustomObjects = custom_objects.New(transport, formats)

	cli.Customers = customers.New(transport, formats)

	cli.Folders = folders.New(transport, formats)

	cli.GiftCertificate = gift_certificate.New(transport, formats)

	cli.OrderSearch = order_search.New(transport, formats)

	cli.Orders = orders.New(transport, formats)

	cli.PriceAdjustmentLimits = price_adjustment_limits.New(transport, formats)

	cli.ProductLists = product_lists.New(transport, formats)

	cli.ProductSearch = product_search.New(transport, formats)

	cli.Products = products.New(transport, formats)

	cli.Promotions = promotions.New(transport, formats)

	cli.SearchSuggestion = search_suggestion.New(transport, formats)

	cli.Sessions = sessions.New(transport, formats)

	cli.Site = site.New(transport, formats)

	cli.Stores = stores.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Shop is a client for shop
type Shop struct {
	Ai *ai.Client

	Baskets *baskets.Client

	Categories *categories.Client

	Content *content.Client

	ContentSearch *content_search.Client

	CustomObjects *custom_objects.Client

	Customers *customers.Client

	Folders *folders.Client

	GiftCertificate *gift_certificate.Client

	OrderSearch *order_search.Client

	Orders *orders.Client

	PriceAdjustmentLimits *price_adjustment_limits.Client

	ProductLists *product_lists.Client

	ProductSearch *product_search.Client

	Products *products.Client

	Promotions *promotions.Client

	SearchSuggestion *search_suggestion.Client

	Sessions *sessions.Client

	Site *site.Client

	Stores *stores.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Shop) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Ai.SetTransport(transport)

	c.Baskets.SetTransport(transport)

	c.Categories.SetTransport(transport)

	c.Content.SetTransport(transport)

	c.ContentSearch.SetTransport(transport)

	c.CustomObjects.SetTransport(transport)

	c.Customers.SetTransport(transport)

	c.Folders.SetTransport(transport)

	c.GiftCertificate.SetTransport(transport)

	c.OrderSearch.SetTransport(transport)

	c.Orders.SetTransport(transport)

	c.PriceAdjustmentLimits.SetTransport(transport)

	c.ProductLists.SetTransport(transport)

	c.ProductSearch.SetTransport(transport)

	c.Products.SetTransport(transport)

	c.Promotions.SetTransport(transport)

	c.SearchSuggestion.SetTransport(transport)

	c.Sessions.SetTransport(transport)

	c.Site.SetTransport(transport)

	c.Stores.SetTransport(transport)

}
