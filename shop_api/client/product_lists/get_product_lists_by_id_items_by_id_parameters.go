// Code generated by go-swagger; DO NOT EDIT.

package product_lists

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetProductListsByIDItemsByIDParams creates a new GetProductListsByIDItemsByIDParams object
// with the default values initialized.
func NewGetProductListsByIDItemsByIDParams() *GetProductListsByIDItemsByIDParams {
	var ()
	return &GetProductListsByIDItemsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetProductListsByIDItemsByIDParamsWithTimeout creates a new GetProductListsByIDItemsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetProductListsByIDItemsByIDParamsWithTimeout(timeout time.Duration) *GetProductListsByIDItemsByIDParams {
	var ()
	return &GetProductListsByIDItemsByIDParams{

		timeout: timeout,
	}
}

// NewGetProductListsByIDItemsByIDParamsWithContext creates a new GetProductListsByIDItemsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetProductListsByIDItemsByIDParamsWithContext(ctx context.Context) *GetProductListsByIDItemsByIDParams {
	var ()
	return &GetProductListsByIDItemsByIDParams{

		Context: ctx,
	}
}

// NewGetProductListsByIDItemsByIDParamsWithHTTPClient creates a new GetProductListsByIDItemsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetProductListsByIDItemsByIDParamsWithHTTPClient(client *http.Client) *GetProductListsByIDItemsByIDParams {
	var ()
	return &GetProductListsByIDItemsByIDParams{
		HTTPClient: client,
	}
}

/*GetProductListsByIDItemsByIDParams contains all the parameters to send to the API endpoint
for the get product lists by ID items by ID operation typically these are written to a http.Request
*/
type GetProductListsByIDItemsByIDParams struct {

	/*Expand*/
	Expand []string
	/*ItemID
	  The id of the item.

	*/
	ItemID string
	/*ListID
	  The id of the list.

	*/
	ListID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) WithTimeout(timeout time.Duration) *GetProductListsByIDItemsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) WithContext(ctx context.Context) *GetProductListsByIDItemsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) WithHTTPClient(client *http.Client) *GetProductListsByIDItemsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExpand adds the expand to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) WithExpand(expand []string) *GetProductListsByIDItemsByIDParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WithItemID adds the itemID to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) WithItemID(itemID string) *GetProductListsByIDItemsByIDParams {
	o.SetItemID(itemID)
	return o
}

// SetItemID adds the itemId to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) SetItemID(itemID string) {
	o.ItemID = itemID
}

// WithListID adds the listID to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) WithListID(listID string) *GetProductListsByIDItemsByIDParams {
	o.SetListID(listID)
	return o
}

// SetListID adds the listId to the get product lists by ID items by ID params
func (o *GetProductListsByIDItemsByIDParams) SetListID(listID string) {
	o.ListID = listID
}

// WriteToRequest writes these params to a swagger request
func (o *GetProductListsByIDItemsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	valuesExpand := o.Expand

	joinedExpand := swag.JoinByFormat(valuesExpand, "")
	// query array param expand
	if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
		return err
	}

	// path param item_id
	if err := r.SetPathParam("item_id", o.ItemID); err != nil {
		return err
	}

	// path param list_id
	if err := r.SetPathParam("list_id", o.ListID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
