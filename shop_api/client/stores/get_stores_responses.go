// Code generated by go-swagger; DO NOT EDIT.

package stores

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// GetStoresReader is a Reader for the GetStores structure.
type GetStoresReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStoresReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewGetStoresBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetStoresDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetStoresBadRequest creates a GetStoresBadRequest with default headers values
func NewGetStoresBadRequest() *GetStoresBadRequest {
	return &GetStoresBadRequest{}
}

/*GetStoresBadRequest handles this case with default header values.

Thrown if no coordinates (latitude and longitude) are provided and in addition no country code is given. or Thrown if no coordinates (latitude and longitude) are provided and in addition no postal code is given.. or Thrown if only one of latitude or longitude are provided. or Invalid distance_unit given.
*/
type GetStoresBadRequest struct {
}

func (o *GetStoresBadRequest) Error() string {
	return fmt.Sprintf("[GET /stores][%d] getStoresBadRequest ", 400)
}

func (o *GetStoresBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetStoresDefault creates a GetStoresDefault with default headers values
func NewGetStoresDefault(code int) *GetStoresDefault {
	return &GetStoresDefault{
		_statusCode: code,
	}
}

/*GetStoresDefault handles this case with default header values.

GetStoresDefault get stores default
*/
type GetStoresDefault struct {
	_statusCode int

	Payload *models.StoreResult
}

// Code gets the status code for the get stores default response
func (o *GetStoresDefault) Code() int {
	return o._statusCode
}

func (o *GetStoresDefault) Error() string {
	return fmt.Sprintf("[GET /stores][%d] getStores default  %+v", o._statusCode, o.Payload)
}

func (o *GetStoresDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StoreResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
