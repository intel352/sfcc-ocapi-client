// Code generated by go-swagger; DO NOT EDIT.

package ai

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// GetAiProductRecommendationsByIDReader is a Reader for the GetAiProductRecommendationsByID structure.
type GetAiProductRecommendationsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAiProductRecommendationsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewGetAiProductRecommendationsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAiProductRecommendationsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetAiProductRecommendationsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAiProductRecommendationsByIDBadRequest creates a GetAiProductRecommendationsByIDBadRequest with default headers values
func NewGetAiProductRecommendationsByIDBadRequest() *GetAiProductRecommendationsByIDBadRequest {
	return &GetAiProductRecommendationsByIDBadRequest{}
}

/*GetAiProductRecommendationsByIDBadRequest handles this case with default header values.

In case there was an error in communication with the recommendation system.
*/
type GetAiProductRecommendationsByIDBadRequest struct {
}

func (o *GetAiProductRecommendationsByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /ai/product_recommendations/{recommender_name}][%d] getAiProductRecommendationsByIdBadRequest ", 400)
}

func (o *GetAiProductRecommendationsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAiProductRecommendationsByIDNotFound creates a GetAiProductRecommendationsByIDNotFound with default headers values
func NewGetAiProductRecommendationsByIDNotFound() *GetAiProductRecommendationsByIDNotFound {
	return &GetAiProductRecommendationsByIDNotFound{}
}

/*GetAiProductRecommendationsByIDNotFound handles this case with default header values.

In case the recommender name in the URL is unknown.
*/
type GetAiProductRecommendationsByIDNotFound struct {
}

func (o *GetAiProductRecommendationsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /ai/product_recommendations/{recommender_name}][%d] getAiProductRecommendationsByIdNotFound ", 404)
}

func (o *GetAiProductRecommendationsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAiProductRecommendationsByIDDefault creates a GetAiProductRecommendationsByIDDefault with default headers values
func NewGetAiProductRecommendationsByIDDefault(code int) *GetAiProductRecommendationsByIDDefault {
	return &GetAiProductRecommendationsByIDDefault{
		_statusCode: code,
	}
}

/*GetAiProductRecommendationsByIDDefault handles this case with default header values.

GetAiProductRecommendationsByIDDefault get ai product recommendations by ID default
*/
type GetAiProductRecommendationsByIDDefault struct {
	_statusCode int

	Payload *models.ProductRecommendationsResult
}

// Code gets the status code for the get ai product recommendations by ID default response
func (o *GetAiProductRecommendationsByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetAiProductRecommendationsByIDDefault) Error() string {
	return fmt.Sprintf("[GET /ai/product_recommendations/{recommender_name}][%d] getAiProductRecommendationsByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetAiProductRecommendationsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProductRecommendationsResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
