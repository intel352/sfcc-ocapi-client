// Code generated by go-swagger; DO NOT EDIT.

package promotions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetPromotionsParams creates a new GetPromotionsParams object
// with the default values initialized.
func NewGetPromotionsParams() *GetPromotionsParams {
	var ()
	return &GetPromotionsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPromotionsParamsWithTimeout creates a new GetPromotionsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPromotionsParamsWithTimeout(timeout time.Duration) *GetPromotionsParams {
	var ()
	return &GetPromotionsParams{

		timeout: timeout,
	}
}

// NewGetPromotionsParamsWithContext creates a new GetPromotionsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPromotionsParamsWithContext(ctx context.Context) *GetPromotionsParams {
	var ()
	return &GetPromotionsParams{

		Context: ctx,
	}
}

// NewGetPromotionsParamsWithHTTPClient creates a new GetPromotionsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPromotionsParamsWithHTTPClient(client *http.Client) *GetPromotionsParams {
	var ()
	return &GetPromotionsParams{
		HTTPClient: client,
	}
}

/*GetPromotionsParams contains all the parameters to send to the API endpoint
for the get promotions operation typically these are written to a http.Request
*/
type GetPromotionsParams struct {

	/*CampaignID
	  Find the promotions assigned to this campaign (mandatory)

	*/
	CampaignID string
	/*Currency
	  The currency mnemonic specified for price

	*/
	Currency *string
	/*EndDate
	  The end date of the promotion in ISO8601 date time format: yyyy-MM-dd'T'HH:mmZ

	*/
	EndDate *string
	/*StartDate
	  The start date of the promotion in ISO8601 date time format: yyyy-MM-dd'T'HH:mmZ

	*/
	StartDate *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get promotions params
func (o *GetPromotionsParams) WithTimeout(timeout time.Duration) *GetPromotionsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get promotions params
func (o *GetPromotionsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get promotions params
func (o *GetPromotionsParams) WithContext(ctx context.Context) *GetPromotionsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get promotions params
func (o *GetPromotionsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get promotions params
func (o *GetPromotionsParams) WithHTTPClient(client *http.Client) *GetPromotionsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get promotions params
func (o *GetPromotionsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCampaignID adds the campaignID to the get promotions params
func (o *GetPromotionsParams) WithCampaignID(campaignID string) *GetPromotionsParams {
	o.SetCampaignID(campaignID)
	return o
}

// SetCampaignID adds the campaignId to the get promotions params
func (o *GetPromotionsParams) SetCampaignID(campaignID string) {
	o.CampaignID = campaignID
}

// WithCurrency adds the currency to the get promotions params
func (o *GetPromotionsParams) WithCurrency(currency *string) *GetPromotionsParams {
	o.SetCurrency(currency)
	return o
}

// SetCurrency adds the currency to the get promotions params
func (o *GetPromotionsParams) SetCurrency(currency *string) {
	o.Currency = currency
}

// WithEndDate adds the endDate to the get promotions params
func (o *GetPromotionsParams) WithEndDate(endDate *string) *GetPromotionsParams {
	o.SetEndDate(endDate)
	return o
}

// SetEndDate adds the endDate to the get promotions params
func (o *GetPromotionsParams) SetEndDate(endDate *string) {
	o.EndDate = endDate
}

// WithStartDate adds the startDate to the get promotions params
func (o *GetPromotionsParams) WithStartDate(startDate *string) *GetPromotionsParams {
	o.SetStartDate(startDate)
	return o
}

// SetStartDate adds the startDate to the get promotions params
func (o *GetPromotionsParams) SetStartDate(startDate *string) {
	o.StartDate = startDate
}

// WriteToRequest writes these params to a swagger request
func (o *GetPromotionsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param campaign_id
	qrCampaignID := o.CampaignID
	qCampaignID := qrCampaignID
	if qCampaignID != "" {
		if err := r.SetQueryParam("campaign_id", qCampaignID); err != nil {
			return err
		}
	}

	if o.Currency != nil {

		// query param currency
		var qrCurrency string
		if o.Currency != nil {
			qrCurrency = *o.Currency
		}
		qCurrency := qrCurrency
		if qCurrency != "" {
			if err := r.SetQueryParam("currency", qCurrency); err != nil {
				return err
			}
		}

	}

	if o.EndDate != nil {

		// query param end_date
		var qrEndDate string
		if o.EndDate != nil {
			qrEndDate = *o.EndDate
		}
		qEndDate := qrEndDate
		if qEndDate != "" {
			if err := r.SetQueryParam("end_date", qEndDate); err != nil {
				return err
			}
		}

	}

	if o.StartDate != nil {

		// query param start_date
		var qrStartDate string
		if o.StartDate != nil {
			qrStartDate = *o.StartDate
		}
		qStartDate := qrStartDate
		if qStartDate != "" {
			if err := r.SetQueryParam("start_date", qStartDate); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
