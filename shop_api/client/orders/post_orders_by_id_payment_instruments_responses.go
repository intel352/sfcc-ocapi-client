// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PostOrdersByIDPaymentInstrumentsReader is a Reader for the PostOrdersByIDPaymentInstruments structure.
type PostOrdersByIDPaymentInstrumentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOrdersByIDPaymentInstrumentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPostOrdersByIDPaymentInstrumentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostOrdersByIDPaymentInstrumentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostOrdersByIDPaymentInstrumentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostOrdersByIDPaymentInstrumentsBadRequest creates a PostOrdersByIDPaymentInstrumentsBadRequest with default headers values
func NewPostOrdersByIDPaymentInstrumentsBadRequest() *PostOrdersByIDPaymentInstrumentsBadRequest {
	return &PostOrdersByIDPaymentInstrumentsBadRequest{}
}

/*PostOrdersByIDPaymentInstrumentsBadRequest handles this case with default header values.

Indicates that the given order number is invalid. or Indicates that the provided payment method is invalid or not applicable.
*/
type PostOrdersByIDPaymentInstrumentsBadRequest struct {
}

func (o *PostOrdersByIDPaymentInstrumentsBadRequest) Error() string {
	return fmt.Sprintf("[POST /orders/{order_no}/payment_instruments][%d] postOrdersByIdPaymentInstrumentsBadRequest ", 400)
}

func (o *PostOrdersByIDPaymentInstrumentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOrdersByIDPaymentInstrumentsNotFound creates a PostOrdersByIDPaymentInstrumentsNotFound with default headers values
func NewPostOrdersByIDPaymentInstrumentsNotFound() *PostOrdersByIDPaymentInstrumentsNotFound {
	return &PostOrdersByIDPaymentInstrumentsNotFound{}
}

/*PostOrdersByIDPaymentInstrumentsNotFound handles this case with default header values.

Indicates that the order with the given order number is unknown. or Indicates that a customer payment instrument could not be resolved
             based on the provided customer payment instrument id.
*/
type PostOrdersByIDPaymentInstrumentsNotFound struct {
}

func (o *PostOrdersByIDPaymentInstrumentsNotFound) Error() string {
	return fmt.Sprintf("[POST /orders/{order_no}/payment_instruments][%d] postOrdersByIdPaymentInstrumentsNotFound ", 404)
}

func (o *PostOrdersByIDPaymentInstrumentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOrdersByIDPaymentInstrumentsDefault creates a PostOrdersByIDPaymentInstrumentsDefault with default headers values
func NewPostOrdersByIDPaymentInstrumentsDefault(code int) *PostOrdersByIDPaymentInstrumentsDefault {
	return &PostOrdersByIDPaymentInstrumentsDefault{
		_statusCode: code,
	}
}

/*PostOrdersByIDPaymentInstrumentsDefault handles this case with default header values.

PostOrdersByIDPaymentInstrumentsDefault post orders by ID payment instruments default
*/
type PostOrdersByIDPaymentInstrumentsDefault struct {
	_statusCode int

	Payload *models.Order
}

// Code gets the status code for the post orders by ID payment instruments default response
func (o *PostOrdersByIDPaymentInstrumentsDefault) Code() int {
	return o._statusCode
}

func (o *PostOrdersByIDPaymentInstrumentsDefault) Error() string {
	return fmt.Sprintf("[POST /orders/{order_no}/payment_instruments][%d] postOrdersByIDPaymentInstruments default  %+v", o._statusCode, o.Payload)
}

func (o *PostOrdersByIDPaymentInstrumentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Order)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
