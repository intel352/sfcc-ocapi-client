// Code generated by go-swagger; DO NOT EDIT.

package orders

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PatchOrdersByIDReader is a Reader for the PatchOrdersByID structure.
type PatchOrdersByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchOrdersByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewPatchOrdersByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchOrdersByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchOrdersByIDNotFound creates a PatchOrdersByIDNotFound with default headers values
func NewPatchOrdersByIDNotFound() *PatchOrdersByIDNotFound {
	return &PatchOrdersByIDNotFound{}
}

/*PatchOrdersByIDNotFound handles this case with default header values.

Indicates that the order with the given order number is unknown.
*/
type PatchOrdersByIDNotFound struct {
}

func (o *PatchOrdersByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /orders/{order_no}][%d] patchOrdersByIdNotFound ", 404)
}

func (o *PatchOrdersByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchOrdersByIDDefault creates a PatchOrdersByIDDefault with default headers values
func NewPatchOrdersByIDDefault(code int) *PatchOrdersByIDDefault {
	return &PatchOrdersByIDDefault{
		_statusCode: code,
	}
}

/*PatchOrdersByIDDefault handles this case with default header values.

PatchOrdersByIDDefault patch orders by ID default
*/
type PatchOrdersByIDDefault struct {
	_statusCode int

	Payload *models.Order
}

// Code gets the status code for the patch orders by ID default response
func (o *PatchOrdersByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchOrdersByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /orders/{order_no}][%d] patchOrdersByID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchOrdersByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Order)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
