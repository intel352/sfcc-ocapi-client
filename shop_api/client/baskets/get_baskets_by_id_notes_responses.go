// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// GetBasketsByIDNotesReader is a Reader for the GetBasketsByIDNotes structure.
type GetBasketsByIDNotesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBasketsByIDNotesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetBasketsByIDNotesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetBasketsByIDNotesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBasketsByIDNotesNotFound creates a GetBasketsByIDNotesNotFound with default headers values
func NewGetBasketsByIDNotesNotFound() *GetBasketsByIDNotesNotFound {
	return &GetBasketsByIDNotesNotFound{}
}

/*GetBasketsByIDNotesNotFound handles this case with default header values.

Indicates that the basket with the given basket id is unknown.
*/
type GetBasketsByIDNotesNotFound struct {
}

func (o *GetBasketsByIDNotesNotFound) Error() string {
	return fmt.Sprintf("[GET /baskets/{basket_id}/notes][%d] getBasketsByIdNotesNotFound ", 404)
}

func (o *GetBasketsByIDNotesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBasketsByIDNotesDefault creates a GetBasketsByIDNotesDefault with default headers values
func NewGetBasketsByIDNotesDefault(code int) *GetBasketsByIDNotesDefault {
	return &GetBasketsByIDNotesDefault{
		_statusCode: code,
	}
}

/*GetBasketsByIDNotesDefault handles this case with default header values.

GetBasketsByIDNotesDefault get baskets by ID notes default
*/
type GetBasketsByIDNotesDefault struct {
	_statusCode int

	Payload *models.NotesResult
}

// Code gets the status code for the get baskets by ID notes default response
func (o *GetBasketsByIDNotesDefault) Code() int {
	return o._statusCode
}

func (o *GetBasketsByIDNotesDefault) Error() string {
	return fmt.Sprintf("[GET /baskets/{basket_id}/notes][%d] getBasketsByIDNotes default  %+v", o._statusCode, o.Payload)
}

func (o *GetBasketsByIDNotesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NotesResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
