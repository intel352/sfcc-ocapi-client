// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PutBasketsByIDAgentReader is a Reader for the PutBasketsByIDAgent structure.
type PutBasketsByIDAgentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutBasketsByIDAgentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutBasketsByIDAgentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutBasketsByIDAgentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutBasketsByIDAgentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutBasketsByIDAgentBadRequest creates a PutBasketsByIDAgentBadRequest with default headers values
func NewPutBasketsByIDAgentBadRequest() *PutBasketsByIDAgentBadRequest {
	return &PutBasketsByIDAgentBadRequest{}
}

/*PutBasketsByIDAgentBadRequest handles this case with default header values.

Indicates that marking this basket as an agent basket would exceed
             the open agent basket limit for the basket customer
*/
type PutBasketsByIDAgentBadRequest struct {
}

func (o *PutBasketsByIDAgentBadRequest) Error() string {
	return fmt.Sprintf("[PUT /baskets/{basket_id}/agent][%d] putBasketsByIdAgentBadRequest ", 400)
}

func (o *PutBasketsByIDAgentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutBasketsByIDAgentNotFound creates a PutBasketsByIDAgentNotFound with default headers values
func NewPutBasketsByIDAgentNotFound() *PutBasketsByIDAgentNotFound {
	return &PutBasketsByIDAgentNotFound{}
}

/*PutBasketsByIDAgentNotFound handles this case with default header values.

Indicates that the basket with the given basket id is unknown.
*/
type PutBasketsByIDAgentNotFound struct {
}

func (o *PutBasketsByIDAgentNotFound) Error() string {
	return fmt.Sprintf("[PUT /baskets/{basket_id}/agent][%d] putBasketsByIdAgentNotFound ", 404)
}

func (o *PutBasketsByIDAgentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutBasketsByIDAgentDefault creates a PutBasketsByIDAgentDefault with default headers values
func NewPutBasketsByIDAgentDefault(code int) *PutBasketsByIDAgentDefault {
	return &PutBasketsByIDAgentDefault{
		_statusCode: code,
	}
}

/*PutBasketsByIDAgentDefault handles this case with default header values.

PutBasketsByIDAgentDefault put baskets by ID agent default
*/
type PutBasketsByIDAgentDefault struct {
	_statusCode int

	Payload *models.Basket
}

// Code gets the status code for the put baskets by ID agent default response
func (o *PutBasketsByIDAgentDefault) Code() int {
	return o._statusCode
}

func (o *PutBasketsByIDAgentDefault) Error() string {
	return fmt.Sprintf("[PUT /baskets/{basket_id}/agent][%d] putBasketsByIDAgent default  %+v", o._statusCode, o.Payload)
}

func (o *PutBasketsByIDAgentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Basket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
