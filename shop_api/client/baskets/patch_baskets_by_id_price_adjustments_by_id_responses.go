// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PatchBasketsByIDPriceAdjustmentsByIDReader is a Reader for the PatchBasketsByIDPriceAdjustmentsByID structure.
type PatchBasketsByIDPriceAdjustmentsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchBasketsByIDPriceAdjustmentsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPatchBasketsByIDPriceAdjustmentsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchBasketsByIDPriceAdjustmentsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchBasketsByIDPriceAdjustmentsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchBasketsByIDPriceAdjustmentsByIDBadRequest creates a PatchBasketsByIDPriceAdjustmentsByIDBadRequest with default headers values
func NewPatchBasketsByIDPriceAdjustmentsByIDBadRequest() *PatchBasketsByIDPriceAdjustmentsByIDBadRequest {
	return &PatchBasketsByIDPriceAdjustmentsByIDBadRequest{}
}

/*PatchBasketsByIDPriceAdjustmentsByIDBadRequest handles this case with default header values.

Indicates that the price adjustment is not manual and cannot be
             updated. or Indicates that the expected attributes are missing in the
             input. or Indicates that the type of a price adjustment does not match
             the adjustment type of the input data. or Indicates that the price adjustment limit is exceeded.
*/
type PatchBasketsByIDPriceAdjustmentsByIDBadRequest struct {
}

func (o *PatchBasketsByIDPriceAdjustmentsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /baskets/{basket_id}/price_adjustments/{price_adjustment_id}][%d] patchBasketsByIdPriceAdjustmentsByIdBadRequest ", 400)
}

func (o *PatchBasketsByIDPriceAdjustmentsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchBasketsByIDPriceAdjustmentsByIDNotFound creates a PatchBasketsByIDPriceAdjustmentsByIDNotFound with default headers values
func NewPatchBasketsByIDPriceAdjustmentsByIDNotFound() *PatchBasketsByIDPriceAdjustmentsByIDNotFound {
	return &PatchBasketsByIDPriceAdjustmentsByIDNotFound{}
}

/*PatchBasketsByIDPriceAdjustmentsByIDNotFound handles this case with default header values.

Indicates that the priceAdjustmentId is not found.
*/
type PatchBasketsByIDPriceAdjustmentsByIDNotFound struct {
}

func (o *PatchBasketsByIDPriceAdjustmentsByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /baskets/{basket_id}/price_adjustments/{price_adjustment_id}][%d] patchBasketsByIdPriceAdjustmentsByIdNotFound ", 404)
}

func (o *PatchBasketsByIDPriceAdjustmentsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchBasketsByIDPriceAdjustmentsByIDDefault creates a PatchBasketsByIDPriceAdjustmentsByIDDefault with default headers values
func NewPatchBasketsByIDPriceAdjustmentsByIDDefault(code int) *PatchBasketsByIDPriceAdjustmentsByIDDefault {
	return &PatchBasketsByIDPriceAdjustmentsByIDDefault{
		_statusCode: code,
	}
}

/*PatchBasketsByIDPriceAdjustmentsByIDDefault handles this case with default header values.

PatchBasketsByIDPriceAdjustmentsByIDDefault patch baskets by ID price adjustments by ID default
*/
type PatchBasketsByIDPriceAdjustmentsByIDDefault struct {
	_statusCode int

	Payload *models.Basket
}

// Code gets the status code for the patch baskets by ID price adjustments by ID default response
func (o *PatchBasketsByIDPriceAdjustmentsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchBasketsByIDPriceAdjustmentsByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /baskets/{basket_id}/price_adjustments/{price_adjustment_id}][%d] patchBasketsByIDPriceAdjustmentsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchBasketsByIDPriceAdjustmentsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Basket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
