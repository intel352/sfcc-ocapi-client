// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// GetBasketsByIDReader is a Reader for the GetBasketsByID structure.
type GetBasketsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBasketsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewGetBasketsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetBasketsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetBasketsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBasketsByIDBadRequest creates a GetBasketsByIDBadRequest with default headers values
func NewGetBasketsByIDBadRequest() *GetBasketsByIDBadRequest {
	return &GetBasketsByIDBadRequest{}
}

/*GetBasketsByIDBadRequest handles this case with default header values.

Indicates that the customer assigned to the basket does not match the verified
             customer represented by the JWT token, not relevant when using OAuth.
*/
type GetBasketsByIDBadRequest struct {
}

func (o *GetBasketsByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /baskets/{basket_id}][%d] getBasketsByIdBadRequest ", 400)
}

func (o *GetBasketsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBasketsByIDNotFound creates a GetBasketsByIDNotFound with default headers values
func NewGetBasketsByIDNotFound() *GetBasketsByIDNotFound {
	return &GetBasketsByIDNotFound{}
}

/*GetBasketsByIDNotFound handles this case with default header values.

Indicates that the basket with the given basket id is unknown.
*/
type GetBasketsByIDNotFound struct {
}

func (o *GetBasketsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /baskets/{basket_id}][%d] getBasketsByIdNotFound ", 404)
}

func (o *GetBasketsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBasketsByIDDefault creates a GetBasketsByIDDefault with default headers values
func NewGetBasketsByIDDefault(code int) *GetBasketsByIDDefault {
	return &GetBasketsByIDDefault{
		_statusCode: code,
	}
}

/*GetBasketsByIDDefault handles this case with default header values.

GetBasketsByIDDefault get baskets by ID default
*/
type GetBasketsByIDDefault struct {
	_statusCode int

	Payload *models.Basket
}

// Code gets the status code for the get baskets by ID default response
func (o *GetBasketsByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetBasketsByIDDefault) Error() string {
	return fmt.Sprintf("[GET /baskets/{basket_id}][%d] getBasketsByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetBasketsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Basket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
