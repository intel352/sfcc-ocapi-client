// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// NewPatchBasketsByIDPriceAdjustmentsByIDParams creates a new PatchBasketsByIDPriceAdjustmentsByIDParams object
// with the default values initialized.
func NewPatchBasketsByIDPriceAdjustmentsByIDParams() *PatchBasketsByIDPriceAdjustmentsByIDParams {
	var ()
	return &PatchBasketsByIDPriceAdjustmentsByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPatchBasketsByIDPriceAdjustmentsByIDParamsWithTimeout creates a new PatchBasketsByIDPriceAdjustmentsByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPatchBasketsByIDPriceAdjustmentsByIDParamsWithTimeout(timeout time.Duration) *PatchBasketsByIDPriceAdjustmentsByIDParams {
	var ()
	return &PatchBasketsByIDPriceAdjustmentsByIDParams{

		timeout: timeout,
	}
}

// NewPatchBasketsByIDPriceAdjustmentsByIDParamsWithContext creates a new PatchBasketsByIDPriceAdjustmentsByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPatchBasketsByIDPriceAdjustmentsByIDParamsWithContext(ctx context.Context) *PatchBasketsByIDPriceAdjustmentsByIDParams {
	var ()
	return &PatchBasketsByIDPriceAdjustmentsByIDParams{

		Context: ctx,
	}
}

// NewPatchBasketsByIDPriceAdjustmentsByIDParamsWithHTTPClient creates a new PatchBasketsByIDPriceAdjustmentsByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPatchBasketsByIDPriceAdjustmentsByIDParamsWithHTTPClient(client *http.Client) *PatchBasketsByIDPriceAdjustmentsByIDParams {
	var ()
	return &PatchBasketsByIDPriceAdjustmentsByIDParams{
		HTTPClient: client,
	}
}

/*PatchBasketsByIDPriceAdjustmentsByIDParams contains all the parameters to send to the API endpoint
for the patch baskets by ID price adjustments by ID operation typically these are written to a http.Request
*/
type PatchBasketsByIDPriceAdjustmentsByIDParams struct {

	/*BasketID
	  the id of the basket to be modified

	*/
	BasketID string
	/*Body*/
	Body *models.PriceAdjustment
	/*PriceAdjustmentID
	  the uuid of the adjustment to be updated

	*/
	PriceAdjustmentID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) WithTimeout(timeout time.Duration) *PatchBasketsByIDPriceAdjustmentsByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) WithContext(ctx context.Context) *PatchBasketsByIDPriceAdjustmentsByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) WithHTTPClient(client *http.Client) *PatchBasketsByIDPriceAdjustmentsByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBasketID adds the basketID to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) WithBasketID(basketID string) *PatchBasketsByIDPriceAdjustmentsByIDParams {
	o.SetBasketID(basketID)
	return o
}

// SetBasketID adds the basketId to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) SetBasketID(basketID string) {
	o.BasketID = basketID
}

// WithBody adds the body to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) WithBody(body *models.PriceAdjustment) *PatchBasketsByIDPriceAdjustmentsByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) SetBody(body *models.PriceAdjustment) {
	o.Body = body
}

// WithPriceAdjustmentID adds the priceAdjustmentID to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) WithPriceAdjustmentID(priceAdjustmentID string) *PatchBasketsByIDPriceAdjustmentsByIDParams {
	o.SetPriceAdjustmentID(priceAdjustmentID)
	return o
}

// SetPriceAdjustmentID adds the priceAdjustmentId to the patch baskets by ID price adjustments by ID params
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) SetPriceAdjustmentID(priceAdjustmentID string) {
	o.PriceAdjustmentID = priceAdjustmentID
}

// WriteToRequest writes these params to a swagger request
func (o *PatchBasketsByIDPriceAdjustmentsByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param basket_id
	if err := r.SetPathParam("basket_id", o.BasketID); err != nil {
		return err
	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param price_adjustment_id
	if err := r.SetPathParam("price_adjustment_id", o.PriceAdjustmentID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
