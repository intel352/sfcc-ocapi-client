// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PostBasketsByIDPaymentInstrumentsReader is a Reader for the PostBasketsByIDPaymentInstruments structure.
type PostBasketsByIDPaymentInstrumentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBasketsByIDPaymentInstrumentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPostBasketsByIDPaymentInstrumentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostBasketsByIDPaymentInstrumentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostBasketsByIDPaymentInstrumentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostBasketsByIDPaymentInstrumentsBadRequest creates a PostBasketsByIDPaymentInstrumentsBadRequest with default headers values
func NewPostBasketsByIDPaymentInstrumentsBadRequest() *PostBasketsByIDPaymentInstrumentsBadRequest {
	return &PostBasketsByIDPaymentInstrumentsBadRequest{}
}

/*PostBasketsByIDPaymentInstrumentsBadRequest handles this case with default header values.

Indicates that the provided payment method is invalid or not applicable. or Indicates that the customer assigned to the basket does not match the verified
             customer represented by the JWT token, not relevant when using OAuth.
*/
type PostBasketsByIDPaymentInstrumentsBadRequest struct {
}

func (o *PostBasketsByIDPaymentInstrumentsBadRequest) Error() string {
	return fmt.Sprintf("[POST /baskets/{basket_id}/payment_instruments][%d] postBasketsByIdPaymentInstrumentsBadRequest ", 400)
}

func (o *PostBasketsByIDPaymentInstrumentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBasketsByIDPaymentInstrumentsNotFound creates a PostBasketsByIDPaymentInstrumentsNotFound with default headers values
func NewPostBasketsByIDPaymentInstrumentsNotFound() *PostBasketsByIDPaymentInstrumentsNotFound {
	return &PostBasketsByIDPaymentInstrumentsNotFound{}
}

/*PostBasketsByIDPaymentInstrumentsNotFound handles this case with default header values.

Indicates that the basket with the given basket id is unknown. or Indicates that the payment instrument with the given customer payment
             instrument id is unknown.
*/
type PostBasketsByIDPaymentInstrumentsNotFound struct {
}

func (o *PostBasketsByIDPaymentInstrumentsNotFound) Error() string {
	return fmt.Sprintf("[POST /baskets/{basket_id}/payment_instruments][%d] postBasketsByIdPaymentInstrumentsNotFound ", 404)
}

func (o *PostBasketsByIDPaymentInstrumentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBasketsByIDPaymentInstrumentsDefault creates a PostBasketsByIDPaymentInstrumentsDefault with default headers values
func NewPostBasketsByIDPaymentInstrumentsDefault(code int) *PostBasketsByIDPaymentInstrumentsDefault {
	return &PostBasketsByIDPaymentInstrumentsDefault{
		_statusCode: code,
	}
}

/*PostBasketsByIDPaymentInstrumentsDefault handles this case with default header values.

PostBasketsByIDPaymentInstrumentsDefault post baskets by ID payment instruments default
*/
type PostBasketsByIDPaymentInstrumentsDefault struct {
	_statusCode int

	Payload *models.Basket
}

// Code gets the status code for the post baskets by ID payment instruments default response
func (o *PostBasketsByIDPaymentInstrumentsDefault) Code() int {
	return o._statusCode
}

func (o *PostBasketsByIDPaymentInstrumentsDefault) Error() string {
	return fmt.Sprintf("[POST /baskets/{basket_id}/payment_instruments][%d] postBasketsByIDPaymentInstruments default  %+v", o._statusCode, o.Payload)
}

func (o *PostBasketsByIDPaymentInstrumentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Basket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
