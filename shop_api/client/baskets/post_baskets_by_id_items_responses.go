// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PostBasketsByIDItemsReader is a Reader for the PostBasketsByIDItems structure.
type PostBasketsByIDItemsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostBasketsByIDItemsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPostBasketsByIDItemsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostBasketsByIDItemsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPostBasketsByIDItemsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostBasketsByIDItemsBadRequest creates a PostBasketsByIDItemsBadRequest with default headers values
func NewPostBasketsByIDItemsBadRequest() *PostBasketsByIDItemsBadRequest {
	return &PostBasketsByIDItemsBadRequest{}
}

/*PostBasketsByIDItemsBadRequest handles this case with default header values.

Indicates that the given product id is null or invalid. or Indicates that the product with the given product id is unknown, offline or
             not assigned to site catalog or the given product item quantity is null or invalid. or Indicates a null quantity value or Indicates that the requested product quantity is not available. or Indicates that the product cannot be added to the basket because of its type. or Indicates that an option with the specified option id is unknown. or Indicates that an option with the specified option value id is
             unknown. or Indicates that the maximum allowed number, of products added to the basket,
             has been exceeded. or Indicates that the customer assigned to the basket does not match the verified
             customer represented by the JWT token, not relevant when using OAuth. or Indicates that the provided bonus discount line item id is not
             present in the current basket. or Indicates that the quantity of the product to be added will result in the
             number of selected bonus choice products to exceed the amount that the user is permitted to select. or Indicates that the selected bonus product is not an applicable product for
             the bonus discount line item provided.
*/
type PostBasketsByIDItemsBadRequest struct {
}

func (o *PostBasketsByIDItemsBadRequest) Error() string {
	return fmt.Sprintf("[POST /baskets/{basket_id}/items][%d] postBasketsByIdItemsBadRequest ", 400)
}

func (o *PostBasketsByIDItemsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBasketsByIDItemsNotFound creates a PostBasketsByIDItemsNotFound with default headers values
func NewPostBasketsByIDItemsNotFound() *PostBasketsByIDItemsNotFound {
	return &PostBasketsByIDItemsNotFound{}
}

/*PostBasketsByIDItemsNotFound handles this case with default header values.

Indicates that the basket with the given basket id is unknown. or Indicates that the basket does not contain a shipment with the given shipment
             id.
*/
type PostBasketsByIDItemsNotFound struct {
}

func (o *PostBasketsByIDItemsNotFound) Error() string {
	return fmt.Sprintf("[POST /baskets/{basket_id}/items][%d] postBasketsByIdItemsNotFound ", 404)
}

func (o *PostBasketsByIDItemsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostBasketsByIDItemsDefault creates a PostBasketsByIDItemsDefault with default headers values
func NewPostBasketsByIDItemsDefault(code int) *PostBasketsByIDItemsDefault {
	return &PostBasketsByIDItemsDefault{
		_statusCode: code,
	}
}

/*PostBasketsByIDItemsDefault handles this case with default header values.

PostBasketsByIDItemsDefault post baskets by ID items default
*/
type PostBasketsByIDItemsDefault struct {
	_statusCode int

	Payload *models.Basket
}

// Code gets the status code for the post baskets by ID items default response
func (o *PostBasketsByIDItemsDefault) Code() int {
	return o._statusCode
}

func (o *PostBasketsByIDItemsDefault) Error() string {
	return fmt.Sprintf("[POST /baskets/{basket_id}/items][%d] postBasketsByIDItems default  %+v", o._statusCode, o.Payload)
}

func (o *PostBasketsByIDItemsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Basket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
