// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PatchBasketsByIDGiftCertificateItemsByIDReader is a Reader for the PatchBasketsByIDGiftCertificateItemsByID structure.
type PatchBasketsByIDGiftCertificateItemsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchBasketsByIDGiftCertificateItemsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPatchBasketsByIDGiftCertificateItemsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchBasketsByIDGiftCertificateItemsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchBasketsByIDGiftCertificateItemsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchBasketsByIDGiftCertificateItemsByIDBadRequest creates a PatchBasketsByIDGiftCertificateItemsByIDBadRequest with default headers values
func NewPatchBasketsByIDGiftCertificateItemsByIDBadRequest() *PatchBasketsByIDGiftCertificateItemsByIDBadRequest {
	return &PatchBasketsByIDGiftCertificateItemsByIDBadRequest{}
}

/*PatchBasketsByIDGiftCertificateItemsByIDBadRequest handles this case with default header values.

Indicates that the gift certificate item amount is negative.
*/
type PatchBasketsByIDGiftCertificateItemsByIDBadRequest struct {
}

func (o *PatchBasketsByIDGiftCertificateItemsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /baskets/{basket_id}/gift_certificate_items/{gift_certificate_item_id}][%d] patchBasketsByIdGiftCertificateItemsByIdBadRequest ", 400)
}

func (o *PatchBasketsByIDGiftCertificateItemsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchBasketsByIDGiftCertificateItemsByIDNotFound creates a PatchBasketsByIDGiftCertificateItemsByIDNotFound with default headers values
func NewPatchBasketsByIDGiftCertificateItemsByIDNotFound() *PatchBasketsByIDGiftCertificateItemsByIDNotFound {
	return &PatchBasketsByIDGiftCertificateItemsByIDNotFound{}
}

/*PatchBasketsByIDGiftCertificateItemsByIDNotFound handles this case with default header values.

Indicates that the basket with the given basket id is unknown. or Indicates that the gift certificate item with the given gift certificate item id is unknown.
*/
type PatchBasketsByIDGiftCertificateItemsByIDNotFound struct {
}

func (o *PatchBasketsByIDGiftCertificateItemsByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /baskets/{basket_id}/gift_certificate_items/{gift_certificate_item_id}][%d] patchBasketsByIdGiftCertificateItemsByIdNotFound ", 404)
}

func (o *PatchBasketsByIDGiftCertificateItemsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchBasketsByIDGiftCertificateItemsByIDDefault creates a PatchBasketsByIDGiftCertificateItemsByIDDefault with default headers values
func NewPatchBasketsByIDGiftCertificateItemsByIDDefault(code int) *PatchBasketsByIDGiftCertificateItemsByIDDefault {
	return &PatchBasketsByIDGiftCertificateItemsByIDDefault{
		_statusCode: code,
	}
}

/*PatchBasketsByIDGiftCertificateItemsByIDDefault handles this case with default header values.

PatchBasketsByIDGiftCertificateItemsByIDDefault patch baskets by ID gift certificate items by ID default
*/
type PatchBasketsByIDGiftCertificateItemsByIDDefault struct {
	_statusCode int

	Payload *models.Basket
}

// Code gets the status code for the patch baskets by ID gift certificate items by ID default response
func (o *PatchBasketsByIDGiftCertificateItemsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchBasketsByIDGiftCertificateItemsByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /baskets/{basket_id}/gift_certificate_items/{gift_certificate_item_id}][%d] patchBasketsByIDGiftCertificateItemsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchBasketsByIDGiftCertificateItemsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Basket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
