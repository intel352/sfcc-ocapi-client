// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// GetBasketsByIDShipmentsByIDShippingMethodsReader is a Reader for the GetBasketsByIDShipmentsByIDShippingMethods structure.
type GetBasketsByIDShipmentsByIDShippingMethodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBasketsByIDShipmentsByIDShippingMethodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewGetBasketsByIDShipmentsByIDShippingMethodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetBasketsByIDShipmentsByIDShippingMethodsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetBasketsByIDShipmentsByIDShippingMethodsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBasketsByIDShipmentsByIDShippingMethodsBadRequest creates a GetBasketsByIDShipmentsByIDShippingMethodsBadRequest with default headers values
func NewGetBasketsByIDShipmentsByIDShippingMethodsBadRequest() *GetBasketsByIDShipmentsByIDShippingMethodsBadRequest {
	return &GetBasketsByIDShipmentsByIDShippingMethodsBadRequest{}
}

/*GetBasketsByIDShipmentsByIDShippingMethodsBadRequest handles this case with default header values.

Indicates that the customer assigned to the basket does not match the
             verified customer represented by the JWT token, not relevant
             when using OAuth.
*/
type GetBasketsByIDShipmentsByIDShippingMethodsBadRequest struct {
}

func (o *GetBasketsByIDShipmentsByIDShippingMethodsBadRequest) Error() string {
	return fmt.Sprintf("[GET /baskets/{basket_id}/shipments/{shipment_id}/shipping_methods][%d] getBasketsByIdShipmentsByIdShippingMethodsBadRequest ", 400)
}

func (o *GetBasketsByIDShipmentsByIDShippingMethodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBasketsByIDShipmentsByIDShippingMethodsNotFound creates a GetBasketsByIDShipmentsByIDShippingMethodsNotFound with default headers values
func NewGetBasketsByIDShipmentsByIDShippingMethodsNotFound() *GetBasketsByIDShipmentsByIDShippingMethodsNotFound {
	return &GetBasketsByIDShipmentsByIDShippingMethodsNotFound{}
}

/*GetBasketsByIDShipmentsByIDShippingMethodsNotFound handles this case with default header values.

Indicates that the basket with the given basket id is unknown. or Indicates that the shipment with the given shipment id is unknown.
*/
type GetBasketsByIDShipmentsByIDShippingMethodsNotFound struct {
}

func (o *GetBasketsByIDShipmentsByIDShippingMethodsNotFound) Error() string {
	return fmt.Sprintf("[GET /baskets/{basket_id}/shipments/{shipment_id}/shipping_methods][%d] getBasketsByIdShipmentsByIdShippingMethodsNotFound ", 404)
}

func (o *GetBasketsByIDShipmentsByIDShippingMethodsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBasketsByIDShipmentsByIDShippingMethodsDefault creates a GetBasketsByIDShipmentsByIDShippingMethodsDefault with default headers values
func NewGetBasketsByIDShipmentsByIDShippingMethodsDefault(code int) *GetBasketsByIDShipmentsByIDShippingMethodsDefault {
	return &GetBasketsByIDShipmentsByIDShippingMethodsDefault{
		_statusCode: code,
	}
}

/*GetBasketsByIDShipmentsByIDShippingMethodsDefault handles this case with default header values.

GetBasketsByIDShipmentsByIDShippingMethodsDefault get baskets by ID shipments by ID shipping methods default
*/
type GetBasketsByIDShipmentsByIDShippingMethodsDefault struct {
	_statusCode int

	Payload *models.ShippingMethodResult
}

// Code gets the status code for the get baskets by ID shipments by ID shipping methods default response
func (o *GetBasketsByIDShipmentsByIDShippingMethodsDefault) Code() int {
	return o._statusCode
}

func (o *GetBasketsByIDShipmentsByIDShippingMethodsDefault) Error() string {
	return fmt.Sprintf("[GET /baskets/{basket_id}/shipments/{shipment_id}/shipping_methods][%d] getBasketsByIDShipmentsByIDShippingMethods default  %+v", o._statusCode, o.Payload)
}

func (o *GetBasketsByIDShipmentsByIDShippingMethodsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ShippingMethodResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
