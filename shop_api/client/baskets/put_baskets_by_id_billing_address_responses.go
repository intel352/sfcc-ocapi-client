// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PutBasketsByIDBillingAddressReader is a Reader for the PutBasketsByIDBillingAddress structure.
type PutBasketsByIDBillingAddressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutBasketsByIDBillingAddressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPutBasketsByIDBillingAddressBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutBasketsByIDBillingAddressNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPutBasketsByIDBillingAddressDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutBasketsByIDBillingAddressBadRequest creates a PutBasketsByIDBillingAddressBadRequest with default headers values
func NewPutBasketsByIDBillingAddressBadRequest() *PutBasketsByIDBillingAddressBadRequest {
	return &PutBasketsByIDBillingAddressBadRequest{}
}

/*PutBasketsByIDBillingAddressBadRequest handles this case with default header values.

Indicates that both customer_address_id and address body was
             provided. or Indicates that the customer assigned to the basket does not
             match the verified customer represented by the JWT token (not
             relevant when using OAuth). or Indicates that the billing address was null and no customer_address_id was provided.
*/
type PutBasketsByIDBillingAddressBadRequest struct {
}

func (o *PutBasketsByIDBillingAddressBadRequest) Error() string {
	return fmt.Sprintf("[PUT /baskets/{basket_id}/billing_address][%d] putBasketsByIdBillingAddressBadRequest ", 400)
}

func (o *PutBasketsByIDBillingAddressBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutBasketsByIDBillingAddressNotFound creates a PutBasketsByIDBillingAddressNotFound with default headers values
func NewPutBasketsByIDBillingAddressNotFound() *PutBasketsByIDBillingAddressNotFound {
	return &PutBasketsByIDBillingAddressNotFound{}
}

/*PutBasketsByIDBillingAddressNotFound handles this case with default header values.

Indicates that the basket with the given basket id is unknown. or Indicates that the address specified by customer_address_id is
             unknown.
*/
type PutBasketsByIDBillingAddressNotFound struct {
}

func (o *PutBasketsByIDBillingAddressNotFound) Error() string {
	return fmt.Sprintf("[PUT /baskets/{basket_id}/billing_address][%d] putBasketsByIdBillingAddressNotFound ", 404)
}

func (o *PutBasketsByIDBillingAddressNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutBasketsByIDBillingAddressDefault creates a PutBasketsByIDBillingAddressDefault with default headers values
func NewPutBasketsByIDBillingAddressDefault(code int) *PutBasketsByIDBillingAddressDefault {
	return &PutBasketsByIDBillingAddressDefault{
		_statusCode: code,
	}
}

/*PutBasketsByIDBillingAddressDefault handles this case with default header values.

PutBasketsByIDBillingAddressDefault put baskets by ID billing address default
*/
type PutBasketsByIDBillingAddressDefault struct {
	_statusCode int

	Payload *models.Basket
}

// Code gets the status code for the put baskets by ID billing address default response
func (o *PutBasketsByIDBillingAddressDefault) Code() int {
	return o._statusCode
}

func (o *PutBasketsByIDBillingAddressDefault) Error() string {
	return fmt.Sprintf("[PUT /baskets/{basket_id}/billing_address][%d] putBasketsByIDBillingAddress default  %+v", o._statusCode, o.Payload)
}

func (o *PutBasketsByIDBillingAddressDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Basket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
