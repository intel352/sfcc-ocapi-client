// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// DeleteBasketsByIDShipmentsByIDReader is a Reader for the DeleteBasketsByIDShipmentsByID structure.
type DeleteBasketsByIDShipmentsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBasketsByIDShipmentsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewDeleteBasketsByIDShipmentsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteBasketsByIDShipmentsByIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteBasketsByIDShipmentsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteBasketsByIDShipmentsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteBasketsByIDShipmentsByIDBadRequest creates a DeleteBasketsByIDShipmentsByIDBadRequest with default headers values
func NewDeleteBasketsByIDShipmentsByIDBadRequest() *DeleteBasketsByIDShipmentsByIDBadRequest {
	return &DeleteBasketsByIDShipmentsByIDBadRequest{}
}

/*DeleteBasketsByIDShipmentsByIDBadRequest handles this case with default header values.

Indicates that the given shipment id is invalid. or Indicates that the customer assigned to the basket does not match the
             verified customer represented by the JWT token, not relevant
             when using OAuth.
*/
type DeleteBasketsByIDShipmentsByIDBadRequest struct {
}

func (o *DeleteBasketsByIDShipmentsByIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /baskets/{basket_id}/shipments/{shipment_id}][%d] deleteBasketsByIdShipmentsByIdBadRequest ", 400)
}

func (o *DeleteBasketsByIDShipmentsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBasketsByIDShipmentsByIDForbidden creates a DeleteBasketsByIDShipmentsByIDForbidden with default headers values
func NewDeleteBasketsByIDShipmentsByIDForbidden() *DeleteBasketsByIDShipmentsByIDForbidden {
	return &DeleteBasketsByIDShipmentsByIDForbidden{}
}

/*DeleteBasketsByIDShipmentsByIDForbidden handles this case with default header values.

Indicates that the given shipment id corresponds to the
             default shipment and cannot be removed.
*/
type DeleteBasketsByIDShipmentsByIDForbidden struct {
}

func (o *DeleteBasketsByIDShipmentsByIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /baskets/{basket_id}/shipments/{shipment_id}][%d] deleteBasketsByIdShipmentsByIdForbidden ", 403)
}

func (o *DeleteBasketsByIDShipmentsByIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBasketsByIDShipmentsByIDNotFound creates a DeleteBasketsByIDShipmentsByIDNotFound with default headers values
func NewDeleteBasketsByIDShipmentsByIDNotFound() *DeleteBasketsByIDShipmentsByIDNotFound {
	return &DeleteBasketsByIDShipmentsByIDNotFound{}
}

/*DeleteBasketsByIDShipmentsByIDNotFound handles this case with default header values.

Indicates that the basket with the given basket id is
             unknown.
*/
type DeleteBasketsByIDShipmentsByIDNotFound struct {
}

func (o *DeleteBasketsByIDShipmentsByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /baskets/{basket_id}/shipments/{shipment_id}][%d] deleteBasketsByIdShipmentsByIdNotFound ", 404)
}

func (o *DeleteBasketsByIDShipmentsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBasketsByIDShipmentsByIDDefault creates a DeleteBasketsByIDShipmentsByIDDefault with default headers values
func NewDeleteBasketsByIDShipmentsByIDDefault(code int) *DeleteBasketsByIDShipmentsByIDDefault {
	return &DeleteBasketsByIDShipmentsByIDDefault{
		_statusCode: code,
	}
}

/*DeleteBasketsByIDShipmentsByIDDefault handles this case with default header values.

DeleteBasketsByIDShipmentsByIDDefault delete baskets by ID shipments by ID default
*/
type DeleteBasketsByIDShipmentsByIDDefault struct {
	_statusCode int

	Payload *models.Basket
}

// Code gets the status code for the delete baskets by ID shipments by ID default response
func (o *DeleteBasketsByIDShipmentsByIDDefault) Code() int {
	return o._statusCode
}

func (o *DeleteBasketsByIDShipmentsByIDDefault) Error() string {
	return fmt.Sprintf("[DELETE /baskets/{basket_id}/shipments/{shipment_id}][%d] deleteBasketsByIDShipmentsByID default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteBasketsByIDShipmentsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Basket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
