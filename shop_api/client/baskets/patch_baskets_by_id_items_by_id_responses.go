// Code generated by go-swagger; DO NOT EDIT.

package baskets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PatchBasketsByIDItemsByIDReader is a Reader for the PatchBasketsByIDItemsByID structure.
type PatchBasketsByIDItemsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchBasketsByIDItemsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPatchBasketsByIDItemsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchBasketsByIDItemsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchBasketsByIDItemsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchBasketsByIDItemsByIDBadRequest creates a PatchBasketsByIDItemsByIDBadRequest with default headers values
func NewPatchBasketsByIDItemsByIDBadRequest() *PatchBasketsByIDItemsByIDBadRequest {
	return &PatchBasketsByIDItemsByIDBadRequest{}
}

/*PatchBasketsByIDItemsByIDBadRequest handles this case with default header values.

Indicates that no product item with given item id was found
             for the basket. or Indicates that the product with the given product id in the
             request body is invalid. or Indicates a null quantity value or Indicates that an option with the specified option id is unknown. or Indicates that an option with the specified option value id is unknown. or Indicates that the given shipment id is invalid. or Indicates that the customer assigned to the basket does not
             match the verified customer represented by the JWT token, not
             relevant when using OAuth.
*/
type PatchBasketsByIDItemsByIDBadRequest struct {
}

func (o *PatchBasketsByIDItemsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /baskets/{basket_id}/items/{item_id}][%d] patchBasketsByIdItemsByIdBadRequest ", 400)
}

func (o *PatchBasketsByIDItemsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchBasketsByIDItemsByIDNotFound creates a PatchBasketsByIDItemsByIDNotFound with default headers values
func NewPatchBasketsByIDItemsByIDNotFound() *PatchBasketsByIDItemsByIDNotFound {
	return &PatchBasketsByIDItemsByIDNotFound{}
}

/*PatchBasketsByIDItemsByIDNotFound handles this case with default header values.

Indicates that the basket with the given basket id is unknown or Indicates that a shipment with it's given id is unknown.
*/
type PatchBasketsByIDItemsByIDNotFound struct {
}

func (o *PatchBasketsByIDItemsByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /baskets/{basket_id}/items/{item_id}][%d] patchBasketsByIdItemsByIdNotFound ", 404)
}

func (o *PatchBasketsByIDItemsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchBasketsByIDItemsByIDDefault creates a PatchBasketsByIDItemsByIDDefault with default headers values
func NewPatchBasketsByIDItemsByIDDefault(code int) *PatchBasketsByIDItemsByIDDefault {
	return &PatchBasketsByIDItemsByIDDefault{
		_statusCode: code,
	}
}

/*PatchBasketsByIDItemsByIDDefault handles this case with default header values.

PatchBasketsByIDItemsByIDDefault patch baskets by ID items by ID default
*/
type PatchBasketsByIDItemsByIDDefault struct {
	_statusCode int

	Payload *models.Basket
}

// Code gets the status code for the patch baskets by ID items by ID default response
func (o *PatchBasketsByIDItemsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchBasketsByIDItemsByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /baskets/{basket_id}/items/{item_id}][%d] patchBasketsByIDItemsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchBasketsByIDItemsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Basket)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
