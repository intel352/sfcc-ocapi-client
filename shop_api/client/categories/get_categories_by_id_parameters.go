// Code generated by go-swagger; DO NOT EDIT.

package categories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCategoriesByIDParams creates a new GetCategoriesByIDParams object
// with the default values initialized.
func NewGetCategoriesByIDParams() *GetCategoriesByIDParams {
	var ()
	return &GetCategoriesByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCategoriesByIDParamsWithTimeout creates a new GetCategoriesByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCategoriesByIDParamsWithTimeout(timeout time.Duration) *GetCategoriesByIDParams {
	var ()
	return &GetCategoriesByIDParams{

		timeout: timeout,
	}
}

// NewGetCategoriesByIDParamsWithContext creates a new GetCategoriesByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCategoriesByIDParamsWithContext(ctx context.Context) *GetCategoriesByIDParams {
	var ()
	return &GetCategoriesByIDParams{

		Context: ctx,
	}
}

// NewGetCategoriesByIDParamsWithHTTPClient creates a new GetCategoriesByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCategoriesByIDParamsWithHTTPClient(client *http.Client) *GetCategoriesByIDParams {
	var ()
	return &GetCategoriesByIDParams{
		HTTPClient: client,
	}
}

/*GetCategoriesByIDParams contains all the parameters to send to the API endpoint
for the get categories by ID operation typically these are written to a http.Request
*/
type GetCategoriesByIDParams struct {

	/*ID
	  The id of the requested category.

	*/
	ID string
	/*Levels*/
	Levels *int32
	/*Locale*/
	Locale *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get categories by ID params
func (o *GetCategoriesByIDParams) WithTimeout(timeout time.Duration) *GetCategoriesByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get categories by ID params
func (o *GetCategoriesByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get categories by ID params
func (o *GetCategoriesByIDParams) WithContext(ctx context.Context) *GetCategoriesByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get categories by ID params
func (o *GetCategoriesByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get categories by ID params
func (o *GetCategoriesByIDParams) WithHTTPClient(client *http.Client) *GetCategoriesByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get categories by ID params
func (o *GetCategoriesByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the get categories by ID params
func (o *GetCategoriesByIDParams) WithID(id string) *GetCategoriesByIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get categories by ID params
func (o *GetCategoriesByIDParams) SetID(id string) {
	o.ID = id
}

// WithLevels adds the levels to the get categories by ID params
func (o *GetCategoriesByIDParams) WithLevels(levels *int32) *GetCategoriesByIDParams {
	o.SetLevels(levels)
	return o
}

// SetLevels adds the levels to the get categories by ID params
func (o *GetCategoriesByIDParams) SetLevels(levels *int32) {
	o.Levels = levels
}

// WithLocale adds the locale to the get categories by ID params
func (o *GetCategoriesByIDParams) WithLocale(locale *string) *GetCategoriesByIDParams {
	o.SetLocale(locale)
	return o
}

// SetLocale adds the locale to the get categories by ID params
func (o *GetCategoriesByIDParams) SetLocale(locale *string) {
	o.Locale = locale
}

// WriteToRequest writes these params to a swagger request
func (o *GetCategoriesByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}

	if o.Levels != nil {

		// query param levels
		var qrLevels int32
		if o.Levels != nil {
			qrLevels = *o.Levels
		}
		qLevels := swag.FormatInt32(qrLevels)
		if qLevels != "" {
			if err := r.SetQueryParam("levels", qLevels); err != nil {
				return err
			}
		}

	}

	if o.Locale != nil {

		// query param locale
		var qrLocale string
		if o.Locale != nil {
			qrLocale = *o.Locale
		}
		qLocale := qrLocale
		if qLocale != "" {
			if err := r.SetQueryParam("locale", qLocale); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
