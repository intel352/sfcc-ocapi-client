// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCustomersByIDAddressesByIDParams creates a new GetCustomersByIDAddressesByIDParams object
// with the default values initialized.
func NewGetCustomersByIDAddressesByIDParams() *GetCustomersByIDAddressesByIDParams {
	var ()
	return &GetCustomersByIDAddressesByIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCustomersByIDAddressesByIDParamsWithTimeout creates a new GetCustomersByIDAddressesByIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCustomersByIDAddressesByIDParamsWithTimeout(timeout time.Duration) *GetCustomersByIDAddressesByIDParams {
	var ()
	return &GetCustomersByIDAddressesByIDParams{

		timeout: timeout,
	}
}

// NewGetCustomersByIDAddressesByIDParamsWithContext creates a new GetCustomersByIDAddressesByIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCustomersByIDAddressesByIDParamsWithContext(ctx context.Context) *GetCustomersByIDAddressesByIDParams {
	var ()
	return &GetCustomersByIDAddressesByIDParams{

		Context: ctx,
	}
}

// NewGetCustomersByIDAddressesByIDParamsWithHTTPClient creates a new GetCustomersByIDAddressesByIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCustomersByIDAddressesByIDParamsWithHTTPClient(client *http.Client) *GetCustomersByIDAddressesByIDParams {
	var ()
	return &GetCustomersByIDAddressesByIDParams{
		HTTPClient: client,
	}
}

/*GetCustomersByIDAddressesByIDParams contains all the parameters to send to the API endpoint
for the get customers by ID addresses by ID operation typically these are written to a http.Request
*/
type GetCustomersByIDAddressesByIDParams struct {

	/*AddressName
	  the name of the address to retrieve

	*/
	AddressName string
	/*CustomerID
	  the id of the customer to retrieve the address for

	*/
	CustomerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) WithTimeout(timeout time.Duration) *GetCustomersByIDAddressesByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) WithContext(ctx context.Context) *GetCustomersByIDAddressesByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) WithHTTPClient(client *http.Client) *GetCustomersByIDAddressesByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAddressName adds the addressName to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) WithAddressName(addressName string) *GetCustomersByIDAddressesByIDParams {
	o.SetAddressName(addressName)
	return o
}

// SetAddressName adds the addressName to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) SetAddressName(addressName string) {
	o.AddressName = addressName
}

// WithCustomerID adds the customerID to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) WithCustomerID(customerID string) *GetCustomersByIDAddressesByIDParams {
	o.SetCustomerID(customerID)
	return o
}

// SetCustomerID adds the customerId to the get customers by ID addresses by ID params
func (o *GetCustomersByIDAddressesByIDParams) SetCustomerID(customerID string) {
	o.CustomerID = customerID
}

// WriteToRequest writes these params to a swagger request
func (o *GetCustomersByIDAddressesByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param address_name
	if err := r.SetPathParam("address_name", o.AddressName); err != nil {
		return err
	}

	// path param customer_id
	if err := r.SetPathParam("customer_id", o.CustomerID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
