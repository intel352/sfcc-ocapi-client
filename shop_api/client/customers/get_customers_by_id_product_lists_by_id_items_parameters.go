// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetCustomersByIDProductListsByIDItemsParams creates a new GetCustomersByIDProductListsByIDItemsParams object
// with the default values initialized.
func NewGetCustomersByIDProductListsByIDItemsParams() *GetCustomersByIDProductListsByIDItemsParams {
	var ()
	return &GetCustomersByIDProductListsByIDItemsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetCustomersByIDProductListsByIDItemsParamsWithTimeout creates a new GetCustomersByIDProductListsByIDItemsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetCustomersByIDProductListsByIDItemsParamsWithTimeout(timeout time.Duration) *GetCustomersByIDProductListsByIDItemsParams {
	var ()
	return &GetCustomersByIDProductListsByIDItemsParams{

		timeout: timeout,
	}
}

// NewGetCustomersByIDProductListsByIDItemsParamsWithContext creates a new GetCustomersByIDProductListsByIDItemsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetCustomersByIDProductListsByIDItemsParamsWithContext(ctx context.Context) *GetCustomersByIDProductListsByIDItemsParams {
	var ()
	return &GetCustomersByIDProductListsByIDItemsParams{

		Context: ctx,
	}
}

// NewGetCustomersByIDProductListsByIDItemsParamsWithHTTPClient creates a new GetCustomersByIDProductListsByIDItemsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetCustomersByIDProductListsByIDItemsParamsWithHTTPClient(client *http.Client) *GetCustomersByIDProductListsByIDItemsParams {
	var ()
	return &GetCustomersByIDProductListsByIDItemsParams{
		HTTPClient: client,
	}
}

/*GetCustomersByIDProductListsByIDItemsParams contains all the parameters to send to the API endpoint
for the get customers by ID product lists by ID items operation typically these are written to a http.Request
*/
type GetCustomersByIDProductListsByIDItemsParams struct {

	/*Count*/
	Count *int32
	/*CustomerID
	  The id of the customer to retrieve the product list items for.

	*/
	CustomerID string
	/*Expand*/
	Expand []string
	/*ListID
	  The id of the product list.

	*/
	ListID string
	/*Start*/
	Start *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) WithTimeout(timeout time.Duration) *GetCustomersByIDProductListsByIDItemsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) WithContext(ctx context.Context) *GetCustomersByIDProductListsByIDItemsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) WithHTTPClient(client *http.Client) *GetCustomersByIDProductListsByIDItemsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCount adds the count to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) WithCount(count *int32) *GetCustomersByIDProductListsByIDItemsParams {
	o.SetCount(count)
	return o
}

// SetCount adds the count to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) SetCount(count *int32) {
	o.Count = count
}

// WithCustomerID adds the customerID to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) WithCustomerID(customerID string) *GetCustomersByIDProductListsByIDItemsParams {
	o.SetCustomerID(customerID)
	return o
}

// SetCustomerID adds the customerId to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) SetCustomerID(customerID string) {
	o.CustomerID = customerID
}

// WithExpand adds the expand to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) WithExpand(expand []string) *GetCustomersByIDProductListsByIDItemsParams {
	o.SetExpand(expand)
	return o
}

// SetExpand adds the expand to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) SetExpand(expand []string) {
	o.Expand = expand
}

// WithListID adds the listID to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) WithListID(listID string) *GetCustomersByIDProductListsByIDItemsParams {
	o.SetListID(listID)
	return o
}

// SetListID adds the listId to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) SetListID(listID string) {
	o.ListID = listID
}

// WithStart adds the start to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) WithStart(start *int32) *GetCustomersByIDProductListsByIDItemsParams {
	o.SetStart(start)
	return o
}

// SetStart adds the start to the get customers by ID product lists by ID items params
func (o *GetCustomersByIDProductListsByIDItemsParams) SetStart(start *int32) {
	o.Start = start
}

// WriteToRequest writes these params to a swagger request
func (o *GetCustomersByIDProductListsByIDItemsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Count != nil {

		// query param count
		var qrCount int32
		if o.Count != nil {
			qrCount = *o.Count
		}
		qCount := swag.FormatInt32(qrCount)
		if qCount != "" {
			if err := r.SetQueryParam("count", qCount); err != nil {
				return err
			}
		}

	}

	// path param customer_id
	if err := r.SetPathParam("customer_id", o.CustomerID); err != nil {
		return err
	}

	valuesExpand := o.Expand

	joinedExpand := swag.JoinByFormat(valuesExpand, "")
	// query array param expand
	if err := r.SetQueryParam("expand", joinedExpand...); err != nil {
		return err
	}

	// path param list_id
	if err := r.SetPathParam("list_id", o.ListID); err != nil {
		return err
	}

	if o.Start != nil {

		// query param start
		var qrStart int32
		if o.Start != nil {
			qrStart = *o.Start
		}
		qStart := swag.FormatInt32(qrStart)
		if qStart != "" {
			if err := r.SetQueryParam("start", qStart); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
