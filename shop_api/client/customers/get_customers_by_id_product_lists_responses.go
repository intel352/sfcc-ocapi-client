// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// GetCustomersByIDProductListsReader is a Reader for the GetCustomersByIDProductLists structure.
type GetCustomersByIDProductListsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomersByIDProductListsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewGetCustomersByIDProductListsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCustomersByIDProductListsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCustomersByIDProductListsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCustomersByIDProductListsBadRequest creates a GetCustomersByIDProductListsBadRequest with default headers values
func NewGetCustomersByIDProductListsBadRequest() *GetCustomersByIDProductListsBadRequest {
	return &GetCustomersByIDProductListsBadRequest{}
}

/*GetCustomersByIDProductListsBadRequest handles this case with default header values.

Indicates that the customerId URL parameter does not match the verified customer
             represented by the JWT token, not relevant when using OAuth.
*/
type GetCustomersByIDProductListsBadRequest struct {
}

func (o *GetCustomersByIDProductListsBadRequest) Error() string {
	return fmt.Sprintf("[GET /customers/{customer_id}/product_lists][%d] getCustomersByIdProductListsBadRequest ", 400)
}

func (o *GetCustomersByIDProductListsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomersByIDProductListsNotFound creates a GetCustomersByIDProductListsNotFound with default headers values
func NewGetCustomersByIDProductListsNotFound() *GetCustomersByIDProductListsNotFound {
	return &GetCustomersByIDProductListsNotFound{}
}

/*GetCustomersByIDProductListsNotFound handles this case with default header values.

Indicates that the customer with the given customer id is unknown for the site.
*/
type GetCustomersByIDProductListsNotFound struct {
}

func (o *GetCustomersByIDProductListsNotFound) Error() string {
	return fmt.Sprintf("[GET /customers/{customer_id}/product_lists][%d] getCustomersByIdProductListsNotFound ", 404)
}

func (o *GetCustomersByIDProductListsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomersByIDProductListsDefault creates a GetCustomersByIDProductListsDefault with default headers values
func NewGetCustomersByIDProductListsDefault(code int) *GetCustomersByIDProductListsDefault {
	return &GetCustomersByIDProductListsDefault{
		_statusCode: code,
	}
}

/*GetCustomersByIDProductListsDefault handles this case with default header values.

GetCustomersByIDProductListsDefault get customers by ID product lists default
*/
type GetCustomersByIDProductListsDefault struct {
	_statusCode int

	Payload *models.CustomerProductListResult
}

// Code gets the status code for the get customers by ID product lists default response
func (o *GetCustomersByIDProductListsDefault) Code() int {
	return o._statusCode
}

func (o *GetCustomersByIDProductListsDefault) Error() string {
	return fmt.Sprintf("[GET /customers/{customer_id}/product_lists][%d] getCustomersByIDProductLists default  %+v", o._statusCode, o.Payload)
}

func (o *GetCustomersByIDProductListsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerProductListResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
