// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutCustomersByIDPasswordReader is a Reader for the PutCustomersByIDPassword structure.
type PutCustomersByIDPasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutCustomersByIDPasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewPutCustomersByIDPasswordNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutCustomersByIDPasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutCustomersByIDPasswordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutCustomersByIDPasswordNoContent creates a PutCustomersByIDPasswordNoContent with default headers values
func NewPutCustomersByIDPasswordNoContent() *PutCustomersByIDPasswordNoContent {
	return &PutCustomersByIDPasswordNoContent{}
}

/*PutCustomersByIDPasswordNoContent handles this case with default header values.

PutCustomersByIDPasswordNoContent put customers by Id password no content
*/
type PutCustomersByIDPasswordNoContent struct {
}

func (o *PutCustomersByIDPasswordNoContent) Error() string {
	return fmt.Sprintf("[PUT /customers/{customer_id}/password][%d] putCustomersByIdPasswordNoContent ", 204)
}

func (o *PutCustomersByIDPasswordNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutCustomersByIDPasswordBadRequest creates a PutCustomersByIDPasswordBadRequest with default headers values
func NewPutCustomersByIDPasswordBadRequest() *PutCustomersByIDPasswordBadRequest {
	return &PutCustomersByIDPasswordBadRequest{}
}

/*PutCustomersByIDPasswordBadRequest handles this case with default header values.

If customerId URL parameter does not match the verified
             customer represented by the JWT token, not relevant when
             using OAuth.
*/
type PutCustomersByIDPasswordBadRequest struct {
}

func (o *PutCustomersByIDPasswordBadRequest) Error() string {
	return fmt.Sprintf("[PUT /customers/{customer_id}/password][%d] putCustomersByIdPasswordBadRequest ", 400)
}

func (o *PutCustomersByIDPasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutCustomersByIDPasswordNotFound creates a PutCustomersByIDPasswordNotFound with default headers values
func NewPutCustomersByIDPasswordNotFound() *PutCustomersByIDPasswordNotFound {
	return &PutCustomersByIDPasswordNotFound{}
}

/*PutCustomersByIDPasswordNotFound handles this case with default header values.

Indicates that the customer with the given customer id is
             unknown.
*/
type PutCustomersByIDPasswordNotFound struct {
}

func (o *PutCustomersByIDPasswordNotFound) Error() string {
	return fmt.Sprintf("[PUT /customers/{customer_id}/password][%d] putCustomersByIdPasswordNotFound ", 404)
}

func (o *PutCustomersByIDPasswordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
