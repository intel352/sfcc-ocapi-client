// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PatchCustomersByIDAddressesByIDReader is a Reader for the PatchCustomersByIDAddressesByID structure.
type PatchCustomersByIDAddressesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchCustomersByIDAddressesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPatchCustomersByIDAddressesByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchCustomersByIDAddressesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchCustomersByIDAddressesByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchCustomersByIDAddressesByIDBadRequest creates a PatchCustomersByIDAddressesByIDBadRequest with default headers values
func NewPatchCustomersByIDAddressesByIDBadRequest() *PatchCustomersByIDAddressesByIDBadRequest {
	return &PatchCustomersByIDAddressesByIDBadRequest{}
}

/*PatchCustomersByIDAddressesByIDBadRequest handles this case with default header values.

Indicates that the customerId URL parameter does not match the verified customer
             represented by the JWT token, not relevant when using OAuth. or Indicates that the provided new address name is already used for the
             customer.
*/
type PatchCustomersByIDAddressesByIDBadRequest struct {
}

func (o *PatchCustomersByIDAddressesByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /customers/{customer_id}/addresses/{address_name}][%d] patchCustomersByIdAddressesByIdBadRequest ", 400)
}

func (o *PatchCustomersByIDAddressesByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchCustomersByIDAddressesByIDNotFound creates a PatchCustomersByIDAddressesByIDNotFound with default headers values
func NewPatchCustomersByIDAddressesByIDNotFound() *PatchCustomersByIDAddressesByIDNotFound {
	return &PatchCustomersByIDAddressesByIDNotFound{}
}

/*PatchCustomersByIDAddressesByIDNotFound handles this case with default header values.

Indicates that the customer with the given customer id is unknown. or Indicates that the address with the given name in unknown for the
             customer with the given customer id.
*/
type PatchCustomersByIDAddressesByIDNotFound struct {
}

func (o *PatchCustomersByIDAddressesByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /customers/{customer_id}/addresses/{address_name}][%d] patchCustomersByIdAddressesByIdNotFound ", 404)
}

func (o *PatchCustomersByIDAddressesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchCustomersByIDAddressesByIDDefault creates a PatchCustomersByIDAddressesByIDDefault with default headers values
func NewPatchCustomersByIDAddressesByIDDefault(code int) *PatchCustomersByIDAddressesByIDDefault {
	return &PatchCustomersByIDAddressesByIDDefault{
		_statusCode: code,
	}
}

/*PatchCustomersByIDAddressesByIDDefault handles this case with default header values.

PatchCustomersByIDAddressesByIDDefault patch customers by ID addresses by ID default
*/
type PatchCustomersByIDAddressesByIDDefault struct {
	_statusCode int

	Payload *models.CustomerAddress
}

// Code gets the status code for the patch customers by ID addresses by ID default response
func (o *PatchCustomersByIDAddressesByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchCustomersByIDAddressesByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /customers/{customer_id}/addresses/{address_name}][%d] patchCustomersByIDAddressesByID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchCustomersByIDAddressesByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerAddress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
