// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// GetCustomersByIDPaymentInstrumentsByIDReader is a Reader for the GetCustomersByIDPaymentInstrumentsByID structure.
type GetCustomersByIDPaymentInstrumentsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomersByIDPaymentInstrumentsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 404:
		result := NewGetCustomersByIDPaymentInstrumentsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCustomersByIDPaymentInstrumentsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCustomersByIDPaymentInstrumentsByIDNotFound creates a GetCustomersByIDPaymentInstrumentsByIDNotFound with default headers values
func NewGetCustomersByIDPaymentInstrumentsByIDNotFound() *GetCustomersByIDPaymentInstrumentsByIDNotFound {
	return &GetCustomersByIDPaymentInstrumentsByIDNotFound{}
}

/*GetCustomersByIDPaymentInstrumentsByIDNotFound handles this case with default header values.

Indicates that the customer with the given customer id is
             unknown for the site. or Indicates that the payment instrument with the given id is
             unknown for the customer with the given customer id.
*/
type GetCustomersByIDPaymentInstrumentsByIDNotFound struct {
}

func (o *GetCustomersByIDPaymentInstrumentsByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /customers/{customer_id}/payment_instruments/{payment_instrument_id}][%d] getCustomersByIdPaymentInstrumentsByIdNotFound ", 404)
}

func (o *GetCustomersByIDPaymentInstrumentsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomersByIDPaymentInstrumentsByIDDefault creates a GetCustomersByIDPaymentInstrumentsByIDDefault with default headers values
func NewGetCustomersByIDPaymentInstrumentsByIDDefault(code int) *GetCustomersByIDPaymentInstrumentsByIDDefault {
	return &GetCustomersByIDPaymentInstrumentsByIDDefault{
		_statusCode: code,
	}
}

/*GetCustomersByIDPaymentInstrumentsByIDDefault handles this case with default header values.

GetCustomersByIDPaymentInstrumentsByIDDefault get customers by ID payment instruments by ID default
*/
type GetCustomersByIDPaymentInstrumentsByIDDefault struct {
	_statusCode int

	Payload *models.CustomerPaymentInstrument
}

// Code gets the status code for the get customers by ID payment instruments by ID default response
func (o *GetCustomersByIDPaymentInstrumentsByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetCustomersByIDPaymentInstrumentsByIDDefault) Error() string {
	return fmt.Sprintf("[GET /customers/{customer_id}/payment_instruments/{payment_instrument_id}][%d] getCustomersByIDPaymentInstrumentsByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetCustomersByIDPaymentInstrumentsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerPaymentInstrument)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
