// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PatchCustomersByIDReader is a Reader for the PatchCustomersByID structure.
type PatchCustomersByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchCustomersByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPatchCustomersByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchCustomersByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchCustomersByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchCustomersByIDBadRequest creates a PatchCustomersByIDBadRequest with default headers values
func NewPatchCustomersByIDBadRequest() *PatchCustomersByIDBadRequest {
	return &PatchCustomersByIDBadRequest{}
}

/*PatchCustomersByIDBadRequest handles this case with default header values.

If customerId URL parameter does not match the verified
             customer represented by the JWT token, not relevant when
             using OAuth. or Indicates that the provided email is not valid.
*/
type PatchCustomersByIDBadRequest struct {
}

func (o *PatchCustomersByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /customers/{customer_id}][%d] patchCustomersByIdBadRequest ", 400)
}

func (o *PatchCustomersByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchCustomersByIDNotFound creates a PatchCustomersByIDNotFound with default headers values
func NewPatchCustomersByIDNotFound() *PatchCustomersByIDNotFound {
	return &PatchCustomersByIDNotFound{}
}

/*PatchCustomersByIDNotFound handles this case with default header values.

Indicates that the customer with the given customer id is
             unknown.
*/
type PatchCustomersByIDNotFound struct {
}

func (o *PatchCustomersByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /customers/{customer_id}][%d] patchCustomersByIdNotFound ", 404)
}

func (o *PatchCustomersByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchCustomersByIDDefault creates a PatchCustomersByIDDefault with default headers values
func NewPatchCustomersByIDDefault(code int) *PatchCustomersByIDDefault {
	return &PatchCustomersByIDDefault{
		_statusCode: code,
	}
}

/*PatchCustomersByIDDefault handles this case with default header values.

PatchCustomersByIDDefault patch customers by ID default
*/
type PatchCustomersByIDDefault struct {
	_statusCode int

	Payload *models.Customer
}

// Code gets the status code for the patch customers by ID default response
func (o *PatchCustomersByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchCustomersByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /customers/{customer_id}][%d] patchCustomersByID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchCustomersByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Customer)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
