// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// GetCustomersByIDAddressesByIDReader is a Reader for the GetCustomersByIDAddressesByID structure.
type GetCustomersByIDAddressesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomersByIDAddressesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewGetCustomersByIDAddressesByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetCustomersByIDAddressesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetCustomersByIDAddressesByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCustomersByIDAddressesByIDBadRequest creates a GetCustomersByIDAddressesByIDBadRequest with default headers values
func NewGetCustomersByIDAddressesByIDBadRequest() *GetCustomersByIDAddressesByIDBadRequest {
	return &GetCustomersByIDAddressesByIDBadRequest{}
}

/*GetCustomersByIDAddressesByIDBadRequest handles this case with default header values.

Indicates that the customerId URL parameter does not match the verified customer
             represented by the JWT token, not relevant when using OAuth.
*/
type GetCustomersByIDAddressesByIDBadRequest struct {
}

func (o *GetCustomersByIDAddressesByIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /customers/{customer_id}/addresses/{address_name}][%d] getCustomersByIdAddressesByIdBadRequest ", 400)
}

func (o *GetCustomersByIDAddressesByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomersByIDAddressesByIDNotFound creates a GetCustomersByIDAddressesByIDNotFound with default headers values
func NewGetCustomersByIDAddressesByIDNotFound() *GetCustomersByIDAddressesByIDNotFound {
	return &GetCustomersByIDAddressesByIDNotFound{}
}

/*GetCustomersByIDAddressesByIDNotFound handles this case with default header values.

Indicates that the customer with the given customer id is unknown. or Indicates that the address with the given name in unknown for the
             customer with the given customer id.
*/
type GetCustomersByIDAddressesByIDNotFound struct {
}

func (o *GetCustomersByIDAddressesByIDNotFound) Error() string {
	return fmt.Sprintf("[GET /customers/{customer_id}/addresses/{address_name}][%d] getCustomersByIdAddressesByIdNotFound ", 404)
}

func (o *GetCustomersByIDAddressesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCustomersByIDAddressesByIDDefault creates a GetCustomersByIDAddressesByIDDefault with default headers values
func NewGetCustomersByIDAddressesByIDDefault(code int) *GetCustomersByIDAddressesByIDDefault {
	return &GetCustomersByIDAddressesByIDDefault{
		_statusCode: code,
	}
}

/*GetCustomersByIDAddressesByIDDefault handles this case with default header values.

GetCustomersByIDAddressesByIDDefault get customers by ID addresses by ID default
*/
type GetCustomersByIDAddressesByIDDefault struct {
	_statusCode int

	Payload *models.CustomerAddress
}

// Code gets the status code for the get customers by ID addresses by ID default response
func (o *GetCustomersByIDAddressesByIDDefault) Code() int {
	return o._statusCode
}

func (o *GetCustomersByIDAddressesByIDDefault) Error() string {
	return fmt.Sprintf("[GET /customers/{customer_id}/addresses/{address_name}][%d] getCustomersByIDAddressesByID default  %+v", o._statusCode, o.Payload)
}

func (o *GetCustomersByIDAddressesByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerAddress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
