// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteCustomersByIDAddressesByIDReader is a Reader for the DeleteCustomersByIDAddressesByID structure.
type DeleteCustomersByIDAddressesByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCustomersByIDAddressesByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteCustomersByIDAddressesByIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteCustomersByIDAddressesByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteCustomersByIDAddressesByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteCustomersByIDAddressesByIDNoContent creates a DeleteCustomersByIDAddressesByIDNoContent with default headers values
func NewDeleteCustomersByIDAddressesByIDNoContent() *DeleteCustomersByIDAddressesByIDNoContent {
	return &DeleteCustomersByIDAddressesByIDNoContent{}
}

/*DeleteCustomersByIDAddressesByIDNoContent handles this case with default header values.

DeleteCustomersByIDAddressesByIDNoContent delete customers by Id addresses by Id no content
*/
type DeleteCustomersByIDAddressesByIDNoContent struct {
}

func (o *DeleteCustomersByIDAddressesByIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /customers/{customer_id}/addresses/{address_name}][%d] deleteCustomersByIdAddressesByIdNoContent ", 204)
}

func (o *DeleteCustomersByIDAddressesByIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCustomersByIDAddressesByIDBadRequest creates a DeleteCustomersByIDAddressesByIDBadRequest with default headers values
func NewDeleteCustomersByIDAddressesByIDBadRequest() *DeleteCustomersByIDAddressesByIDBadRequest {
	return &DeleteCustomersByIDAddressesByIDBadRequest{}
}

/*DeleteCustomersByIDAddressesByIDBadRequest handles this case with default header values.

Indicates that the customerId URL parameter does not match the verified customer
             represented by the JWT token, not relevant when using OAuth.
*/
type DeleteCustomersByIDAddressesByIDBadRequest struct {
}

func (o *DeleteCustomersByIDAddressesByIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /customers/{customer_id}/addresses/{address_name}][%d] deleteCustomersByIdAddressesByIdBadRequest ", 400)
}

func (o *DeleteCustomersByIDAddressesByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCustomersByIDAddressesByIDNotFound creates a DeleteCustomersByIDAddressesByIDNotFound with default headers values
func NewDeleteCustomersByIDAddressesByIDNotFound() *DeleteCustomersByIDAddressesByIDNotFound {
	return &DeleteCustomersByIDAddressesByIDNotFound{}
}

/*DeleteCustomersByIDAddressesByIDNotFound handles this case with default header values.

Indicates that the customer with the given customer id is unknown. or Indicates that the address with the given name in unknown for the
             customer with the given customer id.
*/
type DeleteCustomersByIDAddressesByIDNotFound struct {
}

func (o *DeleteCustomersByIDAddressesByIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /customers/{customer_id}/addresses/{address_name}][%d] deleteCustomersByIdAddressesByIdNotFound ", 404)
}

func (o *DeleteCustomersByIDAddressesByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
