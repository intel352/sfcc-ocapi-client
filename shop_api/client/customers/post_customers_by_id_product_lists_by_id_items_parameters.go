// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// NewPostCustomersByIDProductListsByIDItemsParams creates a new PostCustomersByIDProductListsByIDItemsParams object
// with the default values initialized.
func NewPostCustomersByIDProductListsByIDItemsParams() *PostCustomersByIDProductListsByIDItemsParams {
	var ()
	return &PostCustomersByIDProductListsByIDItemsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostCustomersByIDProductListsByIDItemsParamsWithTimeout creates a new PostCustomersByIDProductListsByIDItemsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostCustomersByIDProductListsByIDItemsParamsWithTimeout(timeout time.Duration) *PostCustomersByIDProductListsByIDItemsParams {
	var ()
	return &PostCustomersByIDProductListsByIDItemsParams{

		timeout: timeout,
	}
}

// NewPostCustomersByIDProductListsByIDItemsParamsWithContext creates a new PostCustomersByIDProductListsByIDItemsParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostCustomersByIDProductListsByIDItemsParamsWithContext(ctx context.Context) *PostCustomersByIDProductListsByIDItemsParams {
	var ()
	return &PostCustomersByIDProductListsByIDItemsParams{

		Context: ctx,
	}
}

// NewPostCustomersByIDProductListsByIDItemsParamsWithHTTPClient creates a new PostCustomersByIDProductListsByIDItemsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostCustomersByIDProductListsByIDItemsParamsWithHTTPClient(client *http.Client) *PostCustomersByIDProductListsByIDItemsParams {
	var ()
	return &PostCustomersByIDProductListsByIDItemsParams{
		HTTPClient: client,
	}
}

/*PostCustomersByIDProductListsByIDItemsParams contains all the parameters to send to the API endpoint
for the post customers by ID product lists by ID items operation typically these are written to a http.Request
*/
type PostCustomersByIDProductListsByIDItemsParams struct {

	/*Body*/
	Body *models.CustomerProductListItem
	/*CustomerID
	  The id of the customer - owner of the product list.

	*/
	CustomerID string
	/*ListID
	  The id of the product list

	*/
	ListID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) WithTimeout(timeout time.Duration) *PostCustomersByIDProductListsByIDItemsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) WithContext(ctx context.Context) *PostCustomersByIDProductListsByIDItemsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) WithHTTPClient(client *http.Client) *PostCustomersByIDProductListsByIDItemsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) WithBody(body *models.CustomerProductListItem) *PostCustomersByIDProductListsByIDItemsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) SetBody(body *models.CustomerProductListItem) {
	o.Body = body
}

// WithCustomerID adds the customerID to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) WithCustomerID(customerID string) *PostCustomersByIDProductListsByIDItemsParams {
	o.SetCustomerID(customerID)
	return o
}

// SetCustomerID adds the customerId to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) SetCustomerID(customerID string) {
	o.CustomerID = customerID
}

// WithListID adds the listID to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) WithListID(listID string) *PostCustomersByIDProductListsByIDItemsParams {
	o.SetListID(listID)
	return o
}

// SetListID adds the listId to the post customers by ID product lists by ID items params
func (o *PostCustomersByIDProductListsByIDItemsParams) SetListID(listID string) {
	o.ListID = listID
}

// WriteToRequest writes these params to a swagger request
func (o *PostCustomersByIDProductListsByIDItemsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param customer_id
	if err := r.SetPathParam("customer_id", o.CustomerID); err != nil {
		return err
	}

	// path param list_id
	if err := r.SetPathParam("list_id", o.ListID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
