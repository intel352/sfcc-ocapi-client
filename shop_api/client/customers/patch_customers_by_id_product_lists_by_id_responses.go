// Code generated by go-swagger; DO NOT EDIT.

package customers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/intel352/sfcc-ocapi-client/shop_api/models"
)

// PatchCustomersByIDProductListsByIDReader is a Reader for the PatchCustomersByIDProductListsByID structure.
type PatchCustomersByIDProductListsByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchCustomersByIDProductListsByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 400:
		result := NewPatchCustomersByIDProductListsByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchCustomersByIDProductListsByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewPatchCustomersByIDProductListsByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchCustomersByIDProductListsByIDBadRequest creates a PatchCustomersByIDProductListsByIDBadRequest with default headers values
func NewPatchCustomersByIDProductListsByIDBadRequest() *PatchCustomersByIDProductListsByIDBadRequest {
	return &PatchCustomersByIDProductListsByIDBadRequest{}
}

/*PatchCustomersByIDProductListsByIDBadRequest handles this case with default header values.

Indicates that the customerId URL parameter does not match the verified customer
             represented by the JWT token, not relevant when using OAuth.
*/
type PatchCustomersByIDProductListsByIDBadRequest struct {
}

func (o *PatchCustomersByIDProductListsByIDBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /customers/{customer_id}/product_lists/{list_id}][%d] patchCustomersByIdProductListsByIdBadRequest ", 400)
}

func (o *PatchCustomersByIDProductListsByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchCustomersByIDProductListsByIDNotFound creates a PatchCustomersByIDProductListsByIDNotFound with default headers values
func NewPatchCustomersByIDProductListsByIDNotFound() *PatchCustomersByIDProductListsByIDNotFound {
	return &PatchCustomersByIDProductListsByIDNotFound{}
}

/*PatchCustomersByIDProductListsByIDNotFound handles this case with default header values.

Indicates that the customer with the given customer id is unknown for the site. or Indicates that the product list with the given list id is unknown for the
             site and the customer.
*/
type PatchCustomersByIDProductListsByIDNotFound struct {
}

func (o *PatchCustomersByIDProductListsByIDNotFound) Error() string {
	return fmt.Sprintf("[PATCH /customers/{customer_id}/product_lists/{list_id}][%d] patchCustomersByIdProductListsByIdNotFound ", 404)
}

func (o *PatchCustomersByIDProductListsByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchCustomersByIDProductListsByIDDefault creates a PatchCustomersByIDProductListsByIDDefault with default headers values
func NewPatchCustomersByIDProductListsByIDDefault(code int) *PatchCustomersByIDProductListsByIDDefault {
	return &PatchCustomersByIDProductListsByIDDefault{
		_statusCode: code,
	}
}

/*PatchCustomersByIDProductListsByIDDefault handles this case with default header values.

PatchCustomersByIDProductListsByIDDefault patch customers by ID product lists by ID default
*/
type PatchCustomersByIDProductListsByIDDefault struct {
	_statusCode int

	Payload *models.CustomerProductList
}

// Code gets the status code for the patch customers by ID product lists by ID default response
func (o *PatchCustomersByIDProductListsByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchCustomersByIDProductListsByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /customers/{customer_id}/product_lists/{list_id}][%d] patchCustomersByIDProductListsByID default  %+v", o._statusCode, o.Payload)
}

func (o *PatchCustomersByIDProductListsByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CustomerProductList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
